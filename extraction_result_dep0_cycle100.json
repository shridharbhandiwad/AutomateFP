{
  "extraction_metadata": {
    "dep_id": 0,
    "cycle_number": 100,
    "timestamp": 1663942559035.0,
    "extraction_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value.m_value.m_values",
    "extraction_status": "completed",
    "max_recursion_depth": 8,
    "extraction_levels": {},
    "timestamp_valid": true
  },
  "navigation_steps": {
    "step_1_root": {
      "level_name": "g_PerDepRunnable_m_depPort_out",
      "description": "Root level dependency data",
      "extraction_result": {
        "extraction_path": "g_PerDepRunnable_m_depPort_out",
        "current_depth": 0,
        "max_depth": 3,
        "data_type": "<class 'numpy.ndarray'>",
        "extraction_status": "success",
        "array_type": "structured",
        "shape": [
          1,
          1
        ],
        "field_names": [
          "m_collectionData",
          "m_listMemory",
          "m_listMetaData",
          "m_receivedValidUpdateExternal",
          "m_sequenceNumber",
          "time"
        ],
        "field_count": 6,
        "total_size": 1,
        "dtype": "[('m_collectionData', 'O'), ('m_listMemory', 'O'), ('m_listMetaData', 'O'), ('m_receivedValidUpdateExternal', 'O'), ('m_sequenceNumber', 'O'), ('time', 'O')]",
        "field_values": {
          "m_collectionData": {
            "field_name": "m_collectionData",
            "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['idCount', 'isObjListReset', 'previousSequenceId', 'previousSequenceMask', 'timeStamp'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "g_PerDepRunnable_m_depPort_out.m_collectionData",
              "current_depth": 1,
              "max_depth": 3,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "idCount",
                "isObjListReset",
                "previousSequenceId",
                "previousSequenceMask",
                "timeStamp"
              ],
              "field_count": 5,
              "total_size": 1,
              "dtype": "[('idCount', 'O'), ('isObjListReset', 'O'), ('previousSequenceId', 'O'), ('previousSequenceMask', 'O'), ('timeStamp', 'O')]",
              "field_values": {
                "idCount": {
                  "field_name": "idCount",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.idCount",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3
                    ]
                  }
                },
                "isObjListReset": {
                  "field_name": "isObjListReset",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.isObjListReset",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "previousSequenceId": {
                  "field_name": "previousSequenceId",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.previousSequenceId",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 942,
                    "sample_values": [
                      3033,
                      3035,
                      3037,
                      3039,
                      3041,
                      3042,
                      3044,
                      3046,
                      3048,
                      3049
                    ]
                  }
                },
                "previousSequenceMask": {
                  "field_name": "previousSequenceMask",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.previousSequenceMask",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 942,
                    "sample_values": [
                      512,
                      2560,
                      10752,
                      43520,
                      43522,
                      43526,
                      43542,
                      43606,
                      43862,
                      43862
                    ]
                  }
                },
                "timeStamp": {
                  "field_name": "timeStamp",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.timeStamp",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_timeStamp'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.timeStamp",
                    "current_depth": 2,
                    "max_depth": 3,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_timeStamp"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_timeStamp', 'O')]",
                    "field_values": {
                      "m_timeStamp": {
                        "field_name": "m_timeStamp",
                        "field_path": "g_PerDepRunnable_m_depPort_out.m_collectionData.timeStamp.m_timeStamp",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(1, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            1,
                            942
                          ],
                          "dtype": "int32",
                          "size": 942,
                          "sample_values": [
                            773633677,
                            773643508,
                            773651444,
                            773661143,
                            773669722,
                            773676931,
                            773684212,
                            773692660,
                            773699213,
                            773706022
                          ]
                        },
                        "recursion_stopped": "Max depth reached"
                      }
                    }
                  }
                }
              }
            }
          },
          "m_listMemory": {
            "field_name": "m_listMemory",
            "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['m_ownership', 'm_value'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "g_PerDepRunnable_m_depPort_out.m_listMemory",
              "current_depth": 1,
              "max_depth": 3,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "m_ownership",
                "m_value"
              ],
              "field_count": 2,
              "total_size": 1,
              "dtype": "[('m_ownership', 'O'), ('m_value', 'O')]",
              "field_values": {
                "m_ownership": {
                  "field_name": "m_ownership",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_ownership",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_value": {
                  "field_name": "m_value",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_next', 'm_prev', 'm_value'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value",
                    "current_depth": 2,
                    "max_depth": 3,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_next",
                      "m_prev",
                      "m_value"
                    ],
                    "field_count": 3,
                    "total_size": 1,
                    "dtype": "[('m_next', 'O'), ('m_prev', 'O'), ('m_value', 'O')]",
                    "field_values": {
                      "m_next": {
                        "field_name": "m_next",
                        "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value.m_next",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int16",
                          "size": 30144,
                          "sample_values": [
                            1,
                            1,
                            1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1
                          ]
                        },
                        "recursion_stopped": "Max depth reached"
                      },
                      "m_prev": {
                        "field_name": "m_prev",
                        "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value.m_prev",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int16",
                          "size": 30144,
                          "sample_values": [
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1,
                            -1
                          ]
                        },
                        "recursion_stopped": "Max depth reached"
                      },
                      "m_value": {
                        "field_name": "m_value",
                        "field_path": "g_PerDepRunnable_m_depPort_out.m_listMemory.m_value.m_value",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_values'], shape: (1, 1)",
                        "converted_value": {
                          "m_values": {
                            "m_AvgVObjDxError": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.28145885467529297,
                                0.43429112434387207,
                                0.5538162589073181,
                                0.6477983593940735,
                                0.6905969381332397,
                                0.7125735282897949,
                                0.7250534296035767,
                                0.7329494953155518,
                                0.7464084029197693
                              ]
                            },
                            "m_TransferredFromSep": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_additionalDepMembers": {
                              "m_additionalPostProcessBitField": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_areVideoAndDep4PlusWheelerBearingInconsistent": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_areVideoAndDepLatVelBearingInconsistent": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_areVideoAndDepLongiVelBearingInconsistent": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_contributingSensorUnreliable": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_cornerBasedInnovation": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              },
                              "m_cornerRadarVelocityOverGround": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              },
                              "m_hasSuspiciousVideoObjectJumps": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_implausibleRadarVrJumpCounter": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255
                                ]
                              },
                              "m_implausibleRadarVyJumpCounter": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_isObjectSensorPMovingLowAndVyDeviationHigh": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_isObjectSensorVyDeviationVeryHigh": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_isSuspiciousVideoCreatedFastCrossingObj": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_isVideoUpdatedAfterLongRadarOnlyPeriod": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_isWronglySplittedVruObjectFromLargerVehicle": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_normedRadarAngleInno": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.07154031097888947,
                                  -0.008150208741426468,
                                  -0.07581863552331924,
                                  -0.25352874398231506,
                                  -0.1331334114074707,
                                  -0.04033457115292549,
                                  -0.12786179780960083,
                                  -0.12835125625133514,
                                  -0.1298404186964035
                                ]
                              },
                              "m_normedRadarDrInno": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.0283228550106287,
                                  0.027538934722542763,
                                  -0.007434526924043894,
                                  -0.021942615509033203,
                                  0.09858298301696777,
                                  0.1424279659986496,
                                  0.020955979824066162,
                                  -0.033269595354795456,
                                  -0.04756626859307289
                                ]
                              },
                              "m_numCyclesWithoutMicroDoppler": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "m_radarVrOverGround": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  18.574792861938477,
                                  18.700416564941406,
                                  18.795713424682617,
                                  18.8829288482666,
                                  18.975099563598633,
                                  19.089622497558594,
                                  19.16509437561035,
                                  19.253755569458008,
                                  19.316547393798828
                                ]
                              },
                              "m_videoVAlpha": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.0059814453125,
                                  -0.0059814453125,
                                  -0.001953125,
                                  0.0,
                                  -0.0040283203125,
                                  -0.0059814453125,
                                  -0.0040283203125,
                                  -0.0040283203125,
                                  -0.001953125,
                                  -0.0040283203125
                                ]
                              },
                              "m_videoVelocityOverGround": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      18.034820556640625,
                                      18.16199493408203,
                                      18.283489227294922,
                                      18.44285011291504,
                                      18.506784439086914,
                                      18.62368392944336,
                                      18.677183151245117,
                                      18.7930965423584,
                                      18.89933204650879,
                                      18.987215042114258
                                    ]
                                  }
                                }
                              },
                              "m_videoYawAngle": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625
                                ]
                              },
                              "m_visibleEdgeLostCounter": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              }
                            },
                            "m_alternativeHypothesis": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "int32",
                              "size": 30144,
                              "sample_values": [
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544
                              ]
                            },
                            "m_avgAlphaInnovation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                -0.0019347303314134479,
                                -0.0006980852922424674,
                                -0.002382645383477211,
                                -0.007032947149127722,
                                -0.005665685050189495,
                                -0.0035495886113494635,
                                -0.005357804708182812,
                                -0.0057459985837340355,
                                -0.005908419843763113
                              ]
                            },
                            "m_avgDxInnovation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                -0.042484283447265625,
                                0.030687332153320312,
                                -0.00879049301147461,
                                -0.03393089771270752,
                                0.13888326287269592,
                                0.2438671588897705,
                                0.10751336812973022,
                                0.015013650059700012,
                                -0.03513697162270546
                              ]
                            },
                            "m_badSensorBasedInnoCount": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_changedObjectTypeBasedOnVelocity": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_cornerAngleInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                              ]
                            },
                            "m_cornerDrInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                              ]
                            },
                            "m_createdByVideoWithHighVy": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_currentOncomingCounterBasedOnLocations": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_dBRcs": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                20.453125,
                                20.46875,
                                18.791118621826172,
                                20.970394134521484,
                                21.607044219970703,
                                18.968467712402344,
                                16.68654441833496,
                                21.348798751831055,
                                24.95136260986328,
                                26.098665237426758
                              ]
                            },
                            "m_dimension": {
                              "m_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  9.90575885772705,
                                  11.515942573547363,
                                  11.785696983337402,
                                  11.752283096313477,
                                  11.911845207214355,
                                  11.711894989013672,
                                  12.433369636535645,
                                  11.987720489501953,
                                  12.642362594604492,
                                  12.149866104125977
                                ]
                              }
                            },
                            "m_dimensionCovarianceMatrixDiagonal": {
                              "m_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  1.0,
                                  0.7461724281311035,
                                  0.38841044902801514,
                                  0.2809573709964752,
                                  0.24513399600982666,
                                  0.23324796557426453,
                                  0.22935649752616882,
                                  0.22801098227500916,
                                  0.2276366949081421,
                                  0.22745272517204285
                                ]
                              }
                            },
                            "m_dxDistanceWhereObjStopped": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38,
                                3.4028234663852886e+38
                              ]
                            },
                            "m_elevation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.07859861850738525,
                                0.3721247613430023,
                                0.5187848806381226,
                                0.5742062926292419,
                                0.7198442220687866,
                                0.9085146188735962,
                                1.023313283920288,
                                1.0676262378692627,
                                1.0836786031723022,
                                1.046609878540039
                              ]
                            },
                            "m_elevationVCPFusedQM": {
                              "m_covarianceMatrix": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.12166212499141693,
                                      0.12240377068519592,
                                      0.12065700441598892,
                                      0.11053727567195892,
                                      0.11145932227373123,
                                      0.10398565977811813,
                                      0.10414627939462662,
                                      0.10506242513656616,
                                      0.10740521550178528,
                                      0.11029250174760818
                                    ]
                                  }
                                }
                              },
                              "m_muVector": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      -0.3459428548812866,
                                      -0.35945776104927063,
                                      -0.3167966604232788,
                                      -0.267256498336792,
                                      -0.28871822357177734,
                                      -0.31175294518470764,
                                      -0.3141113519668579,
                                      -0.33695560693740845,
                                      -0.3941979706287384,
                                      -0.4594446122646332
                                    ]
                                  }
                                }
                              }
                            },
                            "m_expectedVrHighEnoughForMuDopplerCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_filterType": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1
                              ]
                            },
                            "m_functionRelevanceBitField": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint16",
                              "size": 30144,
                              "sample_values": [
                                65535,
                                65535,
                                65535,
                                65535,
                                65535,
                                65535,
                                65535,
                                65535,
                                65535,
                                65535
                              ]
                            },
                            "m_heightVCPFusedQM": {
                              "m_covarianceMatrix": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.1811705231666565,
                                      0.11896289885044098,
                                      0.10590788722038269,
                                      0.09944309294223785,
                                      0.09893441945314407,
                                      0.09899625927209854,
                                      0.09813425689935684,
                                      0.09896426647901535,
                                      0.09915090352296829,
                                      0.09818144142627716
                                    ]
                                  }
                                }
                              },
                              "m_muVector": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      3.079423427581787,
                                      3.207869529724121,
                                      3.2648937702178955,
                                      3.287994146347046,
                                      3.295999050140381,
                                      3.303968906402588,
                                      3.311444044113159,
                                      3.311429500579834,
                                      3.311661958694458,
                                      3.312424659729004
                                    ]
                                  }
                                }
                              }
                            },
                            "m_id": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "int32",
                              "size": 30144,
                              "sample_values": [
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544,
                                118380544
                              ]
                            },
                            "m_idOfReplacedObject": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "int32",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_implausibleDepCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_initialPos": {
                              "m_data": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    52.683223724365234,
                                    53.51673126220703,
                                    53.844329833984375,
                                    53.856380462646484,
                                    53.97092056274414,
                                    53.977901458740234,
                                    54.4311408996582,
                                    54.228126525878906,
                                    54.55750274658203,
                                    54.32664489746094
                                  ]
                                }
                              }
                            },
                            "m_isCTModelUsedForPrediction": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isMeasurable": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                2,
                                19,
                                19,
                                19,
                                19,
                                3,
                                19,
                                19,
                                19,
                                19
                              ]
                            },
                            "m_isMeasured": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                3,
                                3,
                                3,
                                3,
                                3,
                                3,
                                3,
                                3,
                                3,
                                3
                              ]
                            },
                            "m_isOrientationImplausibleCompared2Vid": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isPossibleRadarCrossPathGhost": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isSuppressedDueToVideoOtcPostProcessing": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isSuppressedUntilNextVideoUpdate": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_isValid": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1
                              ]
                            },
                            "m_longitudinalSimilarObjectCycleCnt": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_microDopplerFilterState": {
                              "m_tap0": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  993968608,
                                  1016288258,
                                  1015597691,
                                  1013708735,
                                  1012374266,
                                  1012454646,
                                  1013388543,
                                  1013482296,
                                  1012872971,
                                  1012343456
                                ]
                              },
                              "m_tap1": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  2143289344,
                                  1016301373,
                                  1016288258,
                                  1015597691,
                                  1013708735,
                                  1012374266,
                                  1012454646,
                                  1013388543,
                                  1013482296,
                                  1012872971
                                ]
                              }
                            },
                            "m_microDopplerFiltered": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.002910725772380829,
                                0.0028794570825994015,
                                0.0028270285110920668,
                                0.0026313173584640026,
                                0.002346490742638707,
                                0.0021582283079624176,
                                0.0021492945961654186,
                                0.0022253619972616434,
                                0.002244438510388136,
                                0.0021828068420290947
                              ]
                            },
                            "m_modulationHistory": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint16",
                              "size": 30144,
                              "sample_values": [
                                512,
                                2560,
                                10752,
                                43520,
                                43522,
                                43526,
                                43542,
                                43606,
                                43862,
                                43862
                              ]
                            },
                            "m_movementHistoryCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                8,
                                8
                              ]
                            },
                            "m_movingLocationCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10
                              ]
                            },
                            "m_nonPlausibleLocationCnt": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numConsecutiveCyclesWithoutOncomingLocations": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numCyclesExisting": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint16",
                              "size": 30144,
                              "sample_values": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9
                              ]
                            },
                            "m_numCyclesNoModelBasedOrientationEstimationPossible": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numCyclesNoOrientationUpdate": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                1,
                                2,
                                3,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numCyclesSinceLastVideoUpdateWithAngularVelocity": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numCyclesSinceMotionModelChange": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                255,
                                255,
                                255,
                                255,
                                255,
                                255,
                                255,
                                255,
                                255,
                                255
                              ]
                            },
                            "m_numCyclesTwoWheelerRefPtUsedForUpdate": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_numMicroDopplerCycles": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_objectCorridorRelation": {
                              "m_objectBorderCrossingTimes": {
                                "m_hasValue": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                },
                                "m_storage": {
                                  "m_values": {
                                    "m_value": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          4,
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 120576,
                                        "sample_values": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "m_objectCorridorFractionalOverlap": {
                                "m_value": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      3,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 90432,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              }
                            },
                            "m_objectOrientationUnreliableCount": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_objectTypeTree": {
                              "m_objectTypes": {
                                "m_nonObstacle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    24,
                                    24,
                                    24,
                                    24,
                                    24,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                },
                                "m_obstacle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    101,
                                    101,
                                    101,
                                    101,
                                    101,
                                    125,
                                    125,
                                    125,
                                    125,
                                    125
                                  ]
                                },
                                "m_obstacleTypes": {
                                  "m_mobile": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      123,
                                      123,
                                      123,
                                      123,
                                      123,
                                      127,
                                      127,
                                      127,
                                      127,
                                      127
                                    ]
                                  },
                                  "m_mobileTypes": {
                                    "m_fourPlusWheeler": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116
                                      ]
                                    },
                                    "m_fourPlusWheelerTypes": {
                                      "m_passengerCar": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23
                                        ]
                                      },
                                      "m_truck": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101
                                        ]
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4
                                        ]
                                      }
                                    },
                                    "m_pedestrian": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    },
                                    "m_twoWheeler": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    },
                                    "m_twoWheelerTypes": {
                                      "m_bicycle": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          43,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42
                                        ]
                                      },
                                      "m_ptw": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          43,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42
                                        ]
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          42,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44
                                        ]
                                      }
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    }
                                  },
                                  "m_stationary": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      3,
                                      3,
                                      3,
                                      3,
                                      3,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ]
                                  },
                                  "m_stationaryTypes": {
                                    "m_roadsideBarrier": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64
                                      ]
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64
                                      ]
                                    }
                                  },
                                  "m_unknown": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      2,
                                      2,
                                      2,
                                      2,
                                      2,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  }
                                },
                                "m_unknown": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    3,
                                    3,
                                    3,
                                    3,
                                    3,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2
                                  ]
                                }
                              }
                            },
                            "m_orientationEstimate": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                -0.027612125501036644,
                                -0.04122607409954071,
                                -0.03458928316831589,
                                -0.027987228706479073,
                                -0.03491974622011185,
                                -0.039077553898096085,
                                -0.033640116453170776,
                                -0.031451329588890076,
                                -0.033946309238672256,
                                -0.03382166475057602
                              ]
                            },
                            "m_orientationUpdateStatus": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                4,
                                76,
                                204,
                                204,
                                204,
                                204,
                                204,
                                204,
                                204,
                                204
                              ]
                            },
                            "m_pNonObstacleRCSOnlyClassifier": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint16",
                              "size": 30144,
                              "sample_values": [
                                17,
                                18,
                                36,
                                19,
                                13,
                                29,
                                72,
                                36,
                                17,
                                9
                              ]
                            },
                            "m_perType": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1
                              ]
                            },
                            "m_postProcessBitField": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "int32",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_probHasBeenObservedExisting": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.9882439970970154,
                                0.9919129014015198,
                                0.9950000047683716,
                                0.9950000047683716,
                                0.9919161200523376,
                                0.9950000047683716,
                                0.9950000047683716,
                                0.9919190406799316,
                                0.9919191598892212,
                                0.9950000047683716
                              ]
                            },
                            "m_probHasBeenObservedMoving": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.5,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                              ]
                            },
                            "m_probIsCurrentlyExisting": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                              ]
                            },
                            "m_probIsCurrentlyMoving": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0,
                                1.0
                              ]
                            },
                            "m_radarAngleInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.07154031097888947,
                                0.008150208741426468,
                                0.07581863552331924,
                                0.25352874398231506,
                                0.1331334114074707,
                                0.04033457115292549,
                                0.12786179780960083,
                                0.12835125625133514,
                                0.1298404186964035
                              ]
                            },
                            "m_radarBasedInnovation": {
                              "m_data": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.0,
                                    -0.08496856689453125,
                                    0.08261680603027344,
                                    -0.02230358123779297,
                                    -0.06582784652709961,
                                    0.2957489490509033,
                                    0.4272838830947876,
                                    0.06286793947219849,
                                    -0.09980878233909607,
                                    -0.14269880950450897
                                  ]
                                }
                              }
                            },
                            "m_radarDrInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.0283228550106287,
                                0.027538934722542763,
                                0.007434526924043894,
                                0.021942615509033203,
                                0.09858298301696777,
                                0.1424279659986496,
                                0.020955979824066162,
                                0.033269595354795456,
                                0.04756626859307289
                              ]
                            },
                            "m_radarRawAlphaInnovation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.0,
                                0.003011849941685796,
                                -0.007436325773596764,
                                -0.020983852446079254,
                                -0.0015638975892215967,
                                0.0027987007051706314,
                                -0.010782452300190926,
                                -0.006910580676048994,
                                -0.006395683158189058
                              ]
                            },
                            "m_recentlyUsedFrontCornerMeasurementHandle": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_recentlyUsedVideoMeasurementHandle": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                127,
                                127,
                                127,
                                127,
                                127,
                                127,
                                127,
                                127,
                                127,
                                127
                              ]
                            },
                            "m_referencePointIdx": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                10,
                                10,
                                10,
                                10,
                                10,
                                10,
                                10,
                                10,
                                10,
                                10
                              ]
                            },
                            "m_relevantRadialInnovationInCm": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                25,
                                25,
                                25,
                                66,
                                66,
                                66,
                                66,
                                66
                              ]
                            },
                            "m_sensorMeasuredHistory": {
                              "m_isMeasuredHistory": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 60288,
                                  "sample_values": [
                                    1,
                                    3,
                                    7,
                                    15,
                                    31,
                                    63,
                                    127,
                                    255,
                                    255,
                                    255
                                  ]
                                }
                              }
                            },
                            "m_splitCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_state": {
                              "m_data": {
                                "m_vectorCovariancePair": {
                                  "m_covarianceMatrix": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          21,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 633024,
                                        "sample_values": [
                                          2.0927135944366455,
                                          0.9189332723617554,
                                          0.410939484834671,
                                          0.2529315948486328,
                                          0.188634991645813,
                                          0.15537485480308533,
                                          0.1285981684923172,
                                          0.10877839475870132,
                                          0.0905444473028183,
                                          0.09110672026872635
                                        ]
                                      }
                                    }
                                  },
                                  "m_muVector": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          6,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 180864,
                                        "sample_values": [
                                          47.730342864990234,
                                          47.75876998901367,
                                          47.95158004760742,
                                          47.98033905029297,
                                          48.0152587890625,
                                          48.12379455566406,
                                          48.218017578125,
                                          48.23808670043945,
                                          48.24025344848633,
                                          48.25518035888672
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "m_stationaryLocationsOnlyCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_stoppingSplitCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_suspiciousRefPointCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_totalNumCyclesWithOncomingLocations": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_transferredFromSepCycle": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_turnRateForCT": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_updateDetails": {
                              "m_memory": {
                                "m_values": {
                                  "m_measuredState": {
                                    "m_vectorCovariancePair": {
                                      "m_covarianceMatrix": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              10,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 5425920,
                                            "sample_values": [
                                              0.0,
                                              2.1378731727600098,
                                              0.9287123084068298,
                                              0.8940731883049011,
                                              1.198197364807129,
                                              1.7869110107421875,
                                              1.5785870552062988,
                                              1.5709190368652344,
                                              0.8850052952766418,
                                              0.9029588103294373
                                            ]
                                          }
                                        }
                                      },
                                      "m_muVector": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              4,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 2170368,
                                            "sample_values": [
                                              0.0,
                                              43.75524139404297,
                                              44.194786071777344,
                                              44.014347076416016,
                                              44.0501594543457,
                                              44.82819366455078,
                                              44.84610366821289,
                                              44.08784866333008,
                                              44.14451217651367,
                                              44.2125129699707
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "m_predictedState": {
                                    "m_data": {
                                      "m_rotInfo": {
                                        "m_cosAngle": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 542592,
                                              "sample_values": [
                                                1.0,
                                                1.0,
                                                0.9999915957450867,
                                                0.9999876022338867,
                                                0.9999890327453613,
                                                0.99969482421875,
                                                0.999439537525177,
                                                0.9994308948516846,
                                                0.9994500279426575,
                                                0.9994055032730103
                                              ]
                                            }
                                          }
                                        },
                                        "m_sinAngle": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 542592,
                                              "sample_values": [
                                                0.0,
                                                9.5367431640625e-06,
                                                -0.004080283921211958,
                                                -0.004967192187905312,
                                                -0.004666311666369438,
                                                -0.024700036272406578,
                                                -0.0334739126265049,
                                                -0.03373149782419205,
                                                -0.033159852027893066,
                                                -0.034474216401576996
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "m_vectorCovariancePair": {
                                        "m_covarianceMatrix": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                28,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 15192576,
                                              "sample_values": [
                                                0.0,
                                                2.094299077987671,
                                                0.9231420159339905,
                                                0.41476359963417053,
                                                0.25665122270584106,
                                                0.1893172711133957,
                                                0.15800701081752777,
                                                0.13214747607707977,
                                                0.11226329207420349,
                                                0.09155388176441193
                                              ]
                                            }
                                          }
                                        },
                                        "m_muVector": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                7,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 3798144,
                                              "sample_values": [
                                                0.0,
                                                47.78388977050781,
                                                47.802860260009766,
                                                47.999778747558594,
                                                48.01734924316406,
                                                48.0271110534668,
                                                48.14316940307617,
                                                48.24488067626953,
                                                48.26198196411133,
                                                48.25261688232422
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "m_refPoint": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      10,
                                      10,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15
                                    ]
                                  },
                                  "m_responsible": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "int32",
                                    "size": 542592,
                                    "sample_values": [
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10
                                    ]
                                  },
                                  "m_stateToUpdate": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            21,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 11394432,
                                          "sample_values": [
                                            0.0,
                                            2.0939643383026123,
                                            0.9230040311813354,
                                            0.41470709443092346,
                                            0.25661900639533997,
                                            0.18928663432598114,
                                            0.157979816198349,
                                            0.13212651014328003,
                                            0.11225050687789917,
                                            0.09153851866722107
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            6,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 3255552,
                                          "sample_values": [
                                            0.0,
                                            43.91292953491211,
                                            43.931968688964844,
                                            44.128883361816406,
                                            44.14637756347656,
                                            44.1555290222168,
                                            44.270851135253906,
                                            44.37248611450195,
                                            44.389591217041016,
                                            44.38005447387695
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "m_type": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      70,
                                      26,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10
                                    ]
                                  },
                                  "m_updatedState": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            21,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 11394432,
                                          "sample_values": [
                                            0.0,
                                            1.057685136795044,
                                            0.4616886079311371,
                                            0.2819005846977234,
                                            0.2094842940568924,
                                            0.17075717449188232,
                                            0.14154723286628723,
                                            0.1195850819349289,
                                            0.10000961273908615,
                                            0.10001303255558014
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            6,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 3255552,
                                          "sample_values": [
                                            0.0,
                                            47.701446533203125,
                                            47.92726135253906,
                                            47.957313537597656,
                                            47.995689392089844,
                                            48.09083557128906,
                                            48.193660736083984,
                                            48.21814727783203,
                                            48.23189163208008,
                                            48.2362060546875
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "m_used": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  }
                                }
                              },
                              "m_usedElements": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2
                                ]
                              }
                            },
                            "m_validModulations": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                1,
                                2,
                                2,
                                2,
                                2,
                                3,
                                4,
                                4,
                                4,
                                4
                              ]
                            },
                            "m_varianceOfTurnRateAfterPredictionWithCT": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_varianceTangentialAcc": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_videoAngleInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.061249855905771255,
                                0.04328545928001404,
                                0.026451347395777702,
                                0.0385286808013916,
                                0.041868142783641815,
                                0.02828996069729328,
                                0.020753171294927597,
                                0.02788494899868965,
                                0.027796609327197075,
                                0.023989690467715263
                              ]
                            },
                            "m_videoBasedInnovation": {
                              "m_data": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.6032695770263672,
                                    0.8645524978637695,
                                    0.8786702156066895,
                                    0.8955309391021729,
                                    0.9126378297805786,
                                    0.8658152222633362,
                                    0.8221592903137207,
                                    0.7923262119293213,
                                    0.7744818925857544,
                                    0.7806335091590881
                                  ]
                                }
                              }
                            },
                            "m_videoDrInnoDebugState": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                1.2649826203414705e-05,
                                1.7816908439272083e-05,
                                1.7986216334975325e-05,
                                1.8326689314562827e-05,
                                1.8632450519362465e-05,
                                1.767344838299323e-05,
                                1.662776412558742e-05,
                                1.609013088454958e-05,
                                1.562313445901964e-05,
                                1.5820956832612865e-05
                              ]
                            },
                            "m_videoInputWithOncomingVrCounter": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_videoInvTtc": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                -0.0009765625,
                                0.0,
                                0.0,
                                0.0,
                                0.0009765625,
                                0.0009765625,
                                0.001953125,
                                0.001953125,
                                0.001953125,
                                0.001953125
                              ]
                            },
                            "m_videoLaneAssociation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                2,
                                2,
                                2,
                                2,
                                2,
                                2,
                                2,
                                2,
                                2,
                                2
                              ]
                            },
                            "m_videoRawAlphaInnovation": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.002311463700607419,
                                0.0004497080226428807,
                                0.0001717614068184048,
                                0.0009318150696344674,
                                0.0008288651588372886,
                                0.00027010278427042067,
                                0.00023574801161885262,
                                0.0006414514500647783,
                                0.0004995903000235558,
                                0.0003704477858263999
                              ]
                            },
                            "m_videoVr": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.05089074745774269,
                                0.005320691037923098,
                                0.0017847266281023622,
                                -0.0,
                                -0.04202116280794144,
                                -0.03994278609752655,
                                -0.08787082135677338,
                                -0.08777899295091629,
                                -0.08993256837129593,
                                -0.08773421496152878
                              ]
                            },
                            "m_videoVy": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                -0.2813972532749176,
                                -0.28090161085128784,
                                -0.09170953929424286,
                                0.0,
                                -0.18864822387695312,
                                -0.2805553674697876,
                                -0.18782085180282593,
                                -0.1877799928188324,
                                -0.08995674550533295,
                                -0.18790820240974426
                              ]
                            },
                            "m_visualSignals": {
                              "m_visualSignalStatus": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9
                                ]
                              }
                            },
                            "m_vyInconsistent": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                              ]
                            },
                            "m_vyUnreliableAccumulated": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0,
                                0.0
                              ]
                            },
                            "m_wExistOfAssociatedVideoObject": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "float64",
                              "size": 30144,
                              "sample_values": [
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625,
                                0.9998931884765625
                              ]
                            },
                            "m_yawAngleTrustworthy": {
                              "type": "large_array",
                              "shape": [
                                32,
                                942
                              ],
                              "dtype": "uint8",
                              "size": 30144,
                              "sample_values": [
                                0,
                                0,
                                0,
                                0,
                                1,
                                1,
                                1,
                                1,
                                1,
                                1
                              ]
                            },
                            "m_yawAngleVCP": {
                              "m_covarianceMatrix": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0001968851574929431,
                                      0.00015834011719562113,
                                      0.002131055109202862,
                                      0.003750164993107319,
                                      0.0003186195099260658,
                                      0.00015409314073622227
                                    ]
                                  }
                                }
                              },
                              "m_muVector": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      2.8133392333984375e-05,
                                      -0.0017943382263183594,
                                      -0.0057332515716552734,
                                      -0.005822658538818359,
                                      -0.02469635009765625,
                                      -0.03347063064575195,
                                      -0.03372359275817871,
                                      -0.03315138816833496,
                                      -0.03447365760803223,
                                      -0.033808231353759766
                                    ]
                                  }
                                }
                              }
                            },
                            "sensorFilterFusHelper": {
                              "m_allActiveSensorTypesContributedInLastCycle": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "m_timePassedSinceAllActiveSensorTypesContributed": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint16",
                                  "size": 30144,
                                  "sample_values": [
                                    65535,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "m_timePassedSinceAllActiveSensorTypesStartedToContribute": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint16",
                                  "size": 30144,
                                  "sample_values": [
                                    65535,
                                    0,
                                    307,
                                    555,
                                    858,
                                    1126,
                                    1351,
                                    1579,
                                    1843,
                                    2048
                                  ]
                                }
                              },
                              "m_totalNumSensorUpdates": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10
                                  ]
                                }
                              },
                              "m_untrustworthyUpdates": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "m_updatesSinceLastSensorUpdate": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "recursion_stopped": "Max depth reached"
                      }
                    }
                  }
                }
              }
            }
          },
          "m_listMetaData": {
            "field_name": "m_listMetaData",
            "field_path": "g_PerDepRunnable_m_depPort_out.m_listMetaData",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['m_first', 'm_last', 'm_size'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "g_PerDepRunnable_m_depPort_out.m_listMetaData",
              "current_depth": 1,
              "max_depth": 3,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "m_first",
                "m_last",
                "m_size"
              ],
              "field_count": 3,
              "total_size": 1,
              "dtype": "[('m_first', 'O'), ('m_last', 'O'), ('m_size', 'O')]",
              "field_values": {
                "m_first": {
                  "field_name": "m_first",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_listMetaData.m_first",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_last": {
                  "field_name": "m_last",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_listMetaData.m_last",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      2,
                      2,
                      2,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_size": {
                  "field_name": "m_size",
                  "field_path": "g_PerDepRunnable_m_depPort_out.m_listMetaData.m_size",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(1, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      1,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 942,
                    "sample_values": [
                      3,
                      3,
                      3,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1
                    ]
                  }
                }
              }
            }
          },
          "m_receivedValidUpdateExternal": {
            "field_name": "m_receivedValidUpdateExternal",
            "field_path": "g_PerDepRunnable_m_depPort_out.m_receivedValidUpdateExternal",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=uint8, shape=(1, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                1,
                942
              ],
              "dtype": "uint8",
              "size": 942,
              "sample_values": [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
              ]
            }
          },
          "m_sequenceNumber": {
            "field_name": "m_sequenceNumber",
            "field_path": "g_PerDepRunnable_m_depPort_out.m_sequenceNumber",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=uint16, shape=(1, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                1,
                942
              ],
              "dtype": "uint16",
              "size": 942,
              "sample_values": [
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
              ]
            }
          },
          "time": {
            "field_name": "time",
            "field_path": "g_PerDepRunnable_m_depPort_out.time",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=float64, shape=(1, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                1,
                942
              ],
              "dtype": "float64",
              "size": 942,
              "sample_values": [
                1663942546803.0,
                1663942546941.0,
                1663942547073.0,
                1663942547197.0,
                1663942547315.0,
                1663942547436.0,
                1663942547554.0,
                1663942547666.0,
                1663942547780.0,
                1663942547893.0
              ]
            }
          }
        }
      },
      "success": true
    },
    "step_2_listmemory": {
      "level_name": "m_listMemory",
      "description": "List memory structure",
      "extraction_result": {
        "extraction_path": "m_listMemory",
        "current_depth": 0,
        "max_depth": 4,
        "data_type": "<class 'numpy.ndarray'>",
        "extraction_status": "success",
        "array_type": "structured",
        "shape": [
          1,
          1
        ],
        "field_names": [
          "m_ownership",
          "m_value"
        ],
        "field_count": 2,
        "total_size": 1,
        "dtype": "[('m_ownership', 'O'), ('m_value', 'O')]",
        "field_values": {
          "m_ownership": {
            "field_name": "m_ownership",
            "field_path": "m_listMemory.m_ownership",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=uint8, shape=(1, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                1,
                942
              ],
              "dtype": "uint8",
              "size": 942,
              "sample_values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]
            }
          },
          "m_value": {
            "field_name": "m_value",
            "field_path": "m_listMemory.m_value",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['m_next', 'm_prev', 'm_value'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "m_listMemory.m_value",
              "current_depth": 1,
              "max_depth": 4,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "m_next",
                "m_prev",
                "m_value"
              ],
              "field_count": 3,
              "total_size": 1,
              "dtype": "[('m_next', 'O'), ('m_prev', 'O'), ('m_value', 'O')]",
              "field_values": {
                "m_next": {
                  "field_name": "m_next",
                  "field_path": "m_listMemory.m_value.m_next",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int16",
                    "size": 30144,
                    "sample_values": [
                      1,
                      1,
                      1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1
                    ]
                  }
                },
                "m_prev": {
                  "field_name": "m_prev",
                  "field_path": "m_listMemory.m_value.m_prev",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int16",
                    "size": 30144,
                    "sample_values": [
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1,
                      -1
                    ]
                  }
                },
                "m_value": {
                  "field_name": "m_value",
                  "field_path": "m_listMemory.m_value.m_value",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_values'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_listMemory.m_value.m_value",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_values"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_values', 'O')]",
                    "field_values": {
                      "m_values": {
                        "field_name": "m_values",
                        "field_path": "m_listMemory.m_value.m_value.m_values",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_AvgVObjDxError', 'm_TransferredFromSep', 'm_additionalDepMembers', 'm_alternativeHypothesis', 'm_avgAlphaInnovation', 'm_avgDxInnovation', 'm_badSensorBasedInnoCount', 'm_changedObjectTypeBasedOnVelocity', 'm_cornerAngleInnoDebugState', 'm_cornerDrInnoDebugState', 'm_createdByVideoWithHighVy', 'm_currentOncomingCounterBasedOnLocations', 'm_dBRcs', 'm_dimension', 'm_dimensionCovarianceMatrixDiagonal', 'm_dxDistanceWhereObjStopped', 'm_elevation', 'm_elevationVCPFusedQM', 'm_expectedVrHighEnoughForMuDopplerCounter', 'm_filterType', 'm_functionRelevanceBitField', 'm_heightVCPFusedQM', 'm_id', 'm_idOfReplacedObject', 'm_implausibleDepCounter', 'm_initialPos', 'm_isCTModelUsedForPrediction', 'm_isMeasurable', 'm_isMeasured', 'm_isOrientationImplausibleCompared2Vid', 'm_isPossibleRadarCrossPathGhost', 'm_isSuppressedDueToVideoOtcPostProcessing', 'm_isSuppressedUntilNextVideoUpdate', 'm_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'm_isValid', 'm_longitudinalSimilarObjectCycleCnt', 'm_microDopplerFilterState', 'm_microDopplerFiltered', 'm_modulationHistory', 'm_movementHistoryCounter', 'm_movingLocationCounter', 'm_nonPlausibleLocationCnt', 'm_numConsecutiveCyclesWithoutOncomingLocations', 'm_numCyclesExisting', 'm_numCyclesNoModelBasedOrientationEstimationPossible', 'm_numCyclesNoOrientationUpdate', 'm_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'm_numCyclesSinceMotionModelChange', 'm_numCyclesTwoWheelerRefPtUsedForUpdate', 'm_numMicroDopplerCycles', 'm_objectCorridorRelation', 'm_objectOrientationUnreliableCount', 'm_objectTypeTree', 'm_orientationEstimate', 'm_orientationUpdateStatus', 'm_pNonObstacleRCSOnlyClassifier', 'm_perType', 'm_postProcessBitField', 'm_probHasBeenObservedExisting', 'm_probHasBeenObservedMoving', 'm_probIsCurrentlyExisting', 'm_probIsCurrentlyMoving', 'm_radarAngleInnoDebugState', 'm_radarBasedInnovation', 'm_radarDrInnoDebugState', 'm_radarRawAlphaInnovation', 'm_recentlyUsedFrontCornerMeasurementHandle', 'm_recentlyUsedVideoMeasurementHandle', 'm_referencePointIdx', 'm_relevantRadialInnovationInCm', 'm_sensorMeasuredHistory', 'm_splitCounter', 'm_state', 'm_stationaryLocationsOnlyCounter', 'm_stoppingSplitCounter', 'm_suspiciousRefPointCounter', 'm_totalNumCyclesWithOncomingLocations', 'm_transferredFromSepCycle', 'm_turnRateForCT', 'm_updateDetails', 'm_validModulations', 'm_varianceOfTurnRateAfterPredictionWithCT', 'm_varianceTangentialAcc', 'm_videoAngleInnoDebugState', 'm_videoBasedInnovation', 'm_videoDrInnoDebugState', 'm_videoInputWithOncomingVrCounter', 'm_videoInvTtc', 'm_videoLaneAssociation', 'm_videoRawAlphaInnovation', 'm_videoVr', 'm_videoVy', 'm_visualSignals', 'm_vyInconsistent', 'm_vyUnreliableAccumulated', 'm_wExistOfAssociatedVideoObject', 'm_yawAngleTrustworthy', 'm_yawAngleVCP', 'sensorFilterFusHelper'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_listMemory.m_value.m_value.m_values",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_AvgVObjDxError",
                            "m_TransferredFromSep",
                            "m_additionalDepMembers",
                            "m_alternativeHypothesis",
                            "m_avgAlphaInnovation",
                            "m_avgDxInnovation",
                            "m_badSensorBasedInnoCount",
                            "m_changedObjectTypeBasedOnVelocity",
                            "m_cornerAngleInnoDebugState",
                            "m_cornerDrInnoDebugState",
                            "m_createdByVideoWithHighVy",
                            "m_currentOncomingCounterBasedOnLocations",
                            "m_dBRcs",
                            "m_dimension",
                            "m_dimensionCovarianceMatrixDiagonal",
                            "m_dxDistanceWhereObjStopped",
                            "m_elevation",
                            "m_elevationVCPFusedQM",
                            "m_expectedVrHighEnoughForMuDopplerCounter",
                            "m_filterType",
                            "m_functionRelevanceBitField",
                            "m_heightVCPFusedQM",
                            "m_id",
                            "m_idOfReplacedObject",
                            "m_implausibleDepCounter",
                            "m_initialPos",
                            "m_isCTModelUsedForPrediction",
                            "m_isMeasurable",
                            "m_isMeasured",
                            "m_isOrientationImplausibleCompared2Vid",
                            "m_isPossibleRadarCrossPathGhost",
                            "m_isSuppressedDueToVideoOtcPostProcessing",
                            "m_isSuppressedUntilNextVideoUpdate",
                            "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                            "m_isValid",
                            "m_longitudinalSimilarObjectCycleCnt",
                            "m_microDopplerFilterState",
                            "m_microDopplerFiltered",
                            "m_modulationHistory",
                            "m_movementHistoryCounter",
                            "m_movingLocationCounter",
                            "m_nonPlausibleLocationCnt",
                            "m_numConsecutiveCyclesWithoutOncomingLocations",
                            "m_numCyclesExisting",
                            "m_numCyclesNoModelBasedOrientationEstimationPossible",
                            "m_numCyclesNoOrientationUpdate",
                            "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                            "m_numCyclesSinceMotionModelChange",
                            "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                            "m_numMicroDopplerCycles",
                            "m_objectCorridorRelation",
                            "m_objectOrientationUnreliableCount",
                            "m_objectTypeTree",
                            "m_orientationEstimate",
                            "m_orientationUpdateStatus",
                            "m_pNonObstacleRCSOnlyClassifier",
                            "m_perType",
                            "m_postProcessBitField",
                            "m_probHasBeenObservedExisting",
                            "m_probHasBeenObservedMoving",
                            "m_probIsCurrentlyExisting",
                            "m_probIsCurrentlyMoving",
                            "m_radarAngleInnoDebugState",
                            "m_radarBasedInnovation",
                            "m_radarDrInnoDebugState",
                            "m_radarRawAlphaInnovation",
                            "m_recentlyUsedFrontCornerMeasurementHandle",
                            "m_recentlyUsedVideoMeasurementHandle",
                            "m_referencePointIdx",
                            "m_relevantRadialInnovationInCm",
                            "m_sensorMeasuredHistory",
                            "m_splitCounter",
                            "m_state",
                            "m_stationaryLocationsOnlyCounter",
                            "m_stoppingSplitCounter",
                            "m_suspiciousRefPointCounter",
                            "m_totalNumCyclesWithOncomingLocations",
                            "m_transferredFromSepCycle",
                            "m_turnRateForCT",
                            "m_updateDetails",
                            "m_validModulations",
                            "m_varianceOfTurnRateAfterPredictionWithCT",
                            "m_varianceTangentialAcc",
                            "m_videoAngleInnoDebugState",
                            "m_videoBasedInnovation",
                            "m_videoDrInnoDebugState",
                            "m_videoInputWithOncomingVrCounter",
                            "m_videoInvTtc",
                            "m_videoLaneAssociation",
                            "m_videoRawAlphaInnovation",
                            "m_videoVr",
                            "m_videoVy",
                            "m_visualSignals",
                            "m_vyInconsistent",
                            "m_vyUnreliableAccumulated",
                            "m_wExistOfAssociatedVideoObject",
                            "m_yawAngleTrustworthy",
                            "m_yawAngleVCP",
                            "sensorFilterFusHelper"
                          ],
                          "field_count": 99,
                          "total_size": 1,
                          "dtype": "[('m_AvgVObjDxError', 'O'), ('m_TransferredFromSep', 'O'), ('m_additionalDepMembers', 'O'), ('m_alternativeHypothesis', 'O'), ('m_avgAlphaInnovation', 'O'), ('m_avgDxInnovation', 'O'), ('m_badSensorBasedInnoCount', 'O'), ('m_changedObjectTypeBasedOnVelocity', 'O'), ('m_cornerAngleInnoDebugState', 'O'), ('m_cornerDrInnoDebugState', 'O'), ('m_createdByVideoWithHighVy', 'O'), ('m_currentOncomingCounterBasedOnLocations', 'O'), ('m_dBRcs', 'O'), ('m_dimension', 'O'), ('m_dimensionCovarianceMatrixDiagonal', 'O'), ('m_dxDistanceWhereObjStopped', 'O'), ('m_elevation', 'O'), ('m_elevationVCPFusedQM', 'O'), ('m_expectedVrHighEnoughForMuDopplerCounter', 'O'), ('m_filterType', 'O'), ('m_functionRelevanceBitField', 'O'), ('m_heightVCPFusedQM', 'O'), ('m_id', 'O'), ('m_idOfReplacedObject', 'O'), ('m_implausibleDepCounter', 'O'), ('m_initialPos', 'O'), ('m_isCTModelUsedForPrediction', 'O'), ('m_isMeasurable', 'O'), ('m_isMeasured', 'O'), ('m_isOrientationImplausibleCompared2Vid', 'O'), ('m_isPossibleRadarCrossPathGhost', 'O'), ('m_isSuppressedDueToVideoOtcPostProcessing', 'O'), ('m_isSuppressedUntilNextVideoUpdate', 'O'), ('m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'O'), ('m_isValid', 'O'), ('m_longitudinalSimilarObjectCycleCnt', 'O'), ('m_microDopplerFilterState', 'O'), ('m_microDopplerFiltered', 'O'), ('m_modulationHistory', 'O'), ('m_movementHistoryCounter', 'O'), ('m_movingLocationCounter', 'O'), ('m_nonPlausibleLocationCnt', 'O'), ('m_numConsecutiveCyclesWithoutOncomingLocations', 'O'), ('m_numCyclesExisting', 'O'), ('m_numCyclesNoModelBasedOrientationEstimationPossible', 'O'), ('m_numCyclesNoOrientationUpdate', 'O'), ('m_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'O'), ('m_numCyclesSinceMotionModelChange', 'O'), ('m_numCyclesTwoWheelerRefPtUsedForUpdate', 'O'), ('m_numMicroDopplerCycles', 'O'), ('m_objectCorridorRelation', 'O'), ('m_objectOrientationUnreliableCount', 'O'), ('m_objectTypeTree', 'O'), ('m_orientationEstimate', 'O'), ('m_orientationUpdateStatus', 'O'), ('m_pNonObstacleRCSOnlyClassifier', 'O'), ('m_perType', 'O'), ('m_postProcessBitField', 'O'), ('m_probHasBeenObservedExisting', 'O'), ('m_probHasBeenObservedMoving', 'O'), ('m_probIsCurrentlyExisting', 'O'), ('m_probIsCurrentlyMoving', 'O'), ('m_radarAngleInnoDebugState', 'O'), ('m_radarBasedInnovation', 'O'), ('m_radarDrInnoDebugState', 'O'), ('m_radarRawAlphaInnovation', 'O'), ('m_recentlyUsedFrontCornerMeasurementHandle', 'O'), ('m_recentlyUsedVideoMeasurementHandle', 'O'), ('m_referencePointIdx', 'O'), ('m_relevantRadialInnovationInCm', 'O'), ('m_sensorMeasuredHistory', 'O'), ('m_splitCounter', 'O'), ('m_state', 'O'), ('m_stationaryLocationsOnlyCounter', 'O'), ('m_stoppingSplitCounter', 'O'), ('m_suspiciousRefPointCounter', 'O'), ('m_totalNumCyclesWithOncomingLocations', 'O'), ('m_transferredFromSepCycle', 'O'), ('m_turnRateForCT', 'O'), ('m_updateDetails', 'O'), ('m_validModulations', 'O'), ('m_varianceOfTurnRateAfterPredictionWithCT', 'O'), ('m_varianceTangentialAcc', 'O'), ('m_videoAngleInnoDebugState', 'O'), ('m_videoBasedInnovation', 'O'), ('m_videoDrInnoDebugState', 'O'), ('m_videoInputWithOncomingVrCounter', 'O'), ('m_videoInvTtc', 'O'), ('m_videoLaneAssociation', 'O'), ('m_videoRawAlphaInnovation', 'O'), ('m_videoVr', 'O'), ('m_videoVy', 'O'), ('m_visualSignals', 'O'), ('m_vyInconsistent', 'O'), ('m_vyUnreliableAccumulated', 'O'), ('m_wExistOfAssociatedVideoObject', 'O'), ('m_yawAngleTrustworthy', 'O'), ('m_yawAngleVCP', 'O'), ('sensorFilterFusHelper', 'O')]",
                          "field_values": {
                            "m_AvgVObjDxError": {
                              "field_name": "m_AvgVObjDxError",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_AvgVObjDxError",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.28145885467529297,
                                  0.43429112434387207,
                                  0.5538162589073181,
                                  0.6477983593940735,
                                  0.6905969381332397,
                                  0.7125735282897949,
                                  0.7250534296035767,
                                  0.7329494953155518,
                                  0.7464084029197693
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_TransferredFromSep": {
                              "field_name": "m_TransferredFromSep",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_TransferredFromSep",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_additionalDepMembers": {
                              "field_name": "m_additionalDepMembers",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_additionalDepMembers",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_additionalPostProcessBitField', 'm_areVideoAndDep4PlusWheelerBearingInconsistent', 'm_areVideoAndDepLatVelBearingInconsistent', 'm_areVideoAndDepLongiVelBearingInconsistent', 'm_contributingSensorUnreliable', 'm_cornerBasedInnovation', 'm_cornerRadarVelocityOverGround', 'm_hasSuspiciousVideoObjectJumps', 'm_implausibleRadarVrJumpCounter', 'm_implausibleRadarVyJumpCounter', 'm_isObjectSensorPMovingLowAndVyDeviationHigh', 'm_isObjectSensorVyDeviationVeryHigh', 'm_isSuspiciousVideoCreatedFastCrossingObj', 'm_isVideoUpdatedAfterLongRadarOnlyPeriod', 'm_isWronglySplittedVruObjectFromLargerVehicle', 'm_normedRadarAngleInno', 'm_normedRadarDrInno', 'm_numCyclesWithoutMicroDoppler', 'm_radarVrOverGround', 'm_videoVAlpha', 'm_videoVelocityOverGround', 'm_videoYawAngle', 'm_visibleEdgeLostCounter'], shape: (1, 1)",
                              "converted_value": {
                                "m_additionalPostProcessBitField": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "int32",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_areVideoAndDep4PlusWheelerBearingInconsistent": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_areVideoAndDepLatVelBearingInconsistent": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_areVideoAndDepLongiVelBearingInconsistent": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_contributingSensorUnreliable": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_cornerBasedInnovation": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        2,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 60288,
                                      "sample_values": [
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0
                                      ]
                                    }
                                  }
                                },
                                "m_cornerRadarVelocityOverGround": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        2,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 60288,
                                      "sample_values": [
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0
                                      ]
                                    }
                                  }
                                },
                                "m_hasSuspiciousVideoObjectJumps": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_implausibleRadarVrJumpCounter": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    255,
                                    255,
                                    255,
                                    255,
                                    255,
                                    255,
                                    255,
                                    255,
                                    255,
                                    255
                                  ]
                                },
                                "m_implausibleRadarVyJumpCounter": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_isObjectSensorPMovingLowAndVyDeviationHigh": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_isObjectSensorVyDeviationVeryHigh": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_isSuspiciousVideoCreatedFastCrossingObj": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_isVideoUpdatedAfterLongRadarOnlyPeriod": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_isWronglySplittedVruObjectFromLargerVehicle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_normedRadarAngleInno": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.0,
                                    -0.07154031097888947,
                                    -0.008150208741426468,
                                    -0.07581863552331924,
                                    -0.25352874398231506,
                                    -0.1331334114074707,
                                    -0.04033457115292549,
                                    -0.12786179780960083,
                                    -0.12835125625133514,
                                    -0.1298404186964035
                                  ]
                                },
                                "m_normedRadarDrInno": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.0,
                                    -0.0283228550106287,
                                    0.027538934722542763,
                                    -0.007434526924043894,
                                    -0.021942615509033203,
                                    0.09858298301696777,
                                    0.1424279659986496,
                                    0.020955979824066162,
                                    -0.033269595354795456,
                                    -0.04756626859307289
                                  ]
                                },
                                "m_numCyclesWithoutMicroDoppler": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_radarVrOverGround": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.0,
                                    18.574792861938477,
                                    18.700416564941406,
                                    18.795713424682617,
                                    18.8829288482666,
                                    18.975099563598633,
                                    19.089622497558594,
                                    19.16509437561035,
                                    19.253755569458008,
                                    19.316547393798828
                                  ]
                                },
                                "m_videoVAlpha": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    -0.0059814453125,
                                    -0.0059814453125,
                                    -0.001953125,
                                    0.0,
                                    -0.0040283203125,
                                    -0.0059814453125,
                                    -0.0040283203125,
                                    -0.0040283203125,
                                    -0.001953125,
                                    -0.0040283203125
                                  ]
                                },
                                "m_videoVelocityOverGround": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        2,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 60288,
                                      "sample_values": [
                                        18.034820556640625,
                                        18.16199493408203,
                                        18.283489227294922,
                                        18.44285011291504,
                                        18.506784439086914,
                                        18.62368392944336,
                                        18.677183151245117,
                                        18.7930965423584,
                                        18.89933204650879,
                                        18.987215042114258
                                      ]
                                    }
                                  }
                                },
                                "m_videoYawAngle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625,
                                    -0.0299072265625
                                  ]
                                },
                                "m_visibleEdgeLostCounter": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_alternativeHypothesis": {
                              "field_name": "m_alternativeHypothesis",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_alternativeHypothesis",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_avgAlphaInnovation": {
                              "field_name": "m_avgAlphaInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_avgAlphaInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.0019347303314134479,
                                  -0.0006980852922424674,
                                  -0.002382645383477211,
                                  -0.007032947149127722,
                                  -0.005665685050189495,
                                  -0.0035495886113494635,
                                  -0.005357804708182812,
                                  -0.0057459985837340355,
                                  -0.005908419843763113
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_avgDxInnovation": {
                              "field_name": "m_avgDxInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_avgDxInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.042484283447265625,
                                  0.030687332153320312,
                                  -0.00879049301147461,
                                  -0.03393089771270752,
                                  0.13888326287269592,
                                  0.2438671588897705,
                                  0.10751336812973022,
                                  0.015013650059700012,
                                  -0.03513697162270546
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_badSensorBasedInnoCount": {
                              "field_name": "m_badSensorBasedInnoCount",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_badSensorBasedInnoCount",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_changedObjectTypeBasedOnVelocity": {
                              "field_name": "m_changedObjectTypeBasedOnVelocity",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_changedObjectTypeBasedOnVelocity",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_cornerAngleInnoDebugState": {
                              "field_name": "m_cornerAngleInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_cornerAngleInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_cornerDrInnoDebugState": {
                              "field_name": "m_cornerDrInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_cornerDrInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_createdByVideoWithHighVy": {
                              "field_name": "m_createdByVideoWithHighVy",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_createdByVideoWithHighVy",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_currentOncomingCounterBasedOnLocations": {
                              "field_name": "m_currentOncomingCounterBasedOnLocations",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_currentOncomingCounterBasedOnLocations",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_dBRcs": {
                              "field_name": "m_dBRcs",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_dBRcs",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  20.453125,
                                  20.46875,
                                  18.791118621826172,
                                  20.970394134521484,
                                  21.607044219970703,
                                  18.968467712402344,
                                  16.68654441833496,
                                  21.348798751831055,
                                  24.95136260986328,
                                  26.098665237426758
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_dimension": {
                              "field_name": "m_dimension",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_dimension",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    9.90575885772705,
                                    11.515942573547363,
                                    11.785696983337402,
                                    11.752283096313477,
                                    11.911845207214355,
                                    11.711894989013672,
                                    12.433369636535645,
                                    11.987720489501953,
                                    12.642362594604492,
                                    12.149866104125977
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_dimensionCovarianceMatrixDiagonal": {
                              "field_name": "m_dimensionCovarianceMatrixDiagonal",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_dimensionCovarianceMatrixDiagonal",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    1.0,
                                    0.7461724281311035,
                                    0.38841044902801514,
                                    0.2809573709964752,
                                    0.24513399600982666,
                                    0.23324796557426453,
                                    0.22935649752616882,
                                    0.22801098227500916,
                                    0.2276366949081421,
                                    0.22745272517204285
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_dxDistanceWhereObjStopped": {
                              "field_name": "m_dxDistanceWhereObjStopped",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_dxDistanceWhereObjStopped",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38,
                                  3.4028234663852886e+38
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_elevation": {
                              "field_name": "m_elevation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_elevation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.07859861850738525,
                                  0.3721247613430023,
                                  0.5187848806381226,
                                  0.5742062926292419,
                                  0.7198442220687866,
                                  0.9085146188735962,
                                  1.023313283920288,
                                  1.0676262378692627,
                                  1.0836786031723022,
                                  1.046609878540039
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_elevationVCPFusedQM": {
                              "field_name": "m_elevationVCPFusedQM",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_elevationVCPFusedQM",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                              "converted_value": {
                                "m_covarianceMatrix": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        0.12166212499141693,
                                        0.12240377068519592,
                                        0.12065700441598892,
                                        0.11053727567195892,
                                        0.11145932227373123,
                                        0.10398565977811813,
                                        0.10414627939462662,
                                        0.10506242513656616,
                                        0.10740521550178528,
                                        0.11029250174760818
                                      ]
                                    }
                                  }
                                },
                                "m_muVector": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        -0.3459428548812866,
                                        -0.35945776104927063,
                                        -0.3167966604232788,
                                        -0.267256498336792,
                                        -0.28871822357177734,
                                        -0.31175294518470764,
                                        -0.3141113519668579,
                                        -0.33695560693740845,
                                        -0.3941979706287384,
                                        -0.4594446122646332
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_expectedVrHighEnoughForMuDopplerCounter": {
                              "field_name": "m_expectedVrHighEnoughForMuDopplerCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_expectedVrHighEnoughForMuDopplerCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_filterType": {
                              "field_name": "m_filterType",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_filterType",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_functionRelevanceBitField": {
                              "field_name": "m_functionRelevanceBitField",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_functionRelevanceBitField",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535,
                                  65535
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_heightVCPFusedQM": {
                              "field_name": "m_heightVCPFusedQM",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_heightVCPFusedQM",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                              "converted_value": {
                                "m_covarianceMatrix": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        0.1811705231666565,
                                        0.11896289885044098,
                                        0.10590788722038269,
                                        0.09944309294223785,
                                        0.09893441945314407,
                                        0.09899625927209854,
                                        0.09813425689935684,
                                        0.09896426647901535,
                                        0.09915090352296829,
                                        0.09818144142627716
                                      ]
                                    }
                                  }
                                },
                                "m_muVector": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        3.079423427581787,
                                        3.207869529724121,
                                        3.2648937702178955,
                                        3.287994146347046,
                                        3.295999050140381,
                                        3.303968906402588,
                                        3.311444044113159,
                                        3.311429500579834,
                                        3.311661958694458,
                                        3.312424659729004
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_id": {
                              "field_name": "m_id",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_id",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544,
                                  118380544
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_idOfReplacedObject": {
                              "field_name": "m_idOfReplacedObject",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_idOfReplacedObject",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_implausibleDepCounter": {
                              "field_name": "m_implausibleDepCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_implausibleDepCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_initialPos": {
                              "field_name": "m_initialPos",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_initialPos",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      52.683223724365234,
                                      53.51673126220703,
                                      53.844329833984375,
                                      53.856380462646484,
                                      53.97092056274414,
                                      53.977901458740234,
                                      54.4311408996582,
                                      54.228126525878906,
                                      54.55750274658203,
                                      54.32664489746094
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isCTModelUsedForPrediction": {
                              "field_name": "m_isCTModelUsedForPrediction",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isCTModelUsedForPrediction",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isMeasurable": {
                              "field_name": "m_isMeasurable",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isMeasurable",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  2,
                                  19,
                                  19,
                                  19,
                                  19,
                                  3,
                                  19,
                                  19,
                                  19,
                                  19
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isMeasured": {
                              "field_name": "m_isMeasured",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isMeasured",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  3
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isOrientationImplausibleCompared2Vid": {
                              "field_name": "m_isOrientationImplausibleCompared2Vid",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isOrientationImplausibleCompared2Vid",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isPossibleRadarCrossPathGhost": {
                              "field_name": "m_isPossibleRadarCrossPathGhost",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isPossibleRadarCrossPathGhost",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isSuppressedDueToVideoOtcPostProcessing": {
                              "field_name": "m_isSuppressedDueToVideoOtcPostProcessing",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isSuppressedDueToVideoOtcPostProcessing",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isSuppressedUntilNextVideoUpdate": {
                              "field_name": "m_isSuppressedUntilNextVideoUpdate",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isSuppressedUntilNextVideoUpdate",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr": {
                              "field_name": "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isValid": {
                              "field_name": "m_isValid",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_isValid",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_longitudinalSimilarObjectCycleCnt": {
                              "field_name": "m_longitudinalSimilarObjectCycleCnt",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_longitudinalSimilarObjectCycleCnt",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_microDopplerFilterState": {
                              "field_name": "m_microDopplerFilterState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_microDopplerFilterState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_tap0', 'm_tap1'], shape: (1, 1)",
                              "converted_value": {
                                "m_tap0": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "int32",
                                  "size": 30144,
                                  "sample_values": [
                                    993968608,
                                    1016288258,
                                    1015597691,
                                    1013708735,
                                    1012374266,
                                    1012454646,
                                    1013388543,
                                    1013482296,
                                    1012872971,
                                    1012343456
                                  ]
                                },
                                "m_tap1": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "int32",
                                  "size": 30144,
                                  "sample_values": [
                                    2143289344,
                                    1016301373,
                                    1016288258,
                                    1015597691,
                                    1013708735,
                                    1012374266,
                                    1012454646,
                                    1013388543,
                                    1013482296,
                                    1012872971
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_microDopplerFiltered": {
                              "field_name": "m_microDopplerFiltered",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_microDopplerFiltered",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.002910725772380829,
                                  0.0028794570825994015,
                                  0.0028270285110920668,
                                  0.0026313173584640026,
                                  0.002346490742638707,
                                  0.0021582283079624176,
                                  0.0021492945961654186,
                                  0.0022253619972616434,
                                  0.002244438510388136,
                                  0.0021828068420290947
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_modulationHistory": {
                              "field_name": "m_modulationHistory",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_modulationHistory",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  512,
                                  2560,
                                  10752,
                                  43520,
                                  43522,
                                  43526,
                                  43542,
                                  43606,
                                  43862,
                                  43862
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_movementHistoryCounter": {
                              "field_name": "m_movementHistoryCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_movementHistoryCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  8,
                                  8
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_movingLocationCounter": {
                              "field_name": "m_movingLocationCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_movingLocationCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9,
                                  10
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_nonPlausibleLocationCnt": {
                              "field_name": "m_nonPlausibleLocationCnt",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_nonPlausibleLocationCnt",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numConsecutiveCyclesWithoutOncomingLocations": {
                              "field_name": "m_numConsecutiveCyclesWithoutOncomingLocations",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numConsecutiveCyclesWithoutOncomingLocations",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesExisting": {
                              "field_name": "m_numCyclesExisting",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesExisting",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesNoModelBasedOrientationEstimationPossible": {
                              "field_name": "m_numCyclesNoModelBasedOrientationEstimationPossible",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesNoModelBasedOrientationEstimationPossible",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesNoOrientationUpdate": {
                              "field_name": "m_numCyclesNoOrientationUpdate",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesNoOrientationUpdate",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesSinceLastVideoUpdateWithAngularVelocity": {
                              "field_name": "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesSinceMotionModelChange": {
                              "field_name": "m_numCyclesSinceMotionModelChange",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesSinceMotionModelChange",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesTwoWheelerRefPtUsedForUpdate": {
                              "field_name": "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numCyclesTwoWheelerRefPtUsedForUpdate",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numMicroDopplerCycles": {
                              "field_name": "m_numMicroDopplerCycles",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_numMicroDopplerCycles",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_objectCorridorRelation": {
                              "field_name": "m_objectCorridorRelation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_objectCorridorRelation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_objectBorderCrossingTimes', 'm_objectCorridorFractionalOverlap'], shape: (1, 1)",
                              "converted_value": {
                                "m_objectBorderCrossingTimes": {
                                  "m_hasValue": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  },
                                  "m_storage": {
                                    "m_values": {
                                      "m_value": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            4,
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 120576,
                                          "sample_values": [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "m_objectCorridorFractionalOverlap": {
                                  "m_value": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        3,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 90432,
                                      "sample_values": [
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_objectOrientationUnreliableCount": {
                              "field_name": "m_objectOrientationUnreliableCount",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_objectOrientationUnreliableCount",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_objectTypeTree": {
                              "field_name": "m_objectTypeTree",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_objectTypeTree",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_objectTypes'], shape: (1, 1)",
                              "converted_value": {
                                "m_objectTypes": {
                                  "m_nonObstacle": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      24,
                                      24,
                                      24,
                                      24,
                                      24,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  },
                                  "m_obstacle": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      101,
                                      101,
                                      101,
                                      101,
                                      101,
                                      125,
                                      125,
                                      125,
                                      125,
                                      125
                                    ]
                                  },
                                  "m_obstacleTypes": {
                                    "m_mobile": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        123,
                                        123,
                                        123,
                                        123,
                                        123,
                                        127,
                                        127,
                                        127,
                                        127,
                                        127
                                      ]
                                    },
                                    "m_mobileTypes": {
                                      "m_fourPlusWheeler": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          116,
                                          116,
                                          116,
                                          116,
                                          116,
                                          116,
                                          116,
                                          116,
                                          116,
                                          116
                                        ]
                                      },
                                      "m_fourPlusWheelerTypes": {
                                        "m_passengerCar": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            23,
                                            23,
                                            23,
                                            23,
                                            23,
                                            23,
                                            23,
                                            23,
                                            23,
                                            23
                                          ]
                                        },
                                        "m_truck": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            101,
                                            101,
                                            101,
                                            101,
                                            101,
                                            101,
                                            101,
                                            101,
                                            101,
                                            101
                                          ]
                                        },
                                        "m_unknown": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            4,
                                            4,
                                            4,
                                            4,
                                            4,
                                            4,
                                            4,
                                            4,
                                            4,
                                            4
                                          ]
                                        }
                                      },
                                      "m_pedestrian": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4
                                        ]
                                      },
                                      "m_twoWheeler": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4
                                        ]
                                      },
                                      "m_twoWheelerTypes": {
                                        "m_bicycle": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            43,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42
                                          ]
                                        },
                                        "m_ptw": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            43,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42,
                                            42
                                          ]
                                        },
                                        "m_unknown": {
                                          "type": "large_array",
                                          "shape": [
                                            32,
                                            942
                                          ],
                                          "dtype": "uint8",
                                          "size": 30144,
                                          "sample_values": [
                                            42,
                                            44,
                                            44,
                                            44,
                                            44,
                                            44,
                                            44,
                                            44,
                                            44,
                                            44
                                          ]
                                        }
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4
                                        ]
                                      }
                                    },
                                    "m_stationary": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        3,
                                        3,
                                        3,
                                        3,
                                        3,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                      ]
                                    },
                                    "m_stationaryTypes": {
                                      "m_roadsideBarrier": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64
                                        ]
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64,
                                          64
                                        ]
                                      }
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        2,
                                        2,
                                        2,
                                        2,
                                        2,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1
                                      ]
                                    }
                                  },
                                  "m_unknown": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      3,
                                      3,
                                      3,
                                      3,
                                      3,
                                      2,
                                      2,
                                      2,
                                      2,
                                      2
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_orientationEstimate": {
                              "field_name": "m_orientationEstimate",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_orientationEstimate",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.027612125501036644,
                                  -0.04122607409954071,
                                  -0.03458928316831589,
                                  -0.027987228706479073,
                                  -0.03491974622011185,
                                  -0.039077553898096085,
                                  -0.033640116453170776,
                                  -0.031451329588890076,
                                  -0.033946309238672256,
                                  -0.03382166475057602
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_orientationUpdateStatus": {
                              "field_name": "m_orientationUpdateStatus",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_orientationUpdateStatus",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  4,
                                  76,
                                  204,
                                  204,
                                  204,
                                  204,
                                  204,
                                  204,
                                  204,
                                  204
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_pNonObstacleRCSOnlyClassifier": {
                              "field_name": "m_pNonObstacleRCSOnlyClassifier",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_pNonObstacleRCSOnlyClassifier",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  17,
                                  18,
                                  36,
                                  19,
                                  13,
                                  29,
                                  72,
                                  36,
                                  17,
                                  9
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_perType": {
                              "field_name": "m_perType",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_perType",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_postProcessBitField": {
                              "field_name": "m_postProcessBitField",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_postProcessBitField",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_probHasBeenObservedExisting": {
                              "field_name": "m_probHasBeenObservedExisting",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_probHasBeenObservedExisting",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.9882439970970154,
                                  0.9919129014015198,
                                  0.9950000047683716,
                                  0.9950000047683716,
                                  0.9919161200523376,
                                  0.9950000047683716,
                                  0.9950000047683716,
                                  0.9919190406799316,
                                  0.9919191598892212,
                                  0.9950000047683716
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_probHasBeenObservedMoving": {
                              "field_name": "m_probHasBeenObservedMoving",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_probHasBeenObservedMoving",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.5,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_probIsCurrentlyExisting": {
                              "field_name": "m_probIsCurrentlyExisting",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_probIsCurrentlyExisting",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_probIsCurrentlyMoving": {
                              "field_name": "m_probIsCurrentlyMoving",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_probIsCurrentlyMoving",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0,
                                  1.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_radarAngleInnoDebugState": {
                              "field_name": "m_radarAngleInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_radarAngleInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.07154031097888947,
                                  0.008150208741426468,
                                  0.07581863552331924,
                                  0.25352874398231506,
                                  0.1331334114074707,
                                  0.04033457115292549,
                                  0.12786179780960083,
                                  0.12835125625133514,
                                  0.1298404186964035
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_radarBasedInnovation": {
                              "field_name": "m_radarBasedInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_radarBasedInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.0,
                                      -0.08496856689453125,
                                      0.08261680603027344,
                                      -0.02230358123779297,
                                      -0.06582784652709961,
                                      0.2957489490509033,
                                      0.4272838830947876,
                                      0.06286793947219849,
                                      -0.09980878233909607,
                                      -0.14269880950450897
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_radarDrInnoDebugState": {
                              "field_name": "m_radarDrInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_radarDrInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.0283228550106287,
                                  0.027538934722542763,
                                  0.007434526924043894,
                                  0.021942615509033203,
                                  0.09858298301696777,
                                  0.1424279659986496,
                                  0.020955979824066162,
                                  0.033269595354795456,
                                  0.04756626859307289
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_radarRawAlphaInnovation": {
                              "field_name": "m_radarRawAlphaInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_radarRawAlphaInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.0,
                                  0.003011849941685796,
                                  -0.007436325773596764,
                                  -0.020983852446079254,
                                  -0.0015638975892215967,
                                  0.0027987007051706314,
                                  -0.010782452300190926,
                                  -0.006910580676048994,
                                  -0.006395683158189058
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_recentlyUsedFrontCornerMeasurementHandle": {
                              "field_name": "m_recentlyUsedFrontCornerMeasurementHandle",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_recentlyUsedFrontCornerMeasurementHandle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_recentlyUsedVideoMeasurementHandle": {
                              "field_name": "m_recentlyUsedVideoMeasurementHandle",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_recentlyUsedVideoMeasurementHandle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  127,
                                  127,
                                  127,
                                  127,
                                  127,
                                  127,
                                  127,
                                  127,
                                  127,
                                  127
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_referencePointIdx": {
                              "field_name": "m_referencePointIdx",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_referencePointIdx",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  10,
                                  10,
                                  10,
                                  10,
                                  10,
                                  10,
                                  10,
                                  10,
                                  10,
                                  10
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_relevantRadialInnovationInCm": {
                              "field_name": "m_relevantRadialInnovationInCm",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_relevantRadialInnovationInCm",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  25,
                                  25,
                                  25,
                                  66,
                                  66,
                                  66,
                                  66,
                                  66
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_sensorMeasuredHistory": {
                              "field_name": "m_sensorMeasuredHistory",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_sensorMeasuredHistory",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_isMeasuredHistory'], shape: (1, 1)",
                              "converted_value": {
                                "m_isMeasuredHistory": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 60288,
                                    "sample_values": [
                                      1,
                                      3,
                                      7,
                                      15,
                                      31,
                                      63,
                                      127,
                                      255,
                                      255,
                                      255
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_splitCounter": {
                              "field_name": "m_splitCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_splitCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_state": {
                              "field_name": "m_state",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_state",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_vectorCovariancePair": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            21,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 633024,
                                          "sample_values": [
                                            2.0927135944366455,
                                            0.9189332723617554,
                                            0.410939484834671,
                                            0.2529315948486328,
                                            0.188634991645813,
                                            0.15537485480308533,
                                            0.1285981684923172,
                                            0.10877839475870132,
                                            0.0905444473028183,
                                            0.09110672026872635
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            6,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 180864,
                                          "sample_values": [
                                            47.730342864990234,
                                            47.75876998901367,
                                            47.95158004760742,
                                            47.98033905029297,
                                            48.0152587890625,
                                            48.12379455566406,
                                            48.218017578125,
                                            48.23808670043945,
                                            48.24025344848633,
                                            48.25518035888672
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_stationaryLocationsOnlyCounter": {
                              "field_name": "m_stationaryLocationsOnlyCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_stationaryLocationsOnlyCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_stoppingSplitCounter": {
                              "field_name": "m_stoppingSplitCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_stoppingSplitCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_suspiciousRefPointCounter": {
                              "field_name": "m_suspiciousRefPointCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_suspiciousRefPointCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_totalNumCyclesWithOncomingLocations": {
                              "field_name": "m_totalNumCyclesWithOncomingLocations",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_totalNumCyclesWithOncomingLocations",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_transferredFromSepCycle": {
                              "field_name": "m_transferredFromSepCycle",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_transferredFromSepCycle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_turnRateForCT": {
                              "field_name": "m_turnRateForCT",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_turnRateForCT",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_updateDetails": {
                              "field_name": "m_updateDetails",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_updateDetails",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_memory', 'm_usedElements'], shape: (1, 1)",
                              "converted_value": {
                                "m_memory": {
                                  "m_values": {
                                    "m_measuredState": {
                                      "m_vectorCovariancePair": {
                                        "m_covarianceMatrix": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                10,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 5425920,
                                              "sample_values": [
                                                0.0,
                                                2.1378731727600098,
                                                0.9287123084068298,
                                                0.8940731883049011,
                                                1.198197364807129,
                                                1.7869110107421875,
                                                1.5785870552062988,
                                                1.5709190368652344,
                                                0.8850052952766418,
                                                0.9029588103294373
                                              ]
                                            }
                                          }
                                        },
                                        "m_muVector": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                4,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 2170368,
                                              "sample_values": [
                                                0.0,
                                                43.75524139404297,
                                                44.194786071777344,
                                                44.014347076416016,
                                                44.0501594543457,
                                                44.82819366455078,
                                                44.84610366821289,
                                                44.08784866333008,
                                                44.14451217651367,
                                                44.2125129699707
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "m_predictedState": {
                                      "m_data": {
                                        "m_rotInfo": {
                                          "m_cosAngle": {
                                            "m_data": {
                                              "m_value": {
                                                "type": "large_array",
                                                "shape": [
                                                  18,
                                                  32,
                                                  942
                                                ],
                                                "dtype": "float64",
                                                "size": 542592,
                                                "sample_values": [
                                                  1.0,
                                                  1.0,
                                                  0.9999915957450867,
                                                  0.9999876022338867,
                                                  0.9999890327453613,
                                                  0.99969482421875,
                                                  0.999439537525177,
                                                  0.9994308948516846,
                                                  0.9994500279426575,
                                                  0.9994055032730103
                                                ]
                                              }
                                            }
                                          },
                                          "m_sinAngle": {
                                            "m_data": {
                                              "m_value": {
                                                "type": "large_array",
                                                "shape": [
                                                  18,
                                                  32,
                                                  942
                                                ],
                                                "dtype": "float64",
                                                "size": 542592,
                                                "sample_values": [
                                                  0.0,
                                                  9.5367431640625e-06,
                                                  -0.004080283921211958,
                                                  -0.004967192187905312,
                                                  -0.004666311666369438,
                                                  -0.024700036272406578,
                                                  -0.0334739126265049,
                                                  -0.03373149782419205,
                                                  -0.033159852027893066,
                                                  -0.034474216401576996
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "m_vectorCovariancePair": {
                                          "m_covarianceMatrix": {
                                            "m_data": {
                                              "m_value": {
                                                "type": "large_array",
                                                "shape": [
                                                  28,
                                                  18,
                                                  32,
                                                  942
                                                ],
                                                "dtype": "float64",
                                                "size": 15192576,
                                                "sample_values": [
                                                  0.0,
                                                  2.094299077987671,
                                                  0.9231420159339905,
                                                  0.41476359963417053,
                                                  0.25665122270584106,
                                                  0.1893172711133957,
                                                  0.15800701081752777,
                                                  0.13214747607707977,
                                                  0.11226329207420349,
                                                  0.09155388176441193
                                                ]
                                              }
                                            }
                                          },
                                          "m_muVector": {
                                            "m_data": {
                                              "m_value": {
                                                "type": "large_array",
                                                "shape": [
                                                  7,
                                                  18,
                                                  32,
                                                  942
                                                ],
                                                "dtype": "float64",
                                                "size": 3798144,
                                                "sample_values": [
                                                  0.0,
                                                  47.78388977050781,
                                                  47.802860260009766,
                                                  47.999778747558594,
                                                  48.01734924316406,
                                                  48.0271110534668,
                                                  48.14316940307617,
                                                  48.24488067626953,
                                                  48.26198196411133,
                                                  48.25261688232422
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "m_refPoint": {
                                      "type": "large_array",
                                      "shape": [
                                        18,
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 542592,
                                      "sample_values": [
                                        10,
                                        10,
                                        15,
                                        15,
                                        15,
                                        15,
                                        15,
                                        15,
                                        15,
                                        15
                                      ]
                                    },
                                    "m_responsible": {
                                      "type": "large_array",
                                      "shape": [
                                        18,
                                        32,
                                        942
                                      ],
                                      "dtype": "int32",
                                      "size": 542592,
                                      "sample_values": [
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10
                                      ]
                                    },
                                    "m_stateToUpdate": {
                                      "m_covarianceMatrix": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              21,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 11394432,
                                            "sample_values": [
                                              0.0,
                                              2.0939643383026123,
                                              0.9230040311813354,
                                              0.41470709443092346,
                                              0.25661900639533997,
                                              0.18928663432598114,
                                              0.157979816198349,
                                              0.13212651014328003,
                                              0.11225050687789917,
                                              0.09153851866722107
                                            ]
                                          }
                                        }
                                      },
                                      "m_muVector": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              6,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 3255552,
                                            "sample_values": [
                                              0.0,
                                              43.91292953491211,
                                              43.931968688964844,
                                              44.128883361816406,
                                              44.14637756347656,
                                              44.1555290222168,
                                              44.270851135253906,
                                              44.37248611450195,
                                              44.389591217041016,
                                              44.38005447387695
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "m_type": {
                                      "type": "large_array",
                                      "shape": [
                                        18,
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 542592,
                                      "sample_values": [
                                        70,
                                        26,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10,
                                        10
                                      ]
                                    },
                                    "m_updatedState": {
                                      "m_covarianceMatrix": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              21,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 11394432,
                                            "sample_values": [
                                              0.0,
                                              1.057685136795044,
                                              0.4616886079311371,
                                              0.2819005846977234,
                                              0.2094842940568924,
                                              0.17075717449188232,
                                              0.14154723286628723,
                                              0.1195850819349289,
                                              0.10000961273908615,
                                              0.10001303255558014
                                            ]
                                          }
                                        }
                                      },
                                      "m_muVector": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              6,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 3255552,
                                            "sample_values": [
                                              0.0,
                                              47.701446533203125,
                                              47.92726135253906,
                                              47.957313537597656,
                                              47.995689392089844,
                                              48.09083557128906,
                                              48.193660736083984,
                                              48.21814727783203,
                                              48.23189163208008,
                                              48.2362060546875
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "m_used": {
                                      "type": "large_array",
                                      "shape": [
                                        18,
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 542592,
                                      "sample_values": [
                                        1,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1,
                                        1
                                      ]
                                    }
                                  }
                                },
                                "m_usedElements": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_validModulations": {
                              "field_name": "m_validModulations",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_validModulations",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  2,
                                  2,
                                  2,
                                  2,
                                  3,
                                  4,
                                  4,
                                  4,
                                  4
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_varianceOfTurnRateAfterPredictionWithCT": {
                              "field_name": "m_varianceOfTurnRateAfterPredictionWithCT",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_varianceOfTurnRateAfterPredictionWithCT",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_varianceTangentialAcc": {
                              "field_name": "m_varianceTangentialAcc",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_varianceTangentialAcc",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoAngleInnoDebugState": {
                              "field_name": "m_videoAngleInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoAngleInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.061249855905771255,
                                  0.04328545928001404,
                                  0.026451347395777702,
                                  0.0385286808013916,
                                  0.041868142783641815,
                                  0.02828996069729328,
                                  0.020753171294927597,
                                  0.02788494899868965,
                                  0.027796609327197075,
                                  0.023989690467715263
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoBasedInnovation": {
                              "field_name": "m_videoBasedInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoBasedInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.6032695770263672,
                                      0.8645524978637695,
                                      0.8786702156066895,
                                      0.8955309391021729,
                                      0.9126378297805786,
                                      0.8658152222633362,
                                      0.8221592903137207,
                                      0.7923262119293213,
                                      0.7744818925857544,
                                      0.7806335091590881
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoDrInnoDebugState": {
                              "field_name": "m_videoDrInnoDebugState",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoDrInnoDebugState",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  1.2649826203414705e-05,
                                  1.7816908439272083e-05,
                                  1.7986216334975325e-05,
                                  1.8326689314562827e-05,
                                  1.8632450519362465e-05,
                                  1.767344838299323e-05,
                                  1.662776412558742e-05,
                                  1.609013088454958e-05,
                                  1.562313445901964e-05,
                                  1.5820956832612865e-05
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoInputWithOncomingVrCounter": {
                              "field_name": "m_videoInputWithOncomingVrCounter",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoInputWithOncomingVrCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoInvTtc": {
                              "field_name": "m_videoInvTtc",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoInvTtc",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.0009765625,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0009765625,
                                  0.0009765625,
                                  0.001953125,
                                  0.001953125,
                                  0.001953125,
                                  0.001953125
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoLaneAssociation": {
                              "field_name": "m_videoLaneAssociation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoLaneAssociation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoRawAlphaInnovation": {
                              "field_name": "m_videoRawAlphaInnovation",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoRawAlphaInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.002311463700607419,
                                  0.0004497080226428807,
                                  0.0001717614068184048,
                                  0.0009318150696344674,
                                  0.0008288651588372886,
                                  0.00027010278427042067,
                                  0.00023574801161885262,
                                  0.0006414514500647783,
                                  0.0004995903000235558,
                                  0.0003704477858263999
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoVr": {
                              "field_name": "m_videoVr",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoVr",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.05089074745774269,
                                  0.005320691037923098,
                                  0.0017847266281023622,
                                  -0.0,
                                  -0.04202116280794144,
                                  -0.03994278609752655,
                                  -0.08787082135677338,
                                  -0.08777899295091629,
                                  -0.08993256837129593,
                                  -0.08773421496152878
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoVy": {
                              "field_name": "m_videoVy",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_videoVy",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.2813972532749176,
                                  -0.28090161085128784,
                                  -0.09170953929424286,
                                  0.0,
                                  -0.18864822387695312,
                                  -0.2805553674697876,
                                  -0.18782085180282593,
                                  -0.1877799928188324,
                                  -0.08995674550533295,
                                  -0.18790820240974426
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_visualSignals": {
                              "field_name": "m_visualSignals",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_visualSignals",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_visualSignalStatus'], shape: (1, 1)",
                              "converted_value": {
                                "m_visualSignalStatus": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    9,
                                    9,
                                    9,
                                    9,
                                    9,
                                    9,
                                    9,
                                    9,
                                    9,
                                    9
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_vyInconsistent": {
                              "field_name": "m_vyInconsistent",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_vyInconsistent",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_vyUnreliableAccumulated": {
                              "field_name": "m_vyUnreliableAccumulated",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_vyUnreliableAccumulated",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_wExistOfAssociatedVideoObject": {
                              "field_name": "m_wExistOfAssociatedVideoObject",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_wExistOfAssociatedVideoObject",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625,
                                  0.9998931884765625
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_yawAngleTrustworthy": {
                              "field_name": "m_yawAngleTrustworthy",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_yawAngleTrustworthy",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_yawAngleVCP": {
                              "field_name": "m_yawAngleVCP",
                              "field_path": "m_listMemory.m_value.m_value.m_values.m_yawAngleVCP",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                              "converted_value": {
                                "m_covarianceMatrix": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0,
                                        0.0001968851574929431,
                                        0.00015834011719562113,
                                        0.002131055109202862,
                                        0.003750164993107319,
                                        0.0003186195099260658,
                                        0.00015409314073622227
                                      ]
                                    }
                                  }
                                },
                                "m_muVector": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 30144,
                                      "sample_values": [
                                        2.8133392333984375e-05,
                                        -0.0017943382263183594,
                                        -0.0057332515716552734,
                                        -0.005822658538818359,
                                        -0.02469635009765625,
                                        -0.03347063064575195,
                                        -0.03372359275817871,
                                        -0.03315138816833496,
                                        -0.03447365760803223,
                                        -0.033808231353759766
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "sensorFilterFusHelper": {
                              "field_name": "sensorFilterFusHelper",
                              "field_path": "m_listMemory.m_value.m_value.m_values.sensorFilterFusHelper",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_allActiveSensorTypesContributedInLastCycle', 'm_timePassedSinceAllActiveSensorTypesContributed', 'm_timePassedSinceAllActiveSensorTypesStartedToContribute', 'm_totalNumSensorUpdates', 'm_untrustworthyUpdates', 'm_updatesSinceLastSensorUpdate'], shape: (1, 1)",
                              "converted_value": {
                                "m_allActiveSensorTypesContributedInLastCycle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    0,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                },
                                "m_timePassedSinceAllActiveSensorTypesContributed": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint16",
                                    "size": 30144,
                                    "sample_values": [
                                      65535,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ]
                                  }
                                },
                                "m_timePassedSinceAllActiveSensorTypesStartedToContribute": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint16",
                                    "size": 30144,
                                    "sample_values": [
                                      65535,
                                      0,
                                      307,
                                      555,
                                      858,
                                      1126,
                                      1351,
                                      1579,
                                      1843,
                                      2048
                                    ]
                                  }
                                },
                                "m_totalNumSensorUpdates": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      5,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 150720,
                                    "sample_values": [
                                      1,
                                      2,
                                      3,
                                      4,
                                      5,
                                      6,
                                      7,
                                      8,
                                      9,
                                      10
                                    ]
                                  }
                                },
                                "m_untrustworthyUpdates": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      5,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 150720,
                                    "sample_values": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ]
                                  }
                                },
                                "m_updatesSinceLastSensorUpdate": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      5,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 150720,
                                    "sample_values": [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "success": true
    },
    "step_3_first_value": {
      "level_name": "m_value (first)",
      "description": "First level value structure",
      "extraction_result": {
        "extraction_path": "m_value (first)",
        "current_depth": 0,
        "max_depth": 4,
        "data_type": "<class 'numpy.ndarray'>",
        "extraction_status": "success",
        "array_type": "structured",
        "shape": [
          1,
          1
        ],
        "field_names": [
          "m_next",
          "m_prev",
          "m_value"
        ],
        "field_count": 3,
        "total_size": 1,
        "dtype": "[('m_next', 'O'), ('m_prev', 'O'), ('m_value', 'O')]",
        "field_values": {
          "m_next": {
            "field_name": "m_next",
            "field_path": "m_value (first).m_next",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=int16, shape=(32, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                32,
                942
              ],
              "dtype": "int16",
              "size": 30144,
              "sample_values": [
                1,
                1,
                1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ]
            }
          },
          "m_prev": {
            "field_name": "m_prev",
            "field_path": "m_value (first).m_prev",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Array: dtype=int16, shape=(32, 942)",
            "converted_value": {
              "type": "large_array",
              "shape": [
                32,
                942
              ],
              "dtype": "int16",
              "size": 30144,
              "sample_values": [
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1,
                -1
              ]
            }
          },
          "m_value": {
            "field_name": "m_value",
            "field_path": "m_value (first).m_value",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['m_values'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "m_value (first).m_value",
              "current_depth": 1,
              "max_depth": 4,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "m_values"
              ],
              "field_count": 1,
              "total_size": 1,
              "dtype": "[('m_values', 'O')]",
              "field_values": {
                "m_values": {
                  "field_name": "m_values",
                  "field_path": "m_value (first).m_value.m_values",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_AvgVObjDxError', 'm_TransferredFromSep', 'm_additionalDepMembers', 'm_alternativeHypothesis', 'm_avgAlphaInnovation', 'm_avgDxInnovation', 'm_badSensorBasedInnoCount', 'm_changedObjectTypeBasedOnVelocity', 'm_cornerAngleInnoDebugState', 'm_cornerDrInnoDebugState', 'm_createdByVideoWithHighVy', 'm_currentOncomingCounterBasedOnLocations', 'm_dBRcs', 'm_dimension', 'm_dimensionCovarianceMatrixDiagonal', 'm_dxDistanceWhereObjStopped', 'm_elevation', 'm_elevationVCPFusedQM', 'm_expectedVrHighEnoughForMuDopplerCounter', 'm_filterType', 'm_functionRelevanceBitField', 'm_heightVCPFusedQM', 'm_id', 'm_idOfReplacedObject', 'm_implausibleDepCounter', 'm_initialPos', 'm_isCTModelUsedForPrediction', 'm_isMeasurable', 'm_isMeasured', 'm_isOrientationImplausibleCompared2Vid', 'm_isPossibleRadarCrossPathGhost', 'm_isSuppressedDueToVideoOtcPostProcessing', 'm_isSuppressedUntilNextVideoUpdate', 'm_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'm_isValid', 'm_longitudinalSimilarObjectCycleCnt', 'm_microDopplerFilterState', 'm_microDopplerFiltered', 'm_modulationHistory', 'm_movementHistoryCounter', 'm_movingLocationCounter', 'm_nonPlausibleLocationCnt', 'm_numConsecutiveCyclesWithoutOncomingLocations', 'm_numCyclesExisting', 'm_numCyclesNoModelBasedOrientationEstimationPossible', 'm_numCyclesNoOrientationUpdate', 'm_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'm_numCyclesSinceMotionModelChange', 'm_numCyclesTwoWheelerRefPtUsedForUpdate', 'm_numMicroDopplerCycles', 'm_objectCorridorRelation', 'm_objectOrientationUnreliableCount', 'm_objectTypeTree', 'm_orientationEstimate', 'm_orientationUpdateStatus', 'm_pNonObstacleRCSOnlyClassifier', 'm_perType', 'm_postProcessBitField', 'm_probHasBeenObservedExisting', 'm_probHasBeenObservedMoving', 'm_probIsCurrentlyExisting', 'm_probIsCurrentlyMoving', 'm_radarAngleInnoDebugState', 'm_radarBasedInnovation', 'm_radarDrInnoDebugState', 'm_radarRawAlphaInnovation', 'm_recentlyUsedFrontCornerMeasurementHandle', 'm_recentlyUsedVideoMeasurementHandle', 'm_referencePointIdx', 'm_relevantRadialInnovationInCm', 'm_sensorMeasuredHistory', 'm_splitCounter', 'm_state', 'm_stationaryLocationsOnlyCounter', 'm_stoppingSplitCounter', 'm_suspiciousRefPointCounter', 'm_totalNumCyclesWithOncomingLocations', 'm_transferredFromSepCycle', 'm_turnRateForCT', 'm_updateDetails', 'm_validModulations', 'm_varianceOfTurnRateAfterPredictionWithCT', 'm_varianceTangentialAcc', 'm_videoAngleInnoDebugState', 'm_videoBasedInnovation', 'm_videoDrInnoDebugState', 'm_videoInputWithOncomingVrCounter', 'm_videoInvTtc', 'm_videoLaneAssociation', 'm_videoRawAlphaInnovation', 'm_videoVr', 'm_videoVy', 'm_visualSignals', 'm_vyInconsistent', 'm_vyUnreliableAccumulated', 'm_wExistOfAssociatedVideoObject', 'm_yawAngleTrustworthy', 'm_yawAngleVCP', 'sensorFilterFusHelper'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (first).m_value.m_values",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_AvgVObjDxError",
                      "m_TransferredFromSep",
                      "m_additionalDepMembers",
                      "m_alternativeHypothesis",
                      "m_avgAlphaInnovation",
                      "m_avgDxInnovation",
                      "m_badSensorBasedInnoCount",
                      "m_changedObjectTypeBasedOnVelocity",
                      "m_cornerAngleInnoDebugState",
                      "m_cornerDrInnoDebugState",
                      "m_createdByVideoWithHighVy",
                      "m_currentOncomingCounterBasedOnLocations",
                      "m_dBRcs",
                      "m_dimension",
                      "m_dimensionCovarianceMatrixDiagonal",
                      "m_dxDistanceWhereObjStopped",
                      "m_elevation",
                      "m_elevationVCPFusedQM",
                      "m_expectedVrHighEnoughForMuDopplerCounter",
                      "m_filterType",
                      "m_functionRelevanceBitField",
                      "m_heightVCPFusedQM",
                      "m_id",
                      "m_idOfReplacedObject",
                      "m_implausibleDepCounter",
                      "m_initialPos",
                      "m_isCTModelUsedForPrediction",
                      "m_isMeasurable",
                      "m_isMeasured",
                      "m_isOrientationImplausibleCompared2Vid",
                      "m_isPossibleRadarCrossPathGhost",
                      "m_isSuppressedDueToVideoOtcPostProcessing",
                      "m_isSuppressedUntilNextVideoUpdate",
                      "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                      "m_isValid",
                      "m_longitudinalSimilarObjectCycleCnt",
                      "m_microDopplerFilterState",
                      "m_microDopplerFiltered",
                      "m_modulationHistory",
                      "m_movementHistoryCounter",
                      "m_movingLocationCounter",
                      "m_nonPlausibleLocationCnt",
                      "m_numConsecutiveCyclesWithoutOncomingLocations",
                      "m_numCyclesExisting",
                      "m_numCyclesNoModelBasedOrientationEstimationPossible",
                      "m_numCyclesNoOrientationUpdate",
                      "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                      "m_numCyclesSinceMotionModelChange",
                      "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                      "m_numMicroDopplerCycles",
                      "m_objectCorridorRelation",
                      "m_objectOrientationUnreliableCount",
                      "m_objectTypeTree",
                      "m_orientationEstimate",
                      "m_orientationUpdateStatus",
                      "m_pNonObstacleRCSOnlyClassifier",
                      "m_perType",
                      "m_postProcessBitField",
                      "m_probHasBeenObservedExisting",
                      "m_probHasBeenObservedMoving",
                      "m_probIsCurrentlyExisting",
                      "m_probIsCurrentlyMoving",
                      "m_radarAngleInnoDebugState",
                      "m_radarBasedInnovation",
                      "m_radarDrInnoDebugState",
                      "m_radarRawAlphaInnovation",
                      "m_recentlyUsedFrontCornerMeasurementHandle",
                      "m_recentlyUsedVideoMeasurementHandle",
                      "m_referencePointIdx",
                      "m_relevantRadialInnovationInCm",
                      "m_sensorMeasuredHistory",
                      "m_splitCounter",
                      "m_state",
                      "m_stationaryLocationsOnlyCounter",
                      "m_stoppingSplitCounter",
                      "m_suspiciousRefPointCounter",
                      "m_totalNumCyclesWithOncomingLocations",
                      "m_transferredFromSepCycle",
                      "m_turnRateForCT",
                      "m_updateDetails",
                      "m_validModulations",
                      "m_varianceOfTurnRateAfterPredictionWithCT",
                      "m_varianceTangentialAcc",
                      "m_videoAngleInnoDebugState",
                      "m_videoBasedInnovation",
                      "m_videoDrInnoDebugState",
                      "m_videoInputWithOncomingVrCounter",
                      "m_videoInvTtc",
                      "m_videoLaneAssociation",
                      "m_videoRawAlphaInnovation",
                      "m_videoVr",
                      "m_videoVy",
                      "m_visualSignals",
                      "m_vyInconsistent",
                      "m_vyUnreliableAccumulated",
                      "m_wExistOfAssociatedVideoObject",
                      "m_yawAngleTrustworthy",
                      "m_yawAngleVCP",
                      "sensorFilterFusHelper"
                    ],
                    "field_count": 99,
                    "total_size": 1,
                    "dtype": "[('m_AvgVObjDxError', 'O'), ('m_TransferredFromSep', 'O'), ('m_additionalDepMembers', 'O'), ('m_alternativeHypothesis', 'O'), ('m_avgAlphaInnovation', 'O'), ('m_avgDxInnovation', 'O'), ('m_badSensorBasedInnoCount', 'O'), ('m_changedObjectTypeBasedOnVelocity', 'O'), ('m_cornerAngleInnoDebugState', 'O'), ('m_cornerDrInnoDebugState', 'O'), ('m_createdByVideoWithHighVy', 'O'), ('m_currentOncomingCounterBasedOnLocations', 'O'), ('m_dBRcs', 'O'), ('m_dimension', 'O'), ('m_dimensionCovarianceMatrixDiagonal', 'O'), ('m_dxDistanceWhereObjStopped', 'O'), ('m_elevation', 'O'), ('m_elevationVCPFusedQM', 'O'), ('m_expectedVrHighEnoughForMuDopplerCounter', 'O'), ('m_filterType', 'O'), ('m_functionRelevanceBitField', 'O'), ('m_heightVCPFusedQM', 'O'), ('m_id', 'O'), ('m_idOfReplacedObject', 'O'), ('m_implausibleDepCounter', 'O'), ('m_initialPos', 'O'), ('m_isCTModelUsedForPrediction', 'O'), ('m_isMeasurable', 'O'), ('m_isMeasured', 'O'), ('m_isOrientationImplausibleCompared2Vid', 'O'), ('m_isPossibleRadarCrossPathGhost', 'O'), ('m_isSuppressedDueToVideoOtcPostProcessing', 'O'), ('m_isSuppressedUntilNextVideoUpdate', 'O'), ('m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'O'), ('m_isValid', 'O'), ('m_longitudinalSimilarObjectCycleCnt', 'O'), ('m_microDopplerFilterState', 'O'), ('m_microDopplerFiltered', 'O'), ('m_modulationHistory', 'O'), ('m_movementHistoryCounter', 'O'), ('m_movingLocationCounter', 'O'), ('m_nonPlausibleLocationCnt', 'O'), ('m_numConsecutiveCyclesWithoutOncomingLocations', 'O'), ('m_numCyclesExisting', 'O'), ('m_numCyclesNoModelBasedOrientationEstimationPossible', 'O'), ('m_numCyclesNoOrientationUpdate', 'O'), ('m_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'O'), ('m_numCyclesSinceMotionModelChange', 'O'), ('m_numCyclesTwoWheelerRefPtUsedForUpdate', 'O'), ('m_numMicroDopplerCycles', 'O'), ('m_objectCorridorRelation', 'O'), ('m_objectOrientationUnreliableCount', 'O'), ('m_objectTypeTree', 'O'), ('m_orientationEstimate', 'O'), ('m_orientationUpdateStatus', 'O'), ('m_pNonObstacleRCSOnlyClassifier', 'O'), ('m_perType', 'O'), ('m_postProcessBitField', 'O'), ('m_probHasBeenObservedExisting', 'O'), ('m_probHasBeenObservedMoving', 'O'), ('m_probIsCurrentlyExisting', 'O'), ('m_probIsCurrentlyMoving', 'O'), ('m_radarAngleInnoDebugState', 'O'), ('m_radarBasedInnovation', 'O'), ('m_radarDrInnoDebugState', 'O'), ('m_radarRawAlphaInnovation', 'O'), ('m_recentlyUsedFrontCornerMeasurementHandle', 'O'), ('m_recentlyUsedVideoMeasurementHandle', 'O'), ('m_referencePointIdx', 'O'), ('m_relevantRadialInnovationInCm', 'O'), ('m_sensorMeasuredHistory', 'O'), ('m_splitCounter', 'O'), ('m_state', 'O'), ('m_stationaryLocationsOnlyCounter', 'O'), ('m_stoppingSplitCounter', 'O'), ('m_suspiciousRefPointCounter', 'O'), ('m_totalNumCyclesWithOncomingLocations', 'O'), ('m_transferredFromSepCycle', 'O'), ('m_turnRateForCT', 'O'), ('m_updateDetails', 'O'), ('m_validModulations', 'O'), ('m_varianceOfTurnRateAfterPredictionWithCT', 'O'), ('m_varianceTangentialAcc', 'O'), ('m_videoAngleInnoDebugState', 'O'), ('m_videoBasedInnovation', 'O'), ('m_videoDrInnoDebugState', 'O'), ('m_videoInputWithOncomingVrCounter', 'O'), ('m_videoInvTtc', 'O'), ('m_videoLaneAssociation', 'O'), ('m_videoRawAlphaInnovation', 'O'), ('m_videoVr', 'O'), ('m_videoVy', 'O'), ('m_visualSignals', 'O'), ('m_vyInconsistent', 'O'), ('m_vyUnreliableAccumulated', 'O'), ('m_wExistOfAssociatedVideoObject', 'O'), ('m_yawAngleTrustworthy', 'O'), ('m_yawAngleVCP', 'O'), ('sensorFilterFusHelper', 'O')]",
                    "field_values": {
                      "m_AvgVObjDxError": {
                        "field_name": "m_AvgVObjDxError",
                        "field_path": "m_value (first).m_value.m_values.m_AvgVObjDxError",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.28145885467529297,
                            0.43429112434387207,
                            0.5538162589073181,
                            0.6477983593940735,
                            0.6905969381332397,
                            0.7125735282897949,
                            0.7250534296035767,
                            0.7329494953155518,
                            0.7464084029197693
                          ]
                        }
                      },
                      "m_TransferredFromSep": {
                        "field_name": "m_TransferredFromSep",
                        "field_path": "m_value (first).m_value.m_values.m_TransferredFromSep",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_additionalDepMembers": {
                        "field_name": "m_additionalDepMembers",
                        "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_additionalPostProcessBitField', 'm_areVideoAndDep4PlusWheelerBearingInconsistent', 'm_areVideoAndDepLatVelBearingInconsistent', 'm_areVideoAndDepLongiVelBearingInconsistent', 'm_contributingSensorUnreliable', 'm_cornerBasedInnovation', 'm_cornerRadarVelocityOverGround', 'm_hasSuspiciousVideoObjectJumps', 'm_implausibleRadarVrJumpCounter', 'm_implausibleRadarVyJumpCounter', 'm_isObjectSensorPMovingLowAndVyDeviationHigh', 'm_isObjectSensorVyDeviationVeryHigh', 'm_isSuspiciousVideoCreatedFastCrossingObj', 'm_isVideoUpdatedAfterLongRadarOnlyPeriod', 'm_isWronglySplittedVruObjectFromLargerVehicle', 'm_normedRadarAngleInno', 'm_normedRadarDrInno', 'm_numCyclesWithoutMicroDoppler', 'm_radarVrOverGround', 'm_videoVAlpha', 'm_videoVelocityOverGround', 'm_videoYawAngle', 'm_visibleEdgeLostCounter'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_additionalDepMembers",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_additionalPostProcessBitField",
                            "m_areVideoAndDep4PlusWheelerBearingInconsistent",
                            "m_areVideoAndDepLatVelBearingInconsistent",
                            "m_areVideoAndDepLongiVelBearingInconsistent",
                            "m_contributingSensorUnreliable",
                            "m_cornerBasedInnovation",
                            "m_cornerRadarVelocityOverGround",
                            "m_hasSuspiciousVideoObjectJumps",
                            "m_implausibleRadarVrJumpCounter",
                            "m_implausibleRadarVyJumpCounter",
                            "m_isObjectSensorPMovingLowAndVyDeviationHigh",
                            "m_isObjectSensorVyDeviationVeryHigh",
                            "m_isSuspiciousVideoCreatedFastCrossingObj",
                            "m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                            "m_isWronglySplittedVruObjectFromLargerVehicle",
                            "m_normedRadarAngleInno",
                            "m_normedRadarDrInno",
                            "m_numCyclesWithoutMicroDoppler",
                            "m_radarVrOverGround",
                            "m_videoVAlpha",
                            "m_videoVelocityOverGround",
                            "m_videoYawAngle",
                            "m_visibleEdgeLostCounter"
                          ],
                          "field_count": 23,
                          "total_size": 1,
                          "dtype": "[('m_additionalPostProcessBitField', 'O'), ('m_areVideoAndDep4PlusWheelerBearingInconsistent', 'O'), ('m_areVideoAndDepLatVelBearingInconsistent', 'O'), ('m_areVideoAndDepLongiVelBearingInconsistent', 'O'), ('m_contributingSensorUnreliable', 'O'), ('m_cornerBasedInnovation', 'O'), ('m_cornerRadarVelocityOverGround', 'O'), ('m_hasSuspiciousVideoObjectJumps', 'O'), ('m_implausibleRadarVrJumpCounter', 'O'), ('m_implausibleRadarVyJumpCounter', 'O'), ('m_isObjectSensorPMovingLowAndVyDeviationHigh', 'O'), ('m_isObjectSensorVyDeviationVeryHigh', 'O'), ('m_isSuspiciousVideoCreatedFastCrossingObj', 'O'), ('m_isVideoUpdatedAfterLongRadarOnlyPeriod', 'O'), ('m_isWronglySplittedVruObjectFromLargerVehicle', 'O'), ('m_normedRadarAngleInno', 'O'), ('m_normedRadarDrInno', 'O'), ('m_numCyclesWithoutMicroDoppler', 'O'), ('m_radarVrOverGround', 'O'), ('m_videoVAlpha', 'O'), ('m_videoVelocityOverGround', 'O'), ('m_videoYawAngle', 'O'), ('m_visibleEdgeLostCounter', 'O')]",
                          "field_values": {
                            "m_additionalPostProcessBitField": {
                              "field_name": "m_additionalPostProcessBitField",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_additionalPostProcessBitField",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_areVideoAndDep4PlusWheelerBearingInconsistent": {
                              "field_name": "m_areVideoAndDep4PlusWheelerBearingInconsistent",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_areVideoAndDep4PlusWheelerBearingInconsistent",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_areVideoAndDepLatVelBearingInconsistent": {
                              "field_name": "m_areVideoAndDepLatVelBearingInconsistent",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_areVideoAndDepLatVelBearingInconsistent",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_areVideoAndDepLongiVelBearingInconsistent": {
                              "field_name": "m_areVideoAndDepLongiVelBearingInconsistent",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_areVideoAndDepLongiVelBearingInconsistent",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_contributingSensorUnreliable": {
                              "field_name": "m_contributingSensorUnreliable",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_contributingSensorUnreliable",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_cornerBasedInnovation": {
                              "field_name": "m_cornerBasedInnovation",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_cornerBasedInnovation",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_cornerRadarVelocityOverGround": {
                              "field_name": "m_cornerRadarVelocityOverGround",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_cornerRadarVelocityOverGround",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_hasSuspiciousVideoObjectJumps": {
                              "field_name": "m_hasSuspiciousVideoObjectJumps",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_hasSuspiciousVideoObjectJumps",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_implausibleRadarVrJumpCounter": {
                              "field_name": "m_implausibleRadarVrJumpCounter",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_implausibleRadarVrJumpCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255,
                                  255
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_implausibleRadarVyJumpCounter": {
                              "field_name": "m_implausibleRadarVyJumpCounter",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_implausibleRadarVyJumpCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isObjectSensorPMovingLowAndVyDeviationHigh": {
                              "field_name": "m_isObjectSensorPMovingLowAndVyDeviationHigh",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_isObjectSensorPMovingLowAndVyDeviationHigh",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isObjectSensorVyDeviationVeryHigh": {
                              "field_name": "m_isObjectSensorVyDeviationVeryHigh",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_isObjectSensorVyDeviationVeryHigh",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isSuspiciousVideoCreatedFastCrossingObj": {
                              "field_name": "m_isSuspiciousVideoCreatedFastCrossingObj",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_isSuspiciousVideoCreatedFastCrossingObj",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isVideoUpdatedAfterLongRadarOnlyPeriod": {
                              "field_name": "m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_isWronglySplittedVruObjectFromLargerVehicle": {
                              "field_name": "m_isWronglySplittedVruObjectFromLargerVehicle",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_isWronglySplittedVruObjectFromLargerVehicle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_normedRadarAngleInno": {
                              "field_name": "m_normedRadarAngleInno",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_normedRadarAngleInno",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.07154031097888947,
                                  -0.008150208741426468,
                                  -0.07581863552331924,
                                  -0.25352874398231506,
                                  -0.1331334114074707,
                                  -0.04033457115292549,
                                  -0.12786179780960083,
                                  -0.12835125625133514,
                                  -0.1298404186964035
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_normedRadarDrInno": {
                              "field_name": "m_normedRadarDrInno",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_normedRadarDrInno",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  -0.0283228550106287,
                                  0.027538934722542763,
                                  -0.007434526924043894,
                                  -0.021942615509033203,
                                  0.09858298301696777,
                                  0.1424279659986496,
                                  0.020955979824066162,
                                  -0.033269595354795456,
                                  -0.04756626859307289
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_numCyclesWithoutMicroDoppler": {
                              "field_name": "m_numCyclesWithoutMicroDoppler",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_numCyclesWithoutMicroDoppler",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_radarVrOverGround": {
                              "field_name": "m_radarVrOverGround",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_radarVrOverGround",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  0.0,
                                  18.574792861938477,
                                  18.700416564941406,
                                  18.795713424682617,
                                  18.8829288482666,
                                  18.975099563598633,
                                  19.089622497558594,
                                  19.16509437561035,
                                  19.253755569458008,
                                  19.316547393798828
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoVAlpha": {
                              "field_name": "m_videoVAlpha",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_videoVAlpha",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.0059814453125,
                                  -0.0059814453125,
                                  -0.001953125,
                                  0.0,
                                  -0.0040283203125,
                                  -0.0059814453125,
                                  -0.0040283203125,
                                  -0.0040283203125,
                                  -0.001953125,
                                  -0.0040283203125
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoVelocityOverGround": {
                              "field_name": "m_videoVelocityOverGround",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_videoVelocityOverGround",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      2,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 60288,
                                    "sample_values": [
                                      18.034820556640625,
                                      18.16199493408203,
                                      18.283489227294922,
                                      18.44285011291504,
                                      18.506784439086914,
                                      18.62368392944336,
                                      18.677183151245117,
                                      18.7930965423584,
                                      18.89933204650879,
                                      18.987215042114258
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_videoYawAngle": {
                              "field_name": "m_videoYawAngle",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_videoYawAngle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 30144,
                                "sample_values": [
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625,
                                  -0.0299072265625
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_visibleEdgeLostCounter": {
                              "field_name": "m_visibleEdgeLostCounter",
                              "field_path": "m_value (first).m_value.m_values.m_additionalDepMembers.m_visibleEdgeLostCounter",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_alternativeHypothesis": {
                        "field_name": "m_alternativeHypothesis",
                        "field_path": "m_value (first).m_value.m_values.m_alternativeHypothesis",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544
                          ]
                        }
                      },
                      "m_avgAlphaInnovation": {
                        "field_name": "m_avgAlphaInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_avgAlphaInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            -0.0019347303314134479,
                            -0.0006980852922424674,
                            -0.002382645383477211,
                            -0.007032947149127722,
                            -0.005665685050189495,
                            -0.0035495886113494635,
                            -0.005357804708182812,
                            -0.0057459985837340355,
                            -0.005908419843763113
                          ]
                        }
                      },
                      "m_avgDxInnovation": {
                        "field_name": "m_avgDxInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_avgDxInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            -0.042484283447265625,
                            0.030687332153320312,
                            -0.00879049301147461,
                            -0.03393089771270752,
                            0.13888326287269592,
                            0.2438671588897705,
                            0.10751336812973022,
                            0.015013650059700012,
                            -0.03513697162270546
                          ]
                        }
                      },
                      "m_badSensorBasedInnoCount": {
                        "field_name": "m_badSensorBasedInnoCount",
                        "field_path": "m_value (first).m_value.m_values.m_badSensorBasedInnoCount",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_changedObjectTypeBasedOnVelocity": {
                        "field_name": "m_changedObjectTypeBasedOnVelocity",
                        "field_path": "m_value (first).m_value.m_values.m_changedObjectTypeBasedOnVelocity",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_cornerAngleInnoDebugState": {
                        "field_name": "m_cornerAngleInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_cornerAngleInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0
                          ]
                        }
                      },
                      "m_cornerDrInnoDebugState": {
                        "field_name": "m_cornerDrInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_cornerDrInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0
                          ]
                        }
                      },
                      "m_createdByVideoWithHighVy": {
                        "field_name": "m_createdByVideoWithHighVy",
                        "field_path": "m_value (first).m_value.m_values.m_createdByVideoWithHighVy",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_currentOncomingCounterBasedOnLocations": {
                        "field_name": "m_currentOncomingCounterBasedOnLocations",
                        "field_path": "m_value (first).m_value.m_values.m_currentOncomingCounterBasedOnLocations",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_dBRcs": {
                        "field_name": "m_dBRcs",
                        "field_path": "m_value (first).m_value.m_values.m_dBRcs",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            20.453125,
                            20.46875,
                            18.791118621826172,
                            20.970394134521484,
                            21.607044219970703,
                            18.968467712402344,
                            16.68654441833496,
                            21.348798751831055,
                            24.95136260986328,
                            26.098665237426758
                          ]
                        }
                      },
                      "m_dimension": {
                        "field_name": "m_dimension",
                        "field_path": "m_value (first).m_value.m_values.m_dimension",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_dimension",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (first).m_value.m_values.m_dimension.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  9.90575885772705,
                                  11.515942573547363,
                                  11.785696983337402,
                                  11.752283096313477,
                                  11.911845207214355,
                                  11.711894989013672,
                                  12.433369636535645,
                                  11.987720489501953,
                                  12.642362594604492,
                                  12.149866104125977
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_dimensionCovarianceMatrixDiagonal": {
                        "field_name": "m_dimensionCovarianceMatrixDiagonal",
                        "field_path": "m_value (first).m_value.m_values.m_dimensionCovarianceMatrixDiagonal",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_dimensionCovarianceMatrixDiagonal",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (first).m_value.m_values.m_dimensionCovarianceMatrixDiagonal.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  1.0,
                                  0.7461724281311035,
                                  0.38841044902801514,
                                  0.2809573709964752,
                                  0.24513399600982666,
                                  0.23324796557426453,
                                  0.22935649752616882,
                                  0.22801098227500916,
                                  0.2276366949081421,
                                  0.22745272517204285
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_dxDistanceWhereObjStopped": {
                        "field_name": "m_dxDistanceWhereObjStopped",
                        "field_path": "m_value (first).m_value.m_values.m_dxDistanceWhereObjStopped",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38,
                            3.4028234663852886e+38
                          ]
                        }
                      },
                      "m_elevation": {
                        "field_name": "m_elevation",
                        "field_path": "m_value (first).m_value.m_values.m_elevation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.07859861850738525,
                            0.3721247613430023,
                            0.5187848806381226,
                            0.5742062926292419,
                            0.7198442220687866,
                            0.9085146188735962,
                            1.023313283920288,
                            1.0676262378692627,
                            1.0836786031723022,
                            1.046609878540039
                          ]
                        }
                      },
                      "m_elevationVCPFusedQM": {
                        "field_name": "m_elevationVCPFusedQM",
                        "field_path": "m_value (first).m_value.m_values.m_elevationVCPFusedQM",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_elevationVCPFusedQM",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_covarianceMatrix",
                            "m_muVector"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                          "field_values": {
                            "m_covarianceMatrix": {
                              "field_name": "m_covarianceMatrix",
                              "field_path": "m_value (first).m_value.m_values.m_elevationVCPFusedQM.m_covarianceMatrix",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.12166212499141693,
                                      0.12240377068519592,
                                      0.12065700441598892,
                                      0.11053727567195892,
                                      0.11145932227373123,
                                      0.10398565977811813,
                                      0.10414627939462662,
                                      0.10506242513656616,
                                      0.10740521550178528,
                                      0.11029250174760818
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_muVector": {
                              "field_name": "m_muVector",
                              "field_path": "m_value (first).m_value.m_values.m_elevationVCPFusedQM.m_muVector",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      -0.3459428548812866,
                                      -0.35945776104927063,
                                      -0.3167966604232788,
                                      -0.267256498336792,
                                      -0.28871822357177734,
                                      -0.31175294518470764,
                                      -0.3141113519668579,
                                      -0.33695560693740845,
                                      -0.3941979706287384,
                                      -0.4594446122646332
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_expectedVrHighEnoughForMuDopplerCounter": {
                        "field_name": "m_expectedVrHighEnoughForMuDopplerCounter",
                        "field_path": "m_value (first).m_value.m_values.m_expectedVrHighEnoughForMuDopplerCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_filterType": {
                        "field_name": "m_filterType",
                        "field_path": "m_value (first).m_value.m_values.m_filterType",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      "m_functionRelevanceBitField": {
                        "field_name": "m_functionRelevanceBitField",
                        "field_path": "m_value (first).m_value.m_values.m_functionRelevanceBitField",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint16",
                          "size": 30144,
                          "sample_values": [
                            65535,
                            65535,
                            65535,
                            65535,
                            65535,
                            65535,
                            65535,
                            65535,
                            65535,
                            65535
                          ]
                        }
                      },
                      "m_heightVCPFusedQM": {
                        "field_name": "m_heightVCPFusedQM",
                        "field_path": "m_value (first).m_value.m_values.m_heightVCPFusedQM",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_heightVCPFusedQM",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_covarianceMatrix",
                            "m_muVector"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                          "field_values": {
                            "m_covarianceMatrix": {
                              "field_name": "m_covarianceMatrix",
                              "field_path": "m_value (first).m_value.m_values.m_heightVCPFusedQM.m_covarianceMatrix",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.1811705231666565,
                                      0.11896289885044098,
                                      0.10590788722038269,
                                      0.09944309294223785,
                                      0.09893441945314407,
                                      0.09899625927209854,
                                      0.09813425689935684,
                                      0.09896426647901535,
                                      0.09915090352296829,
                                      0.09818144142627716
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_muVector": {
                              "field_name": "m_muVector",
                              "field_path": "m_value (first).m_value.m_values.m_heightVCPFusedQM.m_muVector",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      3.079423427581787,
                                      3.207869529724121,
                                      3.2648937702178955,
                                      3.287994146347046,
                                      3.295999050140381,
                                      3.303968906402588,
                                      3.311444044113159,
                                      3.311429500579834,
                                      3.311661958694458,
                                      3.312424659729004
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_id": {
                        "field_name": "m_id",
                        "field_path": "m_value (first).m_value.m_values.m_id",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544,
                            118380544
                          ]
                        }
                      },
                      "m_idOfReplacedObject": {
                        "field_name": "m_idOfReplacedObject",
                        "field_path": "m_value (first).m_value.m_values.m_idOfReplacedObject",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_implausibleDepCounter": {
                        "field_name": "m_implausibleDepCounter",
                        "field_path": "m_value (first).m_value.m_values.m_implausibleDepCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_initialPos": {
                        "field_name": "m_initialPos",
                        "field_path": "m_value (first).m_value.m_values.m_initialPos",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_initialPos",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (first).m_value.m_values.m_initialPos.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    52.683223724365234,
                                    53.51673126220703,
                                    53.844329833984375,
                                    53.856380462646484,
                                    53.97092056274414,
                                    53.977901458740234,
                                    54.4311408996582,
                                    54.228126525878906,
                                    54.55750274658203,
                                    54.32664489746094
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_isCTModelUsedForPrediction": {
                        "field_name": "m_isCTModelUsedForPrediction",
                        "field_path": "m_value (first).m_value.m_values.m_isCTModelUsedForPrediction",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isMeasurable": {
                        "field_name": "m_isMeasurable",
                        "field_path": "m_value (first).m_value.m_values.m_isMeasurable",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            2,
                            19,
                            19,
                            19,
                            19,
                            3,
                            19,
                            19,
                            19,
                            19
                          ]
                        }
                      },
                      "m_isMeasured": {
                        "field_name": "m_isMeasured",
                        "field_path": "m_value (first).m_value.m_values.m_isMeasured",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            3,
                            3,
                            3,
                            3,
                            3,
                            3,
                            3,
                            3,
                            3,
                            3
                          ]
                        }
                      },
                      "m_isOrientationImplausibleCompared2Vid": {
                        "field_name": "m_isOrientationImplausibleCompared2Vid",
                        "field_path": "m_value (first).m_value.m_values.m_isOrientationImplausibleCompared2Vid",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isPossibleRadarCrossPathGhost": {
                        "field_name": "m_isPossibleRadarCrossPathGhost",
                        "field_path": "m_value (first).m_value.m_values.m_isPossibleRadarCrossPathGhost",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isSuppressedDueToVideoOtcPostProcessing": {
                        "field_name": "m_isSuppressedDueToVideoOtcPostProcessing",
                        "field_path": "m_value (first).m_value.m_values.m_isSuppressedDueToVideoOtcPostProcessing",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isSuppressedUntilNextVideoUpdate": {
                        "field_name": "m_isSuppressedUntilNextVideoUpdate",
                        "field_path": "m_value (first).m_value.m_values.m_isSuppressedUntilNextVideoUpdate",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr": {
                        "field_name": "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                        "field_path": "m_value (first).m_value.m_values.m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isValid": {
                        "field_name": "m_isValid",
                        "field_path": "m_value (first).m_value.m_values.m_isValid",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      "m_longitudinalSimilarObjectCycleCnt": {
                        "field_name": "m_longitudinalSimilarObjectCycleCnt",
                        "field_path": "m_value (first).m_value.m_values.m_longitudinalSimilarObjectCycleCnt",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_microDopplerFilterState": {
                        "field_name": "m_microDopplerFilterState",
                        "field_path": "m_value (first).m_value.m_values.m_microDopplerFilterState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_tap0', 'm_tap1'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_microDopplerFilterState",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_tap0",
                            "m_tap1"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_tap0', 'O'), ('m_tap1', 'O')]",
                          "field_values": {
                            "m_tap0": {
                              "field_name": "m_tap0",
                              "field_path": "m_value (first).m_value.m_values.m_microDopplerFilterState.m_tap0",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  993968608,
                                  1016288258,
                                  1015597691,
                                  1013708735,
                                  1012374266,
                                  1012454646,
                                  1013388543,
                                  1013482296,
                                  1012872971,
                                  1012343456
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_tap1": {
                              "field_name": "m_tap1",
                              "field_path": "m_value (first).m_value.m_values.m_microDopplerFilterState.m_tap1",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=int32, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "int32",
                                "size": 30144,
                                "sample_values": [
                                  2143289344,
                                  1016301373,
                                  1016288258,
                                  1015597691,
                                  1013708735,
                                  1012374266,
                                  1012454646,
                                  1013388543,
                                  1013482296,
                                  1012872971
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_microDopplerFiltered": {
                        "field_name": "m_microDopplerFiltered",
                        "field_path": "m_value (first).m_value.m_values.m_microDopplerFiltered",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.002910725772380829,
                            0.0028794570825994015,
                            0.0028270285110920668,
                            0.0026313173584640026,
                            0.002346490742638707,
                            0.0021582283079624176,
                            0.0021492945961654186,
                            0.0022253619972616434,
                            0.002244438510388136,
                            0.0021828068420290947
                          ]
                        }
                      },
                      "m_modulationHistory": {
                        "field_name": "m_modulationHistory",
                        "field_path": "m_value (first).m_value.m_values.m_modulationHistory",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint16",
                          "size": 30144,
                          "sample_values": [
                            512,
                            2560,
                            10752,
                            43520,
                            43522,
                            43526,
                            43542,
                            43606,
                            43862,
                            43862
                          ]
                        }
                      },
                      "m_movementHistoryCounter": {
                        "field_name": "m_movementHistoryCounter",
                        "field_path": "m_value (first).m_value.m_values.m_movementHistoryCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            8,
                            8
                          ]
                        }
                      },
                      "m_movingLocationCounter": {
                        "field_name": "m_movingLocationCounter",
                        "field_path": "m_value (first).m_value.m_values.m_movingLocationCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10
                          ]
                        }
                      },
                      "m_nonPlausibleLocationCnt": {
                        "field_name": "m_nonPlausibleLocationCnt",
                        "field_path": "m_value (first).m_value.m_values.m_nonPlausibleLocationCnt",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numConsecutiveCyclesWithoutOncomingLocations": {
                        "field_name": "m_numConsecutiveCyclesWithoutOncomingLocations",
                        "field_path": "m_value (first).m_value.m_values.m_numConsecutiveCyclesWithoutOncomingLocations",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numCyclesExisting": {
                        "field_name": "m_numCyclesExisting",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesExisting",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint16",
                          "size": 30144,
                          "sample_values": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        }
                      },
                      "m_numCyclesNoModelBasedOrientationEstimationPossible": {
                        "field_name": "m_numCyclesNoModelBasedOrientationEstimationPossible",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesNoModelBasedOrientationEstimationPossible",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numCyclesNoOrientationUpdate": {
                        "field_name": "m_numCyclesNoOrientationUpdate",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesNoOrientationUpdate",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            1,
                            2,
                            3,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numCyclesSinceLastVideoUpdateWithAngularVelocity": {
                        "field_name": "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numCyclesSinceMotionModelChange": {
                        "field_name": "m_numCyclesSinceMotionModelChange",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesSinceMotionModelChange",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255
                          ]
                        }
                      },
                      "m_numCyclesTwoWheelerRefPtUsedForUpdate": {
                        "field_name": "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                        "field_path": "m_value (first).m_value.m_values.m_numCyclesTwoWheelerRefPtUsedForUpdate",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_numMicroDopplerCycles": {
                        "field_name": "m_numMicroDopplerCycles",
                        "field_path": "m_value (first).m_value.m_values.m_numMicroDopplerCycles",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_objectCorridorRelation": {
                        "field_name": "m_objectCorridorRelation",
                        "field_path": "m_value (first).m_value.m_values.m_objectCorridorRelation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_objectBorderCrossingTimes', 'm_objectCorridorFractionalOverlap'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_objectCorridorRelation",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_objectBorderCrossingTimes",
                            "m_objectCorridorFractionalOverlap"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_objectBorderCrossingTimes', 'O'), ('m_objectCorridorFractionalOverlap', 'O')]",
                          "field_values": {
                            "m_objectBorderCrossingTimes": {
                              "field_name": "m_objectBorderCrossingTimes",
                              "field_path": "m_value (first).m_value.m_values.m_objectCorridorRelation.m_objectBorderCrossingTimes",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_hasValue', 'm_storage'], shape: (1, 1)",
                              "converted_value": {
                                "m_hasValue": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                },
                                "m_storage": {
                                  "m_values": {
                                    "m_value": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          4,
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 120576,
                                        "sample_values": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_objectCorridorFractionalOverlap": {
                              "field_name": "m_objectCorridorFractionalOverlap",
                              "field_path": "m_value (first).m_value.m_values.m_objectCorridorRelation.m_objectCorridorFractionalOverlap",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      3,
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 90432,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_objectOrientationUnreliableCount": {
                        "field_name": "m_objectOrientationUnreliableCount",
                        "field_path": "m_value (first).m_value.m_values.m_objectOrientationUnreliableCount",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_objectTypeTree": {
                        "field_name": "m_objectTypeTree",
                        "field_path": "m_value (first).m_value.m_values.m_objectTypeTree",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_objectTypes'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_objectTypeTree",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_objectTypes"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_objectTypes', 'O')]",
                          "field_values": {
                            "m_objectTypes": {
                              "field_name": "m_objectTypes",
                              "field_path": "m_value (first).m_value.m_values.m_objectTypeTree.m_objectTypes",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_nonObstacle', 'm_obstacle', 'm_obstacleTypes', 'm_unknown'], shape: (1, 1)",
                              "converted_value": {
                                "m_nonObstacle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    24,
                                    24,
                                    24,
                                    24,
                                    24,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                },
                                "m_obstacle": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    101,
                                    101,
                                    101,
                                    101,
                                    101,
                                    125,
                                    125,
                                    125,
                                    125,
                                    125
                                  ]
                                },
                                "m_obstacleTypes": {
                                  "m_mobile": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      123,
                                      123,
                                      123,
                                      123,
                                      123,
                                      127,
                                      127,
                                      127,
                                      127,
                                      127
                                    ]
                                  },
                                  "m_mobileTypes": {
                                    "m_fourPlusWheeler": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116,
                                        116
                                      ]
                                    },
                                    "m_fourPlusWheelerTypes": {
                                      "m_passengerCar": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23,
                                          23
                                        ]
                                      },
                                      "m_truck": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101,
                                          101
                                        ]
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4,
                                          4
                                        ]
                                      }
                                    },
                                    "m_pedestrian": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    },
                                    "m_twoWheeler": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    },
                                    "m_twoWheelerTypes": {
                                      "m_bicycle": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          43,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42
                                        ]
                                      },
                                      "m_ptw": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          43,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42,
                                          42
                                        ]
                                      },
                                      "m_unknown": {
                                        "type": "large_array",
                                        "shape": [
                                          32,
                                          942
                                        ],
                                        "dtype": "uint8",
                                        "size": 30144,
                                        "sample_values": [
                                          42,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44,
                                          44
                                        ]
                                      }
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    }
                                  },
                                  "m_stationary": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      3,
                                      3,
                                      3,
                                      3,
                                      3,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0
                                    ]
                                  },
                                  "m_stationaryTypes": {
                                    "m_roadsideBarrier": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64
                                      ]
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64,
                                        64
                                      ]
                                    }
                                  },
                                  "m_unknown": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      2,
                                      2,
                                      2,
                                      2,
                                      2,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  }
                                },
                                "m_unknown": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    3,
                                    3,
                                    3,
                                    3,
                                    3,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_orientationEstimate": {
                        "field_name": "m_orientationEstimate",
                        "field_path": "m_value (first).m_value.m_values.m_orientationEstimate",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            -0.027612125501036644,
                            -0.04122607409954071,
                            -0.03458928316831589,
                            -0.027987228706479073,
                            -0.03491974622011185,
                            -0.039077553898096085,
                            -0.033640116453170776,
                            -0.031451329588890076,
                            -0.033946309238672256,
                            -0.03382166475057602
                          ]
                        }
                      },
                      "m_orientationUpdateStatus": {
                        "field_name": "m_orientationUpdateStatus",
                        "field_path": "m_value (first).m_value.m_values.m_orientationUpdateStatus",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            4,
                            76,
                            204,
                            204,
                            204,
                            204,
                            204,
                            204,
                            204,
                            204
                          ]
                        }
                      },
                      "m_pNonObstacleRCSOnlyClassifier": {
                        "field_name": "m_pNonObstacleRCSOnlyClassifier",
                        "field_path": "m_value (first).m_value.m_values.m_pNonObstacleRCSOnlyClassifier",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint16, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint16",
                          "size": 30144,
                          "sample_values": [
                            17,
                            18,
                            36,
                            19,
                            13,
                            29,
                            72,
                            36,
                            17,
                            9
                          ]
                        }
                      },
                      "m_perType": {
                        "field_name": "m_perType",
                        "field_path": "m_value (first).m_value.m_values.m_perType",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      "m_postProcessBitField": {
                        "field_name": "m_postProcessBitField",
                        "field_path": "m_value (first).m_value.m_values.m_postProcessBitField",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_probHasBeenObservedExisting": {
                        "field_name": "m_probHasBeenObservedExisting",
                        "field_path": "m_value (first).m_value.m_values.m_probHasBeenObservedExisting",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.9882439970970154,
                            0.9919129014015198,
                            0.9950000047683716,
                            0.9950000047683716,
                            0.9919161200523376,
                            0.9950000047683716,
                            0.9950000047683716,
                            0.9919190406799316,
                            0.9919191598892212,
                            0.9950000047683716
                          ]
                        }
                      },
                      "m_probHasBeenObservedMoving": {
                        "field_name": "m_probHasBeenObservedMoving",
                        "field_path": "m_value (first).m_value.m_values.m_probHasBeenObservedMoving",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.5,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0
                          ]
                        }
                      },
                      "m_probIsCurrentlyExisting": {
                        "field_name": "m_probIsCurrentlyExisting",
                        "field_path": "m_value (first).m_value.m_values.m_probIsCurrentlyExisting",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0
                          ]
                        }
                      },
                      "m_probIsCurrentlyMoving": {
                        "field_name": "m_probIsCurrentlyMoving",
                        "field_path": "m_value (first).m_value.m_values.m_probIsCurrentlyMoving",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0,
                            1.0
                          ]
                        }
                      },
                      "m_radarAngleInnoDebugState": {
                        "field_name": "m_radarAngleInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_radarAngleInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.07154031097888947,
                            0.008150208741426468,
                            0.07581863552331924,
                            0.25352874398231506,
                            0.1331334114074707,
                            0.04033457115292549,
                            0.12786179780960083,
                            0.12835125625133514,
                            0.1298404186964035
                          ]
                        }
                      },
                      "m_radarBasedInnovation": {
                        "field_name": "m_radarBasedInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_radarBasedInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_radarBasedInnovation",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (first).m_value.m_values.m_radarBasedInnovation.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.0,
                                    -0.08496856689453125,
                                    0.08261680603027344,
                                    -0.02230358123779297,
                                    -0.06582784652709961,
                                    0.2957489490509033,
                                    0.4272838830947876,
                                    0.06286793947219849,
                                    -0.09980878233909607,
                                    -0.14269880950450897
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_radarDrInnoDebugState": {
                        "field_name": "m_radarDrInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_radarDrInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.0283228550106287,
                            0.027538934722542763,
                            0.007434526924043894,
                            0.021942615509033203,
                            0.09858298301696777,
                            0.1424279659986496,
                            0.020955979824066162,
                            0.033269595354795456,
                            0.04756626859307289
                          ]
                        }
                      },
                      "m_radarRawAlphaInnovation": {
                        "field_name": "m_radarRawAlphaInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_radarRawAlphaInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.0,
                            0.003011849941685796,
                            -0.007436325773596764,
                            -0.020983852446079254,
                            -0.0015638975892215967,
                            0.0027987007051706314,
                            -0.010782452300190926,
                            -0.006910580676048994,
                            -0.006395683158189058
                          ]
                        }
                      },
                      "m_recentlyUsedFrontCornerMeasurementHandle": {
                        "field_name": "m_recentlyUsedFrontCornerMeasurementHandle",
                        "field_path": "m_value (first).m_value.m_values.m_recentlyUsedFrontCornerMeasurementHandle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_recentlyUsedVideoMeasurementHandle": {
                        "field_name": "m_recentlyUsedVideoMeasurementHandle",
                        "field_path": "m_value (first).m_value.m_values.m_recentlyUsedVideoMeasurementHandle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            127,
                            127,
                            127,
                            127,
                            127,
                            127,
                            127,
                            127,
                            127,
                            127
                          ]
                        }
                      },
                      "m_referencePointIdx": {
                        "field_name": "m_referencePointIdx",
                        "field_path": "m_value (first).m_value.m_values.m_referencePointIdx",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            10,
                            10,
                            10,
                            10,
                            10,
                            10,
                            10,
                            10,
                            10,
                            10
                          ]
                        }
                      },
                      "m_relevantRadialInnovationInCm": {
                        "field_name": "m_relevantRadialInnovationInCm",
                        "field_path": "m_value (first).m_value.m_values.m_relevantRadialInnovationInCm",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            25,
                            25,
                            25,
                            66,
                            66,
                            66,
                            66,
                            66
                          ]
                        }
                      },
                      "m_sensorMeasuredHistory": {
                        "field_name": "m_sensorMeasuredHistory",
                        "field_path": "m_value (first).m_value.m_values.m_sensorMeasuredHistory",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_isMeasuredHistory'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_sensorMeasuredHistory",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_isMeasuredHistory"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_isMeasuredHistory', 'O')]",
                          "field_values": {
                            "m_isMeasuredHistory": {
                              "field_name": "m_isMeasuredHistory",
                              "field_path": "m_value (first).m_value.m_values.m_sensorMeasuredHistory.m_isMeasuredHistory",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 60288,
                                  "sample_values": [
                                    1,
                                    3,
                                    7,
                                    15,
                                    31,
                                    63,
                                    127,
                                    255,
                                    255,
                                    255
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_splitCounter": {
                        "field_name": "m_splitCounter",
                        "field_path": "m_value (first).m_value.m_values.m_splitCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_state": {
                        "field_name": "m_state",
                        "field_path": "m_value (first).m_value.m_values.m_state",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_state",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (first).m_value.m_values.m_state.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_vectorCovariancePair'], shape: (1, 1)",
                              "converted_value": {
                                "m_vectorCovariancePair": {
                                  "m_covarianceMatrix": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          21,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 633024,
                                        "sample_values": [
                                          2.0927135944366455,
                                          0.9189332723617554,
                                          0.410939484834671,
                                          0.2529315948486328,
                                          0.188634991645813,
                                          0.15537485480308533,
                                          0.1285981684923172,
                                          0.10877839475870132,
                                          0.0905444473028183,
                                          0.09110672026872635
                                        ]
                                      }
                                    }
                                  },
                                  "m_muVector": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          6,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 180864,
                                        "sample_values": [
                                          47.730342864990234,
                                          47.75876998901367,
                                          47.95158004760742,
                                          47.98033905029297,
                                          48.0152587890625,
                                          48.12379455566406,
                                          48.218017578125,
                                          48.23808670043945,
                                          48.24025344848633,
                                          48.25518035888672
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_stationaryLocationsOnlyCounter": {
                        "field_name": "m_stationaryLocationsOnlyCounter",
                        "field_path": "m_value (first).m_value.m_values.m_stationaryLocationsOnlyCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_stoppingSplitCounter": {
                        "field_name": "m_stoppingSplitCounter",
                        "field_path": "m_value (first).m_value.m_values.m_stoppingSplitCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_suspiciousRefPointCounter": {
                        "field_name": "m_suspiciousRefPointCounter",
                        "field_path": "m_value (first).m_value.m_values.m_suspiciousRefPointCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_totalNumCyclesWithOncomingLocations": {
                        "field_name": "m_totalNumCyclesWithOncomingLocations",
                        "field_path": "m_value (first).m_value.m_values.m_totalNumCyclesWithOncomingLocations",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_transferredFromSepCycle": {
                        "field_name": "m_transferredFromSepCycle",
                        "field_path": "m_value (first).m_value.m_values.m_transferredFromSepCycle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_turnRateForCT": {
                        "field_name": "m_turnRateForCT",
                        "field_path": "m_value (first).m_value.m_values.m_turnRateForCT",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_updateDetails": {
                        "field_name": "m_updateDetails",
                        "field_path": "m_value (first).m_value.m_values.m_updateDetails",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_memory', 'm_usedElements'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_updateDetails",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_memory",
                            "m_usedElements"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_memory', 'O'), ('m_usedElements', 'O')]",
                          "field_values": {
                            "m_memory": {
                              "field_name": "m_memory",
                              "field_path": "m_value (first).m_value.m_values.m_updateDetails.m_memory",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_values'], shape: (1, 1)",
                              "converted_value": {
                                "m_values": {
                                  "m_measuredState": {
                                    "m_vectorCovariancePair": {
                                      "m_covarianceMatrix": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              10,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 5425920,
                                            "sample_values": [
                                              0.0,
                                              2.1378731727600098,
                                              0.9287123084068298,
                                              0.8940731883049011,
                                              1.198197364807129,
                                              1.7869110107421875,
                                              1.5785870552062988,
                                              1.5709190368652344,
                                              0.8850052952766418,
                                              0.9029588103294373
                                            ]
                                          }
                                        }
                                      },
                                      "m_muVector": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              4,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 2170368,
                                            "sample_values": [
                                              0.0,
                                              43.75524139404297,
                                              44.194786071777344,
                                              44.014347076416016,
                                              44.0501594543457,
                                              44.82819366455078,
                                              44.84610366821289,
                                              44.08784866333008,
                                              44.14451217651367,
                                              44.2125129699707
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "m_predictedState": {
                                    "m_data": {
                                      "m_rotInfo": {
                                        "m_cosAngle": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 542592,
                                              "sample_values": [
                                                1.0,
                                                1.0,
                                                0.9999915957450867,
                                                0.9999876022338867,
                                                0.9999890327453613,
                                                0.99969482421875,
                                                0.999439537525177,
                                                0.9994308948516846,
                                                0.9994500279426575,
                                                0.9994055032730103
                                              ]
                                            }
                                          }
                                        },
                                        "m_sinAngle": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 542592,
                                              "sample_values": [
                                                0.0,
                                                9.5367431640625e-06,
                                                -0.004080283921211958,
                                                -0.004967192187905312,
                                                -0.004666311666369438,
                                                -0.024700036272406578,
                                                -0.0334739126265049,
                                                -0.03373149782419205,
                                                -0.033159852027893066,
                                                -0.034474216401576996
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "m_vectorCovariancePair": {
                                        "m_covarianceMatrix": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                28,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 15192576,
                                              "sample_values": [
                                                0.0,
                                                2.094299077987671,
                                                0.9231420159339905,
                                                0.41476359963417053,
                                                0.25665122270584106,
                                                0.1893172711133957,
                                                0.15800701081752777,
                                                0.13214747607707977,
                                                0.11226329207420349,
                                                0.09155388176441193
                                              ]
                                            }
                                          }
                                        },
                                        "m_muVector": {
                                          "m_data": {
                                            "m_value": {
                                              "type": "large_array",
                                              "shape": [
                                                7,
                                                18,
                                                32,
                                                942
                                              ],
                                              "dtype": "float64",
                                              "size": 3798144,
                                              "sample_values": [
                                                0.0,
                                                47.78388977050781,
                                                47.802860260009766,
                                                47.999778747558594,
                                                48.01734924316406,
                                                48.0271110534668,
                                                48.14316940307617,
                                                48.24488067626953,
                                                48.26198196411133,
                                                48.25261688232422
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "m_refPoint": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      10,
                                      10,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15,
                                      15
                                    ]
                                  },
                                  "m_responsible": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "int32",
                                    "size": 542592,
                                    "sample_values": [
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10
                                    ]
                                  },
                                  "m_stateToUpdate": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            21,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 11394432,
                                          "sample_values": [
                                            0.0,
                                            2.0939643383026123,
                                            0.9230040311813354,
                                            0.41470709443092346,
                                            0.25661900639533997,
                                            0.18928663432598114,
                                            0.157979816198349,
                                            0.13212651014328003,
                                            0.11225050687789917,
                                            0.09153851866722107
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            6,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 3255552,
                                          "sample_values": [
                                            0.0,
                                            43.91292953491211,
                                            43.931968688964844,
                                            44.128883361816406,
                                            44.14637756347656,
                                            44.1555290222168,
                                            44.270851135253906,
                                            44.37248611450195,
                                            44.389591217041016,
                                            44.38005447387695
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "m_type": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      70,
                                      26,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10,
                                      10
                                    ]
                                  },
                                  "m_updatedState": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            21,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 11394432,
                                          "sample_values": [
                                            0.0,
                                            1.057685136795044,
                                            0.4616886079311371,
                                            0.2819005846977234,
                                            0.2094842940568924,
                                            0.17075717449188232,
                                            0.14154723286628723,
                                            0.1195850819349289,
                                            0.10000961273908615,
                                            0.10001303255558014
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            6,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 3255552,
                                          "sample_values": [
                                            0.0,
                                            47.701446533203125,
                                            47.92726135253906,
                                            47.957313537597656,
                                            47.995689392089844,
                                            48.09083557128906,
                                            48.193660736083984,
                                            48.21814727783203,
                                            48.23189163208008,
                                            48.2362060546875
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "m_used": {
                                    "type": "large_array",
                                    "shape": [
                                      18,
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 542592,
                                    "sample_values": [
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1,
                                      1
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_usedElements": {
                              "field_name": "m_usedElements",
                              "field_path": "m_value (first).m_value.m_values.m_updateDetails.m_usedElements",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_validModulations": {
                        "field_name": "m_validModulations",
                        "field_path": "m_value (first).m_value.m_values.m_validModulations",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            2,
                            2,
                            2,
                            2,
                            3,
                            4,
                            4,
                            4,
                            4
                          ]
                        }
                      },
                      "m_varianceOfTurnRateAfterPredictionWithCT": {
                        "field_name": "m_varianceOfTurnRateAfterPredictionWithCT",
                        "field_path": "m_value (first).m_value.m_values.m_varianceOfTurnRateAfterPredictionWithCT",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_varianceTangentialAcc": {
                        "field_name": "m_varianceTangentialAcc",
                        "field_path": "m_value (first).m_value.m_values.m_varianceTangentialAcc",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_videoAngleInnoDebugState": {
                        "field_name": "m_videoAngleInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_videoAngleInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.061249855905771255,
                            0.04328545928001404,
                            0.026451347395777702,
                            0.0385286808013916,
                            0.041868142783641815,
                            0.02828996069729328,
                            0.020753171294927597,
                            0.02788494899868965,
                            0.027796609327197075,
                            0.023989690467715263
                          ]
                        }
                      },
                      "m_videoBasedInnovation": {
                        "field_name": "m_videoBasedInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_videoBasedInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_videoBasedInnovation",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (first).m_value.m_values.m_videoBasedInnovation.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.6032695770263672,
                                    0.8645524978637695,
                                    0.8786702156066895,
                                    0.8955309391021729,
                                    0.9126378297805786,
                                    0.8658152222633362,
                                    0.8221592903137207,
                                    0.7923262119293213,
                                    0.7744818925857544,
                                    0.7806335091590881
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_videoDrInnoDebugState": {
                        "field_name": "m_videoDrInnoDebugState",
                        "field_path": "m_value (first).m_value.m_values.m_videoDrInnoDebugState",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            1.2649826203414705e-05,
                            1.7816908439272083e-05,
                            1.7986216334975325e-05,
                            1.8326689314562827e-05,
                            1.8632450519362465e-05,
                            1.767344838299323e-05,
                            1.662776412558742e-05,
                            1.609013088454958e-05,
                            1.562313445901964e-05,
                            1.5820956832612865e-05
                          ]
                        }
                      },
                      "m_videoInputWithOncomingVrCounter": {
                        "field_name": "m_videoInputWithOncomingVrCounter",
                        "field_path": "m_value (first).m_value.m_values.m_videoInputWithOncomingVrCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_videoInvTtc": {
                        "field_name": "m_videoInvTtc",
                        "field_path": "m_value (first).m_value.m_values.m_videoInvTtc",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            -0.0009765625,
                            0.0,
                            0.0,
                            0.0,
                            0.0009765625,
                            0.0009765625,
                            0.001953125,
                            0.001953125,
                            0.001953125,
                            0.001953125
                          ]
                        }
                      },
                      "m_videoLaneAssociation": {
                        "field_name": "m_videoLaneAssociation",
                        "field_path": "m_value (first).m_value.m_values.m_videoLaneAssociation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2
                          ]
                        }
                      },
                      "m_videoRawAlphaInnovation": {
                        "field_name": "m_videoRawAlphaInnovation",
                        "field_path": "m_value (first).m_value.m_values.m_videoRawAlphaInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.002311463700607419,
                            0.0004497080226428807,
                            0.0001717614068184048,
                            0.0009318150696344674,
                            0.0008288651588372886,
                            0.00027010278427042067,
                            0.00023574801161885262,
                            0.0006414514500647783,
                            0.0004995903000235558,
                            0.0003704477858263999
                          ]
                        }
                      },
                      "m_videoVr": {
                        "field_name": "m_videoVr",
                        "field_path": "m_value (first).m_value.m_values.m_videoVr",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.05089074745774269,
                            0.005320691037923098,
                            0.0017847266281023622,
                            -0.0,
                            -0.04202116280794144,
                            -0.03994278609752655,
                            -0.08787082135677338,
                            -0.08777899295091629,
                            -0.08993256837129593,
                            -0.08773421496152878
                          ]
                        }
                      },
                      "m_videoVy": {
                        "field_name": "m_videoVy",
                        "field_path": "m_value (first).m_value.m_values.m_videoVy",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            -0.2813972532749176,
                            -0.28090161085128784,
                            -0.09170953929424286,
                            0.0,
                            -0.18864822387695312,
                            -0.2805553674697876,
                            -0.18782085180282593,
                            -0.1877799928188324,
                            -0.08995674550533295,
                            -0.18790820240974426
                          ]
                        }
                      },
                      "m_visualSignals": {
                        "field_name": "m_visualSignals",
                        "field_path": "m_value (first).m_value.m_values.m_visualSignals",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_visualSignalStatus'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_visualSignals",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_visualSignalStatus"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_visualSignalStatus', 'O')]",
                          "field_values": {
                            "m_visualSignalStatus": {
                              "field_name": "m_visualSignalStatus",
                              "field_path": "m_value (first).m_value.m_values.m_visualSignals.m_visualSignalStatus",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9,
                                  9
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_vyInconsistent": {
                        "field_name": "m_vyInconsistent",
                        "field_path": "m_value (first).m_value.m_values.m_vyInconsistent",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_vyUnreliableAccumulated": {
                        "field_name": "m_vyUnreliableAccumulated",
                        "field_path": "m_value (first).m_value.m_values.m_vyUnreliableAccumulated",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0,
                            0.0
                          ]
                        }
                      },
                      "m_wExistOfAssociatedVideoObject": {
                        "field_name": "m_wExistOfAssociatedVideoObject",
                        "field_path": "m_value (first).m_value.m_values.m_wExistOfAssociatedVideoObject",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625,
                            0.9998931884765625
                          ]
                        }
                      },
                      "m_yawAngleTrustworthy": {
                        "field_name": "m_yawAngleTrustworthy",
                        "field_path": "m_value (first).m_value.m_values.m_yawAngleTrustworthy",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      "m_yawAngleVCP": {
                        "field_name": "m_yawAngleVCP",
                        "field_path": "m_value (first).m_value.m_values.m_yawAngleVCP",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.m_yawAngleVCP",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_covarianceMatrix",
                            "m_muVector"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                          "field_values": {
                            "m_covarianceMatrix": {
                              "field_name": "m_covarianceMatrix",
                              "field_path": "m_value (first).m_value.m_values.m_yawAngleVCP.m_covarianceMatrix",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0,
                                      0.0001968851574929431,
                                      0.00015834011719562113,
                                      0.002131055109202862,
                                      0.003750164993107319,
                                      0.0003186195099260658,
                                      0.00015409314073622227
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_muVector": {
                              "field_name": "m_muVector",
                              "field_path": "m_value (first).m_value.m_values.m_yawAngleVCP.m_muVector",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_data'], shape: (1, 1)",
                              "converted_value": {
                                "m_data": {
                                  "m_value": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "float64",
                                    "size": 30144,
                                    "sample_values": [
                                      2.8133392333984375e-05,
                                      -0.0017943382263183594,
                                      -0.0057332515716552734,
                                      -0.005822658538818359,
                                      -0.02469635009765625,
                                      -0.03347063064575195,
                                      -0.03372359275817871,
                                      -0.03315138816833496,
                                      -0.03447365760803223,
                                      -0.033808231353759766
                                    ]
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "sensorFilterFusHelper": {
                        "field_name": "sensorFilterFusHelper",
                        "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_allActiveSensorTypesContributedInLastCycle', 'm_timePassedSinceAllActiveSensorTypesContributed', 'm_timePassedSinceAllActiveSensorTypesStartedToContribute', 'm_totalNumSensorUpdates', 'm_untrustworthyUpdates', 'm_updatesSinceLastSensorUpdate'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (first).m_value.m_values.sensorFilterFusHelper",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_allActiveSensorTypesContributedInLastCycle",
                            "m_timePassedSinceAllActiveSensorTypesContributed",
                            "m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                            "m_totalNumSensorUpdates",
                            "m_untrustworthyUpdates",
                            "m_updatesSinceLastSensorUpdate"
                          ],
                          "field_count": 6,
                          "total_size": 1,
                          "dtype": "[('m_allActiveSensorTypesContributedInLastCycle', 'O'), ('m_timePassedSinceAllActiveSensorTypesContributed', 'O'), ('m_timePassedSinceAllActiveSensorTypesStartedToContribute', 'O'), ('m_totalNumSensorUpdates', 'O'), ('m_untrustworthyUpdates', 'O'), ('m_updatesSinceLastSensorUpdate', 'O')]",
                          "field_values": {
                            "m_allActiveSensorTypesContributedInLastCycle": {
                              "field_name": "m_allActiveSensorTypesContributedInLastCycle",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_allActiveSensorTypesContributedInLastCycle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  0,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_timePassedSinceAllActiveSensorTypesContributed": {
                              "field_name": "m_timePassedSinceAllActiveSensorTypesContributed",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesContributed",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint16",
                                  "size": 30144,
                                  "sample_values": [
                                    65535,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_timePassedSinceAllActiveSensorTypesStartedToContribute": {
                              "field_name": "m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint16",
                                  "size": 30144,
                                  "sample_values": [
                                    65535,
                                    0,
                                    307,
                                    555,
                                    858,
                                    1126,
                                    1351,
                                    1579,
                                    1843,
                                    2048
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_totalNumSensorUpdates": {
                              "field_name": "m_totalNumSensorUpdates",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_totalNumSensorUpdates",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_untrustworthyUpdates": {
                              "field_name": "m_untrustworthyUpdates",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_untrustworthyUpdates",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_updatesSinceLastSensorUpdate": {
                              "field_name": "m_updatesSinceLastSensorUpdate",
                              "field_path": "m_value (first).m_value.m_values.sensorFilterFusHelper.m_updatesSinceLastSensorUpdate",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    5,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 150720,
                                  "sample_values": [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "success": true
    },
    "step_4_second_value": {
      "level_name": "m_value (second)",
      "description": "Second level value structure",
      "extraction_result": {
        "extraction_path": "m_value (second)",
        "current_depth": 0,
        "max_depth": 4,
        "data_type": "<class 'numpy.ndarray'>",
        "extraction_status": "success",
        "array_type": "structured",
        "shape": [
          1,
          1
        ],
        "field_names": [
          "m_values"
        ],
        "field_count": 1,
        "total_size": 1,
        "dtype": "[('m_values', 'O')]",
        "field_values": {
          "m_values": {
            "field_name": "m_values",
            "field_path": "m_value (second).m_values",
            "field_type": "<class 'numpy.ndarray'>",
            "field_info": "  Structured array with fields: ['m_AvgVObjDxError', 'm_TransferredFromSep', 'm_additionalDepMembers', 'm_alternativeHypothesis', 'm_avgAlphaInnovation', 'm_avgDxInnovation', 'm_badSensorBasedInnoCount', 'm_changedObjectTypeBasedOnVelocity', 'm_cornerAngleInnoDebugState', 'm_cornerDrInnoDebugState', 'm_createdByVideoWithHighVy', 'm_currentOncomingCounterBasedOnLocations', 'm_dBRcs', 'm_dimension', 'm_dimensionCovarianceMatrixDiagonal', 'm_dxDistanceWhereObjStopped', 'm_elevation', 'm_elevationVCPFusedQM', 'm_expectedVrHighEnoughForMuDopplerCounter', 'm_filterType', 'm_functionRelevanceBitField', 'm_heightVCPFusedQM', 'm_id', 'm_idOfReplacedObject', 'm_implausibleDepCounter', 'm_initialPos', 'm_isCTModelUsedForPrediction', 'm_isMeasurable', 'm_isMeasured', 'm_isOrientationImplausibleCompared2Vid', 'm_isPossibleRadarCrossPathGhost', 'm_isSuppressedDueToVideoOtcPostProcessing', 'm_isSuppressedUntilNextVideoUpdate', 'm_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'm_isValid', 'm_longitudinalSimilarObjectCycleCnt', 'm_microDopplerFilterState', 'm_microDopplerFiltered', 'm_modulationHistory', 'm_movementHistoryCounter', 'm_movingLocationCounter', 'm_nonPlausibleLocationCnt', 'm_numConsecutiveCyclesWithoutOncomingLocations', 'm_numCyclesExisting', 'm_numCyclesNoModelBasedOrientationEstimationPossible', 'm_numCyclesNoOrientationUpdate', 'm_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'm_numCyclesSinceMotionModelChange', 'm_numCyclesTwoWheelerRefPtUsedForUpdate', 'm_numMicroDopplerCycles', 'm_objectCorridorRelation', 'm_objectOrientationUnreliableCount', 'm_objectTypeTree', 'm_orientationEstimate', 'm_orientationUpdateStatus', 'm_pNonObstacleRCSOnlyClassifier', 'm_perType', 'm_postProcessBitField', 'm_probHasBeenObservedExisting', 'm_probHasBeenObservedMoving', 'm_probIsCurrentlyExisting', 'm_probIsCurrentlyMoving', 'm_radarAngleInnoDebugState', 'm_radarBasedInnovation', 'm_radarDrInnoDebugState', 'm_radarRawAlphaInnovation', 'm_recentlyUsedFrontCornerMeasurementHandle', 'm_recentlyUsedVideoMeasurementHandle', 'm_referencePointIdx', 'm_relevantRadialInnovationInCm', 'm_sensorMeasuredHistory', 'm_splitCounter', 'm_state', 'm_stationaryLocationsOnlyCounter', 'm_stoppingSplitCounter', 'm_suspiciousRefPointCounter', 'm_totalNumCyclesWithOncomingLocations', 'm_transferredFromSepCycle', 'm_turnRateForCT', 'm_updateDetails', 'm_validModulations', 'm_varianceOfTurnRateAfterPredictionWithCT', 'm_varianceTangentialAcc', 'm_videoAngleInnoDebugState', 'm_videoBasedInnovation', 'm_videoDrInnoDebugState', 'm_videoInputWithOncomingVrCounter', 'm_videoInvTtc', 'm_videoLaneAssociation', 'm_videoRawAlphaInnovation', 'm_videoVr', 'm_videoVy', 'm_visualSignals', 'm_vyInconsistent', 'm_vyUnreliableAccumulated', 'm_wExistOfAssociatedVideoObject', 'm_yawAngleTrustworthy', 'm_yawAngleVCP', 'sensorFilterFusHelper'], shape: (1, 1)",
            "recursive_extraction": {
              "extraction_path": "m_value (second).m_values",
              "current_depth": 1,
              "max_depth": 4,
              "data_type": "<class 'numpy.ndarray'>",
              "extraction_status": "success",
              "array_type": "structured",
              "shape": [
                1,
                1
              ],
              "field_names": [
                "m_AvgVObjDxError",
                "m_TransferredFromSep",
                "m_additionalDepMembers",
                "m_alternativeHypothesis",
                "m_avgAlphaInnovation",
                "m_avgDxInnovation",
                "m_badSensorBasedInnoCount",
                "m_changedObjectTypeBasedOnVelocity",
                "m_cornerAngleInnoDebugState",
                "m_cornerDrInnoDebugState",
                "m_createdByVideoWithHighVy",
                "m_currentOncomingCounterBasedOnLocations",
                "m_dBRcs",
                "m_dimension",
                "m_dimensionCovarianceMatrixDiagonal",
                "m_dxDistanceWhereObjStopped",
                "m_elevation",
                "m_elevationVCPFusedQM",
                "m_expectedVrHighEnoughForMuDopplerCounter",
                "m_filterType",
                "m_functionRelevanceBitField",
                "m_heightVCPFusedQM",
                "m_id",
                "m_idOfReplacedObject",
                "m_implausibleDepCounter",
                "m_initialPos",
                "m_isCTModelUsedForPrediction",
                "m_isMeasurable",
                "m_isMeasured",
                "m_isOrientationImplausibleCompared2Vid",
                "m_isPossibleRadarCrossPathGhost",
                "m_isSuppressedDueToVideoOtcPostProcessing",
                "m_isSuppressedUntilNextVideoUpdate",
                "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                "m_isValid",
                "m_longitudinalSimilarObjectCycleCnt",
                "m_microDopplerFilterState",
                "m_microDopplerFiltered",
                "m_modulationHistory",
                "m_movementHistoryCounter",
                "m_movingLocationCounter",
                "m_nonPlausibleLocationCnt",
                "m_numConsecutiveCyclesWithoutOncomingLocations",
                "m_numCyclesExisting",
                "m_numCyclesNoModelBasedOrientationEstimationPossible",
                "m_numCyclesNoOrientationUpdate",
                "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                "m_numCyclesSinceMotionModelChange",
                "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                "m_numMicroDopplerCycles",
                "m_objectCorridorRelation",
                "m_objectOrientationUnreliableCount",
                "m_objectTypeTree",
                "m_orientationEstimate",
                "m_orientationUpdateStatus",
                "m_pNonObstacleRCSOnlyClassifier",
                "m_perType",
                "m_postProcessBitField",
                "m_probHasBeenObservedExisting",
                "m_probHasBeenObservedMoving",
                "m_probIsCurrentlyExisting",
                "m_probIsCurrentlyMoving",
                "m_radarAngleInnoDebugState",
                "m_radarBasedInnovation",
                "m_radarDrInnoDebugState",
                "m_radarRawAlphaInnovation",
                "m_recentlyUsedFrontCornerMeasurementHandle",
                "m_recentlyUsedVideoMeasurementHandle",
                "m_referencePointIdx",
                "m_relevantRadialInnovationInCm",
                "m_sensorMeasuredHistory",
                "m_splitCounter",
                "m_state",
                "m_stationaryLocationsOnlyCounter",
                "m_stoppingSplitCounter",
                "m_suspiciousRefPointCounter",
                "m_totalNumCyclesWithOncomingLocations",
                "m_transferredFromSepCycle",
                "m_turnRateForCT",
                "m_updateDetails",
                "m_validModulations",
                "m_varianceOfTurnRateAfterPredictionWithCT",
                "m_varianceTangentialAcc",
                "m_videoAngleInnoDebugState",
                "m_videoBasedInnovation",
                "m_videoDrInnoDebugState",
                "m_videoInputWithOncomingVrCounter",
                "m_videoInvTtc",
                "m_videoLaneAssociation",
                "m_videoRawAlphaInnovation",
                "m_videoVr",
                "m_videoVy",
                "m_visualSignals",
                "m_vyInconsistent",
                "m_vyUnreliableAccumulated",
                "m_wExistOfAssociatedVideoObject",
                "m_yawAngleTrustworthy",
                "m_yawAngleVCP",
                "sensorFilterFusHelper"
              ],
              "field_count": 99,
              "total_size": 1,
              "dtype": "[('m_AvgVObjDxError', 'O'), ('m_TransferredFromSep', 'O'), ('m_additionalDepMembers', 'O'), ('m_alternativeHypothesis', 'O'), ('m_avgAlphaInnovation', 'O'), ('m_avgDxInnovation', 'O'), ('m_badSensorBasedInnoCount', 'O'), ('m_changedObjectTypeBasedOnVelocity', 'O'), ('m_cornerAngleInnoDebugState', 'O'), ('m_cornerDrInnoDebugState', 'O'), ('m_createdByVideoWithHighVy', 'O'), ('m_currentOncomingCounterBasedOnLocations', 'O'), ('m_dBRcs', 'O'), ('m_dimension', 'O'), ('m_dimensionCovarianceMatrixDiagonal', 'O'), ('m_dxDistanceWhereObjStopped', 'O'), ('m_elevation', 'O'), ('m_elevationVCPFusedQM', 'O'), ('m_expectedVrHighEnoughForMuDopplerCounter', 'O'), ('m_filterType', 'O'), ('m_functionRelevanceBitField', 'O'), ('m_heightVCPFusedQM', 'O'), ('m_id', 'O'), ('m_idOfReplacedObject', 'O'), ('m_implausibleDepCounter', 'O'), ('m_initialPos', 'O'), ('m_isCTModelUsedForPrediction', 'O'), ('m_isMeasurable', 'O'), ('m_isMeasured', 'O'), ('m_isOrientationImplausibleCompared2Vid', 'O'), ('m_isPossibleRadarCrossPathGhost', 'O'), ('m_isSuppressedDueToVideoOtcPostProcessing', 'O'), ('m_isSuppressedUntilNextVideoUpdate', 'O'), ('m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'O'), ('m_isValid', 'O'), ('m_longitudinalSimilarObjectCycleCnt', 'O'), ('m_microDopplerFilterState', 'O'), ('m_microDopplerFiltered', 'O'), ('m_modulationHistory', 'O'), ('m_movementHistoryCounter', 'O'), ('m_movingLocationCounter', 'O'), ('m_nonPlausibleLocationCnt', 'O'), ('m_numConsecutiveCyclesWithoutOncomingLocations', 'O'), ('m_numCyclesExisting', 'O'), ('m_numCyclesNoModelBasedOrientationEstimationPossible', 'O'), ('m_numCyclesNoOrientationUpdate', 'O'), ('m_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'O'), ('m_numCyclesSinceMotionModelChange', 'O'), ('m_numCyclesTwoWheelerRefPtUsedForUpdate', 'O'), ('m_numMicroDopplerCycles', 'O'), ('m_objectCorridorRelation', 'O'), ('m_objectOrientationUnreliableCount', 'O'), ('m_objectTypeTree', 'O'), ('m_orientationEstimate', 'O'), ('m_orientationUpdateStatus', 'O'), ('m_pNonObstacleRCSOnlyClassifier', 'O'), ('m_perType', 'O'), ('m_postProcessBitField', 'O'), ('m_probHasBeenObservedExisting', 'O'), ('m_probHasBeenObservedMoving', 'O'), ('m_probIsCurrentlyExisting', 'O'), ('m_probIsCurrentlyMoving', 'O'), ('m_radarAngleInnoDebugState', 'O'), ('m_radarBasedInnovation', 'O'), ('m_radarDrInnoDebugState', 'O'), ('m_radarRawAlphaInnovation', 'O'), ('m_recentlyUsedFrontCornerMeasurementHandle', 'O'), ('m_recentlyUsedVideoMeasurementHandle', 'O'), ('m_referencePointIdx', 'O'), ('m_relevantRadialInnovationInCm', 'O'), ('m_sensorMeasuredHistory', 'O'), ('m_splitCounter', 'O'), ('m_state', 'O'), ('m_stationaryLocationsOnlyCounter', 'O'), ('m_stoppingSplitCounter', 'O'), ('m_suspiciousRefPointCounter', 'O'), ('m_totalNumCyclesWithOncomingLocations', 'O'), ('m_transferredFromSepCycle', 'O'), ('m_turnRateForCT', 'O'), ('m_updateDetails', 'O'), ('m_validModulations', 'O'), ('m_varianceOfTurnRateAfterPredictionWithCT', 'O'), ('m_varianceTangentialAcc', 'O'), ('m_videoAngleInnoDebugState', 'O'), ('m_videoBasedInnovation', 'O'), ('m_videoDrInnoDebugState', 'O'), ('m_videoInputWithOncomingVrCounter', 'O'), ('m_videoInvTtc', 'O'), ('m_videoLaneAssociation', 'O'), ('m_videoRawAlphaInnovation', 'O'), ('m_videoVr', 'O'), ('m_videoVy', 'O'), ('m_visualSignals', 'O'), ('m_vyInconsistent', 'O'), ('m_vyUnreliableAccumulated', 'O'), ('m_wExistOfAssociatedVideoObject', 'O'), ('m_yawAngleTrustworthy', 'O'), ('m_yawAngleVCP', 'O'), ('sensorFilterFusHelper', 'O')]",
              "field_values": {
                "m_AvgVObjDxError": {
                  "field_name": "m_AvgVObjDxError",
                  "field_path": "m_value (second).m_values.m_AvgVObjDxError",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.28145885467529297,
                      0.43429112434387207,
                      0.5538162589073181,
                      0.6477983593940735,
                      0.6905969381332397,
                      0.7125735282897949,
                      0.7250534296035767,
                      0.7329494953155518,
                      0.7464084029197693
                    ]
                  }
                },
                "m_TransferredFromSep": {
                  "field_name": "m_TransferredFromSep",
                  "field_path": "m_value (second).m_values.m_TransferredFromSep",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_additionalDepMembers": {
                  "field_name": "m_additionalDepMembers",
                  "field_path": "m_value (second).m_values.m_additionalDepMembers",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_additionalPostProcessBitField', 'm_areVideoAndDep4PlusWheelerBearingInconsistent', 'm_areVideoAndDepLatVelBearingInconsistent', 'm_areVideoAndDepLongiVelBearingInconsistent', 'm_contributingSensorUnreliable', 'm_cornerBasedInnovation', 'm_cornerRadarVelocityOverGround', 'm_hasSuspiciousVideoObjectJumps', 'm_implausibleRadarVrJumpCounter', 'm_implausibleRadarVyJumpCounter', 'm_isObjectSensorPMovingLowAndVyDeviationHigh', 'm_isObjectSensorVyDeviationVeryHigh', 'm_isSuspiciousVideoCreatedFastCrossingObj', 'm_isVideoUpdatedAfterLongRadarOnlyPeriod', 'm_isWronglySplittedVruObjectFromLargerVehicle', 'm_normedRadarAngleInno', 'm_normedRadarDrInno', 'm_numCyclesWithoutMicroDoppler', 'm_radarVrOverGround', 'm_videoVAlpha', 'm_videoVelocityOverGround', 'm_videoYawAngle', 'm_visibleEdgeLostCounter'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_additionalDepMembers",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_additionalPostProcessBitField",
                      "m_areVideoAndDep4PlusWheelerBearingInconsistent",
                      "m_areVideoAndDepLatVelBearingInconsistent",
                      "m_areVideoAndDepLongiVelBearingInconsistent",
                      "m_contributingSensorUnreliable",
                      "m_cornerBasedInnovation",
                      "m_cornerRadarVelocityOverGround",
                      "m_hasSuspiciousVideoObjectJumps",
                      "m_implausibleRadarVrJumpCounter",
                      "m_implausibleRadarVyJumpCounter",
                      "m_isObjectSensorPMovingLowAndVyDeviationHigh",
                      "m_isObjectSensorVyDeviationVeryHigh",
                      "m_isSuspiciousVideoCreatedFastCrossingObj",
                      "m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                      "m_isWronglySplittedVruObjectFromLargerVehicle",
                      "m_normedRadarAngleInno",
                      "m_normedRadarDrInno",
                      "m_numCyclesWithoutMicroDoppler",
                      "m_radarVrOverGround",
                      "m_videoVAlpha",
                      "m_videoVelocityOverGround",
                      "m_videoYawAngle",
                      "m_visibleEdgeLostCounter"
                    ],
                    "field_count": 23,
                    "total_size": 1,
                    "dtype": "[('m_additionalPostProcessBitField', 'O'), ('m_areVideoAndDep4PlusWheelerBearingInconsistent', 'O'), ('m_areVideoAndDepLatVelBearingInconsistent', 'O'), ('m_areVideoAndDepLongiVelBearingInconsistent', 'O'), ('m_contributingSensorUnreliable', 'O'), ('m_cornerBasedInnovation', 'O'), ('m_cornerRadarVelocityOverGround', 'O'), ('m_hasSuspiciousVideoObjectJumps', 'O'), ('m_implausibleRadarVrJumpCounter', 'O'), ('m_implausibleRadarVyJumpCounter', 'O'), ('m_isObjectSensorPMovingLowAndVyDeviationHigh', 'O'), ('m_isObjectSensorVyDeviationVeryHigh', 'O'), ('m_isSuspiciousVideoCreatedFastCrossingObj', 'O'), ('m_isVideoUpdatedAfterLongRadarOnlyPeriod', 'O'), ('m_isWronglySplittedVruObjectFromLargerVehicle', 'O'), ('m_normedRadarAngleInno', 'O'), ('m_normedRadarDrInno', 'O'), ('m_numCyclesWithoutMicroDoppler', 'O'), ('m_radarVrOverGround', 'O'), ('m_videoVAlpha', 'O'), ('m_videoVelocityOverGround', 'O'), ('m_videoYawAngle', 'O'), ('m_visibleEdgeLostCounter', 'O')]",
                    "field_values": {
                      "m_additionalPostProcessBitField": {
                        "field_name": "m_additionalPostProcessBitField",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_additionalPostProcessBitField",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_areVideoAndDep4PlusWheelerBearingInconsistent": {
                        "field_name": "m_areVideoAndDep4PlusWheelerBearingInconsistent",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_areVideoAndDep4PlusWheelerBearingInconsistent",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_areVideoAndDepLatVelBearingInconsistent": {
                        "field_name": "m_areVideoAndDepLatVelBearingInconsistent",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_areVideoAndDepLatVelBearingInconsistent",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_areVideoAndDepLongiVelBearingInconsistent": {
                        "field_name": "m_areVideoAndDepLongiVelBearingInconsistent",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_areVideoAndDepLongiVelBearingInconsistent",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_contributingSensorUnreliable": {
                        "field_name": "m_contributingSensorUnreliable",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_contributingSensorUnreliable",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_cornerBasedInnovation": {
                        "field_name": "m_cornerBasedInnovation",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerBasedInnovation",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerBasedInnovation",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerBasedInnovation.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_cornerRadarVelocityOverGround": {
                        "field_name": "m_cornerRadarVelocityOverGround",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerRadarVelocityOverGround",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerRadarVelocityOverGround",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_additionalDepMembers.m_cornerRadarVelocityOverGround.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_hasSuspiciousVideoObjectJumps": {
                        "field_name": "m_hasSuspiciousVideoObjectJumps",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_hasSuspiciousVideoObjectJumps",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_implausibleRadarVrJumpCounter": {
                        "field_name": "m_implausibleRadarVrJumpCounter",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_implausibleRadarVrJumpCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255,
                            255
                          ]
                        }
                      },
                      "m_implausibleRadarVyJumpCounter": {
                        "field_name": "m_implausibleRadarVyJumpCounter",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_implausibleRadarVyJumpCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isObjectSensorPMovingLowAndVyDeviationHigh": {
                        "field_name": "m_isObjectSensorPMovingLowAndVyDeviationHigh",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_isObjectSensorPMovingLowAndVyDeviationHigh",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isObjectSensorVyDeviationVeryHigh": {
                        "field_name": "m_isObjectSensorVyDeviationVeryHigh",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_isObjectSensorVyDeviationVeryHigh",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isSuspiciousVideoCreatedFastCrossingObj": {
                        "field_name": "m_isSuspiciousVideoCreatedFastCrossingObj",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_isSuspiciousVideoCreatedFastCrossingObj",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isVideoUpdatedAfterLongRadarOnlyPeriod": {
                        "field_name": "m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_isVideoUpdatedAfterLongRadarOnlyPeriod",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_isWronglySplittedVruObjectFromLargerVehicle": {
                        "field_name": "m_isWronglySplittedVruObjectFromLargerVehicle",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_isWronglySplittedVruObjectFromLargerVehicle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_normedRadarAngleInno": {
                        "field_name": "m_normedRadarAngleInno",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_normedRadarAngleInno",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            -0.07154031097888947,
                            -0.008150208741426468,
                            -0.07581863552331924,
                            -0.25352874398231506,
                            -0.1331334114074707,
                            -0.04033457115292549,
                            -0.12786179780960083,
                            -0.12835125625133514,
                            -0.1298404186964035
                          ]
                        }
                      },
                      "m_normedRadarDrInno": {
                        "field_name": "m_normedRadarDrInno",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_normedRadarDrInno",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            -0.0283228550106287,
                            0.027538934722542763,
                            -0.007434526924043894,
                            -0.021942615509033203,
                            0.09858298301696777,
                            0.1424279659986496,
                            0.020955979824066162,
                            -0.033269595354795456,
                            -0.04756626859307289
                          ]
                        }
                      },
                      "m_numCyclesWithoutMicroDoppler": {
                        "field_name": "m_numCyclesWithoutMicroDoppler",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_numCyclesWithoutMicroDoppler",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      },
                      "m_radarVrOverGround": {
                        "field_name": "m_radarVrOverGround",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_radarVrOverGround",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            0.0,
                            18.574792861938477,
                            18.700416564941406,
                            18.795713424682617,
                            18.8829288482666,
                            18.975099563598633,
                            19.089622497558594,
                            19.16509437561035,
                            19.253755569458008,
                            19.316547393798828
                          ]
                        }
                      },
                      "m_videoVAlpha": {
                        "field_name": "m_videoVAlpha",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_videoVAlpha",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            -0.0059814453125,
                            -0.0059814453125,
                            -0.001953125,
                            0.0,
                            -0.0040283203125,
                            -0.0059814453125,
                            -0.0040283203125,
                            -0.0040283203125,
                            -0.001953125,
                            -0.0040283203125
                          ]
                        }
                      },
                      "m_videoVelocityOverGround": {
                        "field_name": "m_videoVelocityOverGround",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_videoVelocityOverGround",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_additionalDepMembers.m_videoVelocityOverGround",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_additionalDepMembers.m_videoVelocityOverGround.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    2,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 60288,
                                  "sample_values": [
                                    18.034820556640625,
                                    18.16199493408203,
                                    18.283489227294922,
                                    18.44285011291504,
                                    18.506784439086914,
                                    18.62368392944336,
                                    18.677183151245117,
                                    18.7930965423584,
                                    18.89933204650879,
                                    18.987215042114258
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_videoYawAngle": {
                        "field_name": "m_videoYawAngle",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_videoYawAngle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 30144,
                          "sample_values": [
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625,
                            -0.0299072265625
                          ]
                        }
                      },
                      "m_visibleEdgeLostCounter": {
                        "field_name": "m_visibleEdgeLostCounter",
                        "field_path": "m_value (second).m_values.m_additionalDepMembers.m_visibleEdgeLostCounter",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                          ]
                        }
                      }
                    }
                  }
                },
                "m_alternativeHypothesis": {
                  "field_name": "m_alternativeHypothesis",
                  "field_path": "m_value (second).m_values.m_alternativeHypothesis",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int32, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int32",
                    "size": 30144,
                    "sample_values": [
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544
                    ]
                  }
                },
                "m_avgAlphaInnovation": {
                  "field_name": "m_avgAlphaInnovation",
                  "field_path": "m_value (second).m_values.m_avgAlphaInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      -0.0019347303314134479,
                      -0.0006980852922424674,
                      -0.002382645383477211,
                      -0.007032947149127722,
                      -0.005665685050189495,
                      -0.0035495886113494635,
                      -0.005357804708182812,
                      -0.0057459985837340355,
                      -0.005908419843763113
                    ]
                  }
                },
                "m_avgDxInnovation": {
                  "field_name": "m_avgDxInnovation",
                  "field_path": "m_value (second).m_values.m_avgDxInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      -0.042484283447265625,
                      0.030687332153320312,
                      -0.00879049301147461,
                      -0.03393089771270752,
                      0.13888326287269592,
                      0.2438671588897705,
                      0.10751336812973022,
                      0.015013650059700012,
                      -0.03513697162270546
                    ]
                  }
                },
                "m_badSensorBasedInnoCount": {
                  "field_name": "m_badSensorBasedInnoCount",
                  "field_path": "m_value (second).m_values.m_badSensorBasedInnoCount",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_changedObjectTypeBasedOnVelocity": {
                  "field_name": "m_changedObjectTypeBasedOnVelocity",
                  "field_path": "m_value (second).m_values.m_changedObjectTypeBasedOnVelocity",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_cornerAngleInnoDebugState": {
                  "field_name": "m_cornerAngleInnoDebugState",
                  "field_path": "m_value (second).m_values.m_cornerAngleInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0
                    ]
                  }
                },
                "m_cornerDrInnoDebugState": {
                  "field_name": "m_cornerDrInnoDebugState",
                  "field_path": "m_value (second).m_values.m_cornerDrInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0
                    ]
                  }
                },
                "m_createdByVideoWithHighVy": {
                  "field_name": "m_createdByVideoWithHighVy",
                  "field_path": "m_value (second).m_values.m_createdByVideoWithHighVy",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_currentOncomingCounterBasedOnLocations": {
                  "field_name": "m_currentOncomingCounterBasedOnLocations",
                  "field_path": "m_value (second).m_values.m_currentOncomingCounterBasedOnLocations",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_dBRcs": {
                  "field_name": "m_dBRcs",
                  "field_path": "m_value (second).m_values.m_dBRcs",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      20.453125,
                      20.46875,
                      18.791118621826172,
                      20.970394134521484,
                      21.607044219970703,
                      18.968467712402344,
                      16.68654441833496,
                      21.348798751831055,
                      24.95136260986328,
                      26.098665237426758
                    ]
                  }
                },
                "m_dimension": {
                  "field_name": "m_dimension",
                  "field_path": "m_value (second).m_values.m_dimension",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_value'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_dimension",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_value"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_value', 'O')]",
                    "field_values": {
                      "m_value": {
                        "field_name": "m_value",
                        "field_path": "m_value (second).m_values.m_dimension.m_value",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(2, 32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            2,
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 60288,
                          "sample_values": [
                            9.90575885772705,
                            11.515942573547363,
                            11.785696983337402,
                            11.752283096313477,
                            11.911845207214355,
                            11.711894989013672,
                            12.433369636535645,
                            11.987720489501953,
                            12.642362594604492,
                            12.149866104125977
                          ]
                        }
                      }
                    }
                  }
                },
                "m_dimensionCovarianceMatrixDiagonal": {
                  "field_name": "m_dimensionCovarianceMatrixDiagonal",
                  "field_path": "m_value (second).m_values.m_dimensionCovarianceMatrixDiagonal",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_value'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_dimensionCovarianceMatrixDiagonal",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_value"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_value', 'O')]",
                    "field_values": {
                      "m_value": {
                        "field_name": "m_value",
                        "field_path": "m_value (second).m_values.m_dimensionCovarianceMatrixDiagonal.m_value",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=float64, shape=(2, 32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            2,
                            32,
                            942
                          ],
                          "dtype": "float64",
                          "size": 60288,
                          "sample_values": [
                            1.0,
                            0.7461724281311035,
                            0.38841044902801514,
                            0.2809573709964752,
                            0.24513399600982666,
                            0.23324796557426453,
                            0.22935649752616882,
                            0.22801098227500916,
                            0.2276366949081421,
                            0.22745272517204285
                          ]
                        }
                      }
                    }
                  }
                },
                "m_dxDistanceWhereObjStopped": {
                  "field_name": "m_dxDistanceWhereObjStopped",
                  "field_path": "m_value (second).m_values.m_dxDistanceWhereObjStopped",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38,
                      3.4028234663852886e+38
                    ]
                  }
                },
                "m_elevation": {
                  "field_name": "m_elevation",
                  "field_path": "m_value (second).m_values.m_elevation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.07859861850738525,
                      0.3721247613430023,
                      0.5187848806381226,
                      0.5742062926292419,
                      0.7198442220687866,
                      0.9085146188735962,
                      1.023313283920288,
                      1.0676262378692627,
                      1.0836786031723022,
                      1.046609878540039
                    ]
                  }
                },
                "m_elevationVCPFusedQM": {
                  "field_name": "m_elevationVCPFusedQM",
                  "field_path": "m_value (second).m_values.m_elevationVCPFusedQM",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_elevationVCPFusedQM",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_covarianceMatrix",
                      "m_muVector"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                    "field_values": {
                      "m_covarianceMatrix": {
                        "field_name": "m_covarianceMatrix",
                        "field_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_covarianceMatrix",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_covarianceMatrix",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_covarianceMatrix.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.12166212499141693,
                                    0.12240377068519592,
                                    0.12065700441598892,
                                    0.11053727567195892,
                                    0.11145932227373123,
                                    0.10398565977811813,
                                    0.10414627939462662,
                                    0.10506242513656616,
                                    0.10740521550178528,
                                    0.11029250174760818
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_muVector": {
                        "field_name": "m_muVector",
                        "field_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_muVector",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_muVector",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_elevationVCPFusedQM.m_muVector.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    -0.3459428548812866,
                                    -0.35945776104927063,
                                    -0.3167966604232788,
                                    -0.267256498336792,
                                    -0.28871822357177734,
                                    -0.31175294518470764,
                                    -0.3141113519668579,
                                    -0.33695560693740845,
                                    -0.3941979706287384,
                                    -0.4594446122646332
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_expectedVrHighEnoughForMuDopplerCounter": {
                  "field_name": "m_expectedVrHighEnoughForMuDopplerCounter",
                  "field_path": "m_value (second).m_values.m_expectedVrHighEnoughForMuDopplerCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_filterType": {
                  "field_name": "m_filterType",
                  "field_path": "m_value (second).m_values.m_filterType",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1
                    ]
                  }
                },
                "m_functionRelevanceBitField": {
                  "field_name": "m_functionRelevanceBitField",
                  "field_path": "m_value (second).m_values.m_functionRelevanceBitField",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 30144,
                    "sample_values": [
                      65535,
                      65535,
                      65535,
                      65535,
                      65535,
                      65535,
                      65535,
                      65535,
                      65535,
                      65535
                    ]
                  }
                },
                "m_heightVCPFusedQM": {
                  "field_name": "m_heightVCPFusedQM",
                  "field_path": "m_value (second).m_values.m_heightVCPFusedQM",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_heightVCPFusedQM",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_covarianceMatrix",
                      "m_muVector"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                    "field_values": {
                      "m_covarianceMatrix": {
                        "field_name": "m_covarianceMatrix",
                        "field_path": "m_value (second).m_values.m_heightVCPFusedQM.m_covarianceMatrix",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_heightVCPFusedQM.m_covarianceMatrix",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_heightVCPFusedQM.m_covarianceMatrix.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.1811705231666565,
                                    0.11896289885044098,
                                    0.10590788722038269,
                                    0.09944309294223785,
                                    0.09893441945314407,
                                    0.09899625927209854,
                                    0.09813425689935684,
                                    0.09896426647901535,
                                    0.09915090352296829,
                                    0.09818144142627716
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_muVector": {
                        "field_name": "m_muVector",
                        "field_path": "m_value (second).m_values.m_heightVCPFusedQM.m_muVector",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_heightVCPFusedQM.m_muVector",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_heightVCPFusedQM.m_muVector.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    3.079423427581787,
                                    3.207869529724121,
                                    3.2648937702178955,
                                    3.287994146347046,
                                    3.295999050140381,
                                    3.303968906402588,
                                    3.311444044113159,
                                    3.311429500579834,
                                    3.311661958694458,
                                    3.312424659729004
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_id": {
                  "field_name": "m_id",
                  "field_path": "m_value (second).m_values.m_id",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int32, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int32",
                    "size": 30144,
                    "sample_values": [
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544,
                      118380544
                    ]
                  }
                },
                "m_idOfReplacedObject": {
                  "field_name": "m_idOfReplacedObject",
                  "field_path": "m_value (second).m_values.m_idOfReplacedObject",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int32, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int32",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_implausibleDepCounter": {
                  "field_name": "m_implausibleDepCounter",
                  "field_path": "m_value (second).m_values.m_implausibleDepCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_initialPos": {
                  "field_name": "m_initialPos",
                  "field_path": "m_value (second).m_values.m_initialPos",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_data'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_initialPos",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_data"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_data', 'O')]",
                    "field_values": {
                      "m_data": {
                        "field_name": "m_data",
                        "field_path": "m_value (second).m_values.m_initialPos.m_data",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_initialPos.m_data",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.m_initialPos.m_data.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  52.683223724365234,
                                  53.51673126220703,
                                  53.844329833984375,
                                  53.856380462646484,
                                  53.97092056274414,
                                  53.977901458740234,
                                  54.4311408996582,
                                  54.228126525878906,
                                  54.55750274658203,
                                  54.32664489746094
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_isCTModelUsedForPrediction": {
                  "field_name": "m_isCTModelUsedForPrediction",
                  "field_path": "m_value (second).m_values.m_isCTModelUsedForPrediction",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isMeasurable": {
                  "field_name": "m_isMeasurable",
                  "field_path": "m_value (second).m_values.m_isMeasurable",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      2,
                      19,
                      19,
                      19,
                      19,
                      3,
                      19,
                      19,
                      19,
                      19
                    ]
                  }
                },
                "m_isMeasured": {
                  "field_name": "m_isMeasured",
                  "field_path": "m_value (second).m_values.m_isMeasured",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3,
                      3
                    ]
                  }
                },
                "m_isOrientationImplausibleCompared2Vid": {
                  "field_name": "m_isOrientationImplausibleCompared2Vid",
                  "field_path": "m_value (second).m_values.m_isOrientationImplausibleCompared2Vid",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isPossibleRadarCrossPathGhost": {
                  "field_name": "m_isPossibleRadarCrossPathGhost",
                  "field_path": "m_value (second).m_values.m_isPossibleRadarCrossPathGhost",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isSuppressedDueToVideoOtcPostProcessing": {
                  "field_name": "m_isSuppressedDueToVideoOtcPostProcessing",
                  "field_path": "m_value (second).m_values.m_isSuppressedDueToVideoOtcPostProcessing",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isSuppressedUntilNextVideoUpdate": {
                  "field_name": "m_isSuppressedUntilNextVideoUpdate",
                  "field_path": "m_value (second).m_values.m_isSuppressedUntilNextVideoUpdate",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr": {
                  "field_name": "m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                  "field_path": "m_value (second).m_values.m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_isValid": {
                  "field_name": "m_isValid",
                  "field_path": "m_value (second).m_values.m_isValid",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1
                    ]
                  }
                },
                "m_longitudinalSimilarObjectCycleCnt": {
                  "field_name": "m_longitudinalSimilarObjectCycleCnt",
                  "field_path": "m_value (second).m_values.m_longitudinalSimilarObjectCycleCnt",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_microDopplerFilterState": {
                  "field_name": "m_microDopplerFilterState",
                  "field_path": "m_value (second).m_values.m_microDopplerFilterState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_tap0', 'm_tap1'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_microDopplerFilterState",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_tap0",
                      "m_tap1"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_tap0', 'O'), ('m_tap1', 'O')]",
                    "field_values": {
                      "m_tap0": {
                        "field_name": "m_tap0",
                        "field_path": "m_value (second).m_values.m_microDopplerFilterState.m_tap0",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            993968608,
                            1016288258,
                            1015597691,
                            1013708735,
                            1012374266,
                            1012454646,
                            1013388543,
                            1013482296,
                            1012872971,
                            1012343456
                          ]
                        }
                      },
                      "m_tap1": {
                        "field_name": "m_tap1",
                        "field_path": "m_value (second).m_values.m_microDopplerFilterState.m_tap1",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=int32, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "int32",
                          "size": 30144,
                          "sample_values": [
                            2143289344,
                            1016301373,
                            1016288258,
                            1015597691,
                            1013708735,
                            1012374266,
                            1012454646,
                            1013388543,
                            1013482296,
                            1012872971
                          ]
                        }
                      }
                    }
                  }
                },
                "m_microDopplerFiltered": {
                  "field_name": "m_microDopplerFiltered",
                  "field_path": "m_value (second).m_values.m_microDopplerFiltered",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.002910725772380829,
                      0.0028794570825994015,
                      0.0028270285110920668,
                      0.0026313173584640026,
                      0.002346490742638707,
                      0.0021582283079624176,
                      0.0021492945961654186,
                      0.0022253619972616434,
                      0.002244438510388136,
                      0.0021828068420290947
                    ]
                  }
                },
                "m_modulationHistory": {
                  "field_name": "m_modulationHistory",
                  "field_path": "m_value (second).m_values.m_modulationHistory",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 30144,
                    "sample_values": [
                      512,
                      2560,
                      10752,
                      43520,
                      43522,
                      43526,
                      43542,
                      43606,
                      43862,
                      43862
                    ]
                  }
                },
                "m_movementHistoryCounter": {
                  "field_name": "m_movementHistoryCounter",
                  "field_path": "m_value (second).m_values.m_movementHistoryCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      8,
                      8
                    ]
                  }
                },
                "m_movingLocationCounter": {
                  "field_name": "m_movingLocationCounter",
                  "field_path": "m_value (second).m_values.m_movingLocationCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10
                    ]
                  }
                },
                "m_nonPlausibleLocationCnt": {
                  "field_name": "m_nonPlausibleLocationCnt",
                  "field_path": "m_value (second).m_values.m_nonPlausibleLocationCnt",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numConsecutiveCyclesWithoutOncomingLocations": {
                  "field_name": "m_numConsecutiveCyclesWithoutOncomingLocations",
                  "field_path": "m_value (second).m_values.m_numConsecutiveCyclesWithoutOncomingLocations",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numCyclesExisting": {
                  "field_name": "m_numCyclesExisting",
                  "field_path": "m_value (second).m_values.m_numCyclesExisting",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 30144,
                    "sample_values": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ]
                  }
                },
                "m_numCyclesNoModelBasedOrientationEstimationPossible": {
                  "field_name": "m_numCyclesNoModelBasedOrientationEstimationPossible",
                  "field_path": "m_value (second).m_values.m_numCyclesNoModelBasedOrientationEstimationPossible",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numCyclesNoOrientationUpdate": {
                  "field_name": "m_numCyclesNoOrientationUpdate",
                  "field_path": "m_value (second).m_values.m_numCyclesNoOrientationUpdate",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      1,
                      2,
                      3,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numCyclesSinceLastVideoUpdateWithAngularVelocity": {
                  "field_name": "m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                  "field_path": "m_value (second).m_values.m_numCyclesSinceLastVideoUpdateWithAngularVelocity",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numCyclesSinceMotionModelChange": {
                  "field_name": "m_numCyclesSinceMotionModelChange",
                  "field_path": "m_value (second).m_values.m_numCyclesSinceMotionModelChange",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      255,
                      255,
                      255,
                      255,
                      255,
                      255,
                      255,
                      255,
                      255,
                      255
                    ]
                  }
                },
                "m_numCyclesTwoWheelerRefPtUsedForUpdate": {
                  "field_name": "m_numCyclesTwoWheelerRefPtUsedForUpdate",
                  "field_path": "m_value (second).m_values.m_numCyclesTwoWheelerRefPtUsedForUpdate",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_numMicroDopplerCycles": {
                  "field_name": "m_numMicroDopplerCycles",
                  "field_path": "m_value (second).m_values.m_numMicroDopplerCycles",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_objectCorridorRelation": {
                  "field_name": "m_objectCorridorRelation",
                  "field_path": "m_value (second).m_values.m_objectCorridorRelation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_objectBorderCrossingTimes', 'm_objectCorridorFractionalOverlap'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_objectCorridorRelation",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_objectBorderCrossingTimes",
                      "m_objectCorridorFractionalOverlap"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_objectBorderCrossingTimes', 'O'), ('m_objectCorridorFractionalOverlap', 'O')]",
                    "field_values": {
                      "m_objectBorderCrossingTimes": {
                        "field_name": "m_objectBorderCrossingTimes",
                        "field_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectBorderCrossingTimes",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_hasValue', 'm_storage'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectBorderCrossingTimes",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_hasValue",
                            "m_storage"
                          ],
                          "field_count": 2,
                          "total_size": 1,
                          "dtype": "[('m_hasValue', 'O'), ('m_storage', 'O')]",
                          "field_values": {
                            "m_hasValue": {
                              "field_name": "m_hasValue",
                              "field_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectBorderCrossingTimes.m_hasValue",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_storage": {
                              "field_name": "m_storage",
                              "field_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectBorderCrossingTimes.m_storage",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_values'], shape: (1, 1)",
                              "converted_value": {
                                "m_values": {
                                  "m_value": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        4,
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 120576,
                                      "sample_values": [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_objectCorridorFractionalOverlap": {
                        "field_name": "m_objectCorridorFractionalOverlap",
                        "field_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectCorridorFractionalOverlap",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectCorridorFractionalOverlap",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.m_objectCorridorRelation.m_objectCorridorFractionalOverlap.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    3,
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 90432,
                                  "sample_values": [
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_objectOrientationUnreliableCount": {
                  "field_name": "m_objectOrientationUnreliableCount",
                  "field_path": "m_value (second).m_values.m_objectOrientationUnreliableCount",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_objectTypeTree": {
                  "field_name": "m_objectTypeTree",
                  "field_path": "m_value (second).m_values.m_objectTypeTree",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_objectTypes'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_objectTypeTree",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_objectTypes"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_objectTypes', 'O')]",
                    "field_values": {
                      "m_objectTypes": {
                        "field_name": "m_objectTypes",
                        "field_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_nonObstacle', 'm_obstacle', 'm_obstacleTypes', 'm_unknown'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_nonObstacle",
                            "m_obstacle",
                            "m_obstacleTypes",
                            "m_unknown"
                          ],
                          "field_count": 4,
                          "total_size": 1,
                          "dtype": "[('m_nonObstacle', 'O'), ('m_obstacle', 'O'), ('m_obstacleTypes', 'O'), ('m_unknown', 'O')]",
                          "field_values": {
                            "m_nonObstacle": {
                              "field_name": "m_nonObstacle",
                              "field_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes.m_nonObstacle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  24,
                                  24,
                                  24,
                                  24,
                                  24,
                                  1,
                                  1,
                                  1,
                                  1,
                                  1
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_obstacle": {
                              "field_name": "m_obstacle",
                              "field_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes.m_obstacle",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  101,
                                  101,
                                  101,
                                  101,
                                  101,
                                  125,
                                  125,
                                  125,
                                  125,
                                  125
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_obstacleTypes": {
                              "field_name": "m_obstacleTypes",
                              "field_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes.m_obstacleTypes",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_mobile', 'm_mobileTypes', 'm_stationary', 'm_stationaryTypes', 'm_unknown'], shape: (1, 1)",
                              "converted_value": {
                                "m_mobile": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    123,
                                    123,
                                    123,
                                    123,
                                    123,
                                    127,
                                    127,
                                    127,
                                    127,
                                    127
                                  ]
                                },
                                "m_mobileTypes": {
                                  "m_fourPlusWheeler": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      116,
                                      116,
                                      116,
                                      116,
                                      116,
                                      116,
                                      116,
                                      116,
                                      116,
                                      116
                                    ]
                                  },
                                  "m_fourPlusWheelerTypes": {
                                    "m_passengerCar": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        23,
                                        23,
                                        23,
                                        23,
                                        23,
                                        23,
                                        23,
                                        23,
                                        23,
                                        23
                                      ]
                                    },
                                    "m_truck": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        101,
                                        101,
                                        101,
                                        101,
                                        101,
                                        101,
                                        101,
                                        101,
                                        101,
                                        101
                                      ]
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4,
                                        4
                                      ]
                                    }
                                  },
                                  "m_pedestrian": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4
                                    ]
                                  },
                                  "m_twoWheeler": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4
                                    ]
                                  },
                                  "m_twoWheelerTypes": {
                                    "m_bicycle": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        43,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42
                                      ]
                                    },
                                    "m_ptw": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        43,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42,
                                        42
                                      ]
                                    },
                                    "m_unknown": {
                                      "type": "large_array",
                                      "shape": [
                                        32,
                                        942
                                      ],
                                      "dtype": "uint8",
                                      "size": 30144,
                                      "sample_values": [
                                        42,
                                        44,
                                        44,
                                        44,
                                        44,
                                        44,
                                        44,
                                        44,
                                        44,
                                        44
                                      ]
                                    }
                                  },
                                  "m_unknown": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4,
                                      4
                                    ]
                                  }
                                },
                                "m_stationary": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    3,
                                    3,
                                    3,
                                    3,
                                    3,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                "m_stationaryTypes": {
                                  "m_roadsideBarrier": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64
                                    ]
                                  },
                                  "m_unknown": {
                                    "type": "large_array",
                                    "shape": [
                                      32,
                                      942
                                    ],
                                    "dtype": "uint8",
                                    "size": 30144,
                                    "sample_values": [
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64,
                                      64
                                    ]
                                  }
                                },
                                "m_unknown": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 30144,
                                  "sample_values": [
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            },
                            "m_unknown": {
                              "field_name": "m_unknown",
                              "field_path": "m_value (second).m_values.m_objectTypeTree.m_objectTypes.m_unknown",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 30144,
                                "sample_values": [
                                  3,
                                  3,
                                  3,
                                  3,
                                  3,
                                  2,
                                  2,
                                  2,
                                  2,
                                  2
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_orientationEstimate": {
                  "field_name": "m_orientationEstimate",
                  "field_path": "m_value (second).m_values.m_orientationEstimate",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      -0.027612125501036644,
                      -0.04122607409954071,
                      -0.03458928316831589,
                      -0.027987228706479073,
                      -0.03491974622011185,
                      -0.039077553898096085,
                      -0.033640116453170776,
                      -0.031451329588890076,
                      -0.033946309238672256,
                      -0.03382166475057602
                    ]
                  }
                },
                "m_orientationUpdateStatus": {
                  "field_name": "m_orientationUpdateStatus",
                  "field_path": "m_value (second).m_values.m_orientationUpdateStatus",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      4,
                      76,
                      204,
                      204,
                      204,
                      204,
                      204,
                      204,
                      204,
                      204
                    ]
                  }
                },
                "m_pNonObstacleRCSOnlyClassifier": {
                  "field_name": "m_pNonObstacleRCSOnlyClassifier",
                  "field_path": "m_value (second).m_values.m_pNonObstacleRCSOnlyClassifier",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint16, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint16",
                    "size": 30144,
                    "sample_values": [
                      17,
                      18,
                      36,
                      19,
                      13,
                      29,
                      72,
                      36,
                      17,
                      9
                    ]
                  }
                },
                "m_perType": {
                  "field_name": "m_perType",
                  "field_path": "m_value (second).m_values.m_perType",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1
                    ]
                  }
                },
                "m_postProcessBitField": {
                  "field_name": "m_postProcessBitField",
                  "field_path": "m_value (second).m_values.m_postProcessBitField",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=int32, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "int32",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_probHasBeenObservedExisting": {
                  "field_name": "m_probHasBeenObservedExisting",
                  "field_path": "m_value (second).m_values.m_probHasBeenObservedExisting",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.9882439970970154,
                      0.9919129014015198,
                      0.9950000047683716,
                      0.9950000047683716,
                      0.9919161200523376,
                      0.9950000047683716,
                      0.9950000047683716,
                      0.9919190406799316,
                      0.9919191598892212,
                      0.9950000047683716
                    ]
                  }
                },
                "m_probHasBeenObservedMoving": {
                  "field_name": "m_probHasBeenObservedMoving",
                  "field_path": "m_value (second).m_values.m_probHasBeenObservedMoving",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.5,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0
                    ]
                  }
                },
                "m_probIsCurrentlyExisting": {
                  "field_name": "m_probIsCurrentlyExisting",
                  "field_path": "m_value (second).m_values.m_probIsCurrentlyExisting",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0
                    ]
                  }
                },
                "m_probIsCurrentlyMoving": {
                  "field_name": "m_probIsCurrentlyMoving",
                  "field_path": "m_value (second).m_values.m_probIsCurrentlyMoving",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0,
                      1.0
                    ]
                  }
                },
                "m_radarAngleInnoDebugState": {
                  "field_name": "m_radarAngleInnoDebugState",
                  "field_path": "m_value (second).m_values.m_radarAngleInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.07154031097888947,
                      0.008150208741426468,
                      0.07581863552331924,
                      0.25352874398231506,
                      0.1331334114074707,
                      0.04033457115292549,
                      0.12786179780960083,
                      0.12835125625133514,
                      0.1298404186964035
                    ]
                  }
                },
                "m_radarBasedInnovation": {
                  "field_name": "m_radarBasedInnovation",
                  "field_path": "m_value (second).m_values.m_radarBasedInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_data'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_radarBasedInnovation",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_data"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_data', 'O')]",
                    "field_values": {
                      "m_data": {
                        "field_name": "m_data",
                        "field_path": "m_value (second).m_values.m_radarBasedInnovation.m_data",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_radarBasedInnovation.m_data",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.m_radarBasedInnovation.m_data.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  0.0,
                                  -0.08496856689453125,
                                  0.08261680603027344,
                                  -0.02230358123779297,
                                  -0.06582784652709961,
                                  0.2957489490509033,
                                  0.4272838830947876,
                                  0.06286793947219849,
                                  -0.09980878233909607,
                                  -0.14269880950450897
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_radarDrInnoDebugState": {
                  "field_name": "m_radarDrInnoDebugState",
                  "field_path": "m_value (second).m_values.m_radarDrInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.0283228550106287,
                      0.027538934722542763,
                      0.007434526924043894,
                      0.021942615509033203,
                      0.09858298301696777,
                      0.1424279659986496,
                      0.020955979824066162,
                      0.033269595354795456,
                      0.04756626859307289
                    ]
                  }
                },
                "m_radarRawAlphaInnovation": {
                  "field_name": "m_radarRawAlphaInnovation",
                  "field_path": "m_value (second).m_values.m_radarRawAlphaInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.0,
                      0.003011849941685796,
                      -0.007436325773596764,
                      -0.020983852446079254,
                      -0.0015638975892215967,
                      0.0027987007051706314,
                      -0.010782452300190926,
                      -0.006910580676048994,
                      -0.006395683158189058
                    ]
                  }
                },
                "m_recentlyUsedFrontCornerMeasurementHandle": {
                  "field_name": "m_recentlyUsedFrontCornerMeasurementHandle",
                  "field_path": "m_value (second).m_values.m_recentlyUsedFrontCornerMeasurementHandle",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_recentlyUsedVideoMeasurementHandle": {
                  "field_name": "m_recentlyUsedVideoMeasurementHandle",
                  "field_path": "m_value (second).m_values.m_recentlyUsedVideoMeasurementHandle",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      127,
                      127,
                      127,
                      127,
                      127,
                      127,
                      127,
                      127,
                      127,
                      127
                    ]
                  }
                },
                "m_referencePointIdx": {
                  "field_name": "m_referencePointIdx",
                  "field_path": "m_value (second).m_values.m_referencePointIdx",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      10,
                      10,
                      10,
                      10,
                      10,
                      10,
                      10,
                      10,
                      10,
                      10
                    ]
                  }
                },
                "m_relevantRadialInnovationInCm": {
                  "field_name": "m_relevantRadialInnovationInCm",
                  "field_path": "m_value (second).m_values.m_relevantRadialInnovationInCm",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      25,
                      25,
                      25,
                      66,
                      66,
                      66,
                      66,
                      66
                    ]
                  }
                },
                "m_sensorMeasuredHistory": {
                  "field_name": "m_sensorMeasuredHistory",
                  "field_path": "m_value (second).m_values.m_sensorMeasuredHistory",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_isMeasuredHistory'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_sensorMeasuredHistory",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_isMeasuredHistory"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_isMeasuredHistory', 'O')]",
                    "field_values": {
                      "m_isMeasuredHistory": {
                        "field_name": "m_isMeasuredHistory",
                        "field_path": "m_value (second).m_values.m_sensorMeasuredHistory.m_isMeasuredHistory",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_sensorMeasuredHistory.m_isMeasuredHistory",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.m_sensorMeasuredHistory.m_isMeasuredHistory.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 60288,
                                "sample_values": [
                                  1,
                                  3,
                                  7,
                                  15,
                                  31,
                                  63,
                                  127,
                                  255,
                                  255,
                                  255
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_splitCounter": {
                  "field_name": "m_splitCounter",
                  "field_path": "m_value (second).m_values.m_splitCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_state": {
                  "field_name": "m_state",
                  "field_path": "m_value (second).m_values.m_state",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_data'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_state",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_data"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_data', 'O')]",
                    "field_values": {
                      "m_data": {
                        "field_name": "m_data",
                        "field_path": "m_value (second).m_values.m_state.m_data",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_vectorCovariancePair'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_state.m_data",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_vectorCovariancePair"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_vectorCovariancePair', 'O')]",
                          "field_values": {
                            "m_vectorCovariancePair": {
                              "field_name": "m_vectorCovariancePair",
                              "field_path": "m_value (second).m_values.m_state.m_data.m_vectorCovariancePair",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                              "converted_value": {
                                "m_covarianceMatrix": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        21,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 633024,
                                      "sample_values": [
                                        2.0927135944366455,
                                        0.9189332723617554,
                                        0.410939484834671,
                                        0.2529315948486328,
                                        0.188634991645813,
                                        0.15537485480308533,
                                        0.1285981684923172,
                                        0.10877839475870132,
                                        0.0905444473028183,
                                        0.09110672026872635
                                      ]
                                    }
                                  }
                                },
                                "m_muVector": {
                                  "m_data": {
                                    "m_value": {
                                      "type": "large_array",
                                      "shape": [
                                        6,
                                        32,
                                        942
                                      ],
                                      "dtype": "float64",
                                      "size": 180864,
                                      "sample_values": [
                                        47.730342864990234,
                                        47.75876998901367,
                                        47.95158004760742,
                                        47.98033905029297,
                                        48.0152587890625,
                                        48.12379455566406,
                                        48.218017578125,
                                        48.23808670043945,
                                        48.24025344848633,
                                        48.25518035888672
                                      ]
                                    }
                                  }
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_stationaryLocationsOnlyCounter": {
                  "field_name": "m_stationaryLocationsOnlyCounter",
                  "field_path": "m_value (second).m_values.m_stationaryLocationsOnlyCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_stoppingSplitCounter": {
                  "field_name": "m_stoppingSplitCounter",
                  "field_path": "m_value (second).m_values.m_stoppingSplitCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_suspiciousRefPointCounter": {
                  "field_name": "m_suspiciousRefPointCounter",
                  "field_path": "m_value (second).m_values.m_suspiciousRefPointCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_totalNumCyclesWithOncomingLocations": {
                  "field_name": "m_totalNumCyclesWithOncomingLocations",
                  "field_path": "m_value (second).m_values.m_totalNumCyclesWithOncomingLocations",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_transferredFromSepCycle": {
                  "field_name": "m_transferredFromSepCycle",
                  "field_path": "m_value (second).m_values.m_transferredFromSepCycle",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_turnRateForCT": {
                  "field_name": "m_turnRateForCT",
                  "field_path": "m_value (second).m_values.m_turnRateForCT",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_updateDetails": {
                  "field_name": "m_updateDetails",
                  "field_path": "m_value (second).m_values.m_updateDetails",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_memory', 'm_usedElements'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_updateDetails",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_memory",
                      "m_usedElements"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_memory', 'O'), ('m_usedElements', 'O')]",
                    "field_values": {
                      "m_memory": {
                        "field_name": "m_memory",
                        "field_path": "m_value (second).m_values.m_updateDetails.m_memory",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_values'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_updateDetails.m_memory",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_values"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_values', 'O')]",
                          "field_values": {
                            "m_values": {
                              "field_name": "m_values",
                              "field_path": "m_value (second).m_values.m_updateDetails.m_memory.m_values",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_measuredState', 'm_predictedState', 'm_refPoint', 'm_responsible', 'm_stateToUpdate', 'm_type', 'm_updatedState', 'm_used'], shape: (1, 1)",
                              "converted_value": {
                                "m_measuredState": {
                                  "m_vectorCovariancePair": {
                                    "m_covarianceMatrix": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            10,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 5425920,
                                          "sample_values": [
                                            0.0,
                                            2.1378731727600098,
                                            0.9287123084068298,
                                            0.8940731883049011,
                                            1.198197364807129,
                                            1.7869110107421875,
                                            1.5785870552062988,
                                            1.5709190368652344,
                                            0.8850052952766418,
                                            0.9029588103294373
                                          ]
                                        }
                                      }
                                    },
                                    "m_muVector": {
                                      "m_data": {
                                        "m_value": {
                                          "type": "large_array",
                                          "shape": [
                                            4,
                                            18,
                                            32,
                                            942
                                          ],
                                          "dtype": "float64",
                                          "size": 2170368,
                                          "sample_values": [
                                            0.0,
                                            43.75524139404297,
                                            44.194786071777344,
                                            44.014347076416016,
                                            44.0501594543457,
                                            44.82819366455078,
                                            44.84610366821289,
                                            44.08784866333008,
                                            44.14451217651367,
                                            44.2125129699707
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "m_predictedState": {
                                  "m_data": {
                                    "m_rotInfo": {
                                      "m_cosAngle": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 542592,
                                            "sample_values": [
                                              1.0,
                                              1.0,
                                              0.9999915957450867,
                                              0.9999876022338867,
                                              0.9999890327453613,
                                              0.99969482421875,
                                              0.999439537525177,
                                              0.9994308948516846,
                                              0.9994500279426575,
                                              0.9994055032730103
                                            ]
                                          }
                                        }
                                      },
                                      "m_sinAngle": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 542592,
                                            "sample_values": [
                                              0.0,
                                              9.5367431640625e-06,
                                              -0.004080283921211958,
                                              -0.004967192187905312,
                                              -0.004666311666369438,
                                              -0.024700036272406578,
                                              -0.0334739126265049,
                                              -0.03373149782419205,
                                              -0.033159852027893066,
                                              -0.034474216401576996
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "m_vectorCovariancePair": {
                                      "m_covarianceMatrix": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              28,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 15192576,
                                            "sample_values": [
                                              0.0,
                                              2.094299077987671,
                                              0.9231420159339905,
                                              0.41476359963417053,
                                              0.25665122270584106,
                                              0.1893172711133957,
                                              0.15800701081752777,
                                              0.13214747607707977,
                                              0.11226329207420349,
                                              0.09155388176441193
                                            ]
                                          }
                                        }
                                      },
                                      "m_muVector": {
                                        "m_data": {
                                          "m_value": {
                                            "type": "large_array",
                                            "shape": [
                                              7,
                                              18,
                                              32,
                                              942
                                            ],
                                            "dtype": "float64",
                                            "size": 3798144,
                                            "sample_values": [
                                              0.0,
                                              47.78388977050781,
                                              47.802860260009766,
                                              47.999778747558594,
                                              48.01734924316406,
                                              48.0271110534668,
                                              48.14316940307617,
                                              48.24488067626953,
                                              48.26198196411133,
                                              48.25261688232422
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "m_refPoint": {
                                  "type": "large_array",
                                  "shape": [
                                    18,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 542592,
                                  "sample_values": [
                                    10,
                                    10,
                                    15,
                                    15,
                                    15,
                                    15,
                                    15,
                                    15,
                                    15,
                                    15
                                  ]
                                },
                                "m_responsible": {
                                  "type": "large_array",
                                  "shape": [
                                    18,
                                    32,
                                    942
                                  ],
                                  "dtype": "int32",
                                  "size": 542592,
                                  "sample_values": [
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10
                                  ]
                                },
                                "m_stateToUpdate": {
                                  "m_covarianceMatrix": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          21,
                                          18,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 11394432,
                                        "sample_values": [
                                          0.0,
                                          2.0939643383026123,
                                          0.9230040311813354,
                                          0.41470709443092346,
                                          0.25661900639533997,
                                          0.18928663432598114,
                                          0.157979816198349,
                                          0.13212651014328003,
                                          0.11225050687789917,
                                          0.09153851866722107
                                        ]
                                      }
                                    }
                                  },
                                  "m_muVector": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          6,
                                          18,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 3255552,
                                        "sample_values": [
                                          0.0,
                                          43.91292953491211,
                                          43.931968688964844,
                                          44.128883361816406,
                                          44.14637756347656,
                                          44.1555290222168,
                                          44.270851135253906,
                                          44.37248611450195,
                                          44.389591217041016,
                                          44.38005447387695
                                        ]
                                      }
                                    }
                                  }
                                },
                                "m_type": {
                                  "type": "large_array",
                                  "shape": [
                                    18,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 542592,
                                  "sample_values": [
                                    70,
                                    26,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10,
                                    10
                                  ]
                                },
                                "m_updatedState": {
                                  "m_covarianceMatrix": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          21,
                                          18,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 11394432,
                                        "sample_values": [
                                          0.0,
                                          1.057685136795044,
                                          0.4616886079311371,
                                          0.2819005846977234,
                                          0.2094842940568924,
                                          0.17075717449188232,
                                          0.14154723286628723,
                                          0.1195850819349289,
                                          0.10000961273908615,
                                          0.10001303255558014
                                        ]
                                      }
                                    }
                                  },
                                  "m_muVector": {
                                    "m_data": {
                                      "m_value": {
                                        "type": "large_array",
                                        "shape": [
                                          6,
                                          18,
                                          32,
                                          942
                                        ],
                                        "dtype": "float64",
                                        "size": 3255552,
                                        "sample_values": [
                                          0.0,
                                          47.701446533203125,
                                          47.92726135253906,
                                          47.957313537597656,
                                          47.995689392089844,
                                          48.09083557128906,
                                          48.193660736083984,
                                          48.21814727783203,
                                          48.23189163208008,
                                          48.2362060546875
                                        ]
                                      }
                                    }
                                  }
                                },
                                "m_used": {
                                  "type": "large_array",
                                  "shape": [
                                    18,
                                    32,
                                    942
                                  ],
                                  "dtype": "uint8",
                                  "size": 542592,
                                  "sample_values": [
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_usedElements": {
                        "field_name": "m_usedElements",
                        "field_path": "m_value (second).m_values.m_updateDetails.m_usedElements",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2,
                            2
                          ]
                        }
                      }
                    }
                  }
                },
                "m_validModulations": {
                  "field_name": "m_validModulations",
                  "field_path": "m_value (second).m_values.m_validModulations",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      1,
                      2,
                      2,
                      2,
                      2,
                      3,
                      4,
                      4,
                      4,
                      4
                    ]
                  }
                },
                "m_varianceOfTurnRateAfterPredictionWithCT": {
                  "field_name": "m_varianceOfTurnRateAfterPredictionWithCT",
                  "field_path": "m_value (second).m_values.m_varianceOfTurnRateAfterPredictionWithCT",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_varianceTangentialAcc": {
                  "field_name": "m_varianceTangentialAcc",
                  "field_path": "m_value (second).m_values.m_varianceTangentialAcc",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_videoAngleInnoDebugState": {
                  "field_name": "m_videoAngleInnoDebugState",
                  "field_path": "m_value (second).m_values.m_videoAngleInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.061249855905771255,
                      0.04328545928001404,
                      0.026451347395777702,
                      0.0385286808013916,
                      0.041868142783641815,
                      0.02828996069729328,
                      0.020753171294927597,
                      0.02788494899868965,
                      0.027796609327197075,
                      0.023989690467715263
                    ]
                  }
                },
                "m_videoBasedInnovation": {
                  "field_name": "m_videoBasedInnovation",
                  "field_path": "m_value (second).m_values.m_videoBasedInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_data'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_videoBasedInnovation",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_data"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_data', 'O')]",
                    "field_values": {
                      "m_data": {
                        "field_name": "m_data",
                        "field_path": "m_value (second).m_values.m_videoBasedInnovation.m_data",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_videoBasedInnovation.m_data",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.m_videoBasedInnovation.m_data.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=float64, shape=(2, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  2,
                                  32,
                                  942
                                ],
                                "dtype": "float64",
                                "size": 60288,
                                "sample_values": [
                                  0.6032695770263672,
                                  0.8645524978637695,
                                  0.8786702156066895,
                                  0.8955309391021729,
                                  0.9126378297805786,
                                  0.8658152222633362,
                                  0.8221592903137207,
                                  0.7923262119293213,
                                  0.7744818925857544,
                                  0.7806335091590881
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "m_videoDrInnoDebugState": {
                  "field_name": "m_videoDrInnoDebugState",
                  "field_path": "m_value (second).m_values.m_videoDrInnoDebugState",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      1.2649826203414705e-05,
                      1.7816908439272083e-05,
                      1.7986216334975325e-05,
                      1.8326689314562827e-05,
                      1.8632450519362465e-05,
                      1.767344838299323e-05,
                      1.662776412558742e-05,
                      1.609013088454958e-05,
                      1.562313445901964e-05,
                      1.5820956832612865e-05
                    ]
                  }
                },
                "m_videoInputWithOncomingVrCounter": {
                  "field_name": "m_videoInputWithOncomingVrCounter",
                  "field_path": "m_value (second).m_values.m_videoInputWithOncomingVrCounter",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_videoInvTtc": {
                  "field_name": "m_videoInvTtc",
                  "field_path": "m_value (second).m_values.m_videoInvTtc",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      -0.0009765625,
                      0.0,
                      0.0,
                      0.0,
                      0.0009765625,
                      0.0009765625,
                      0.001953125,
                      0.001953125,
                      0.001953125,
                      0.001953125
                    ]
                  }
                },
                "m_videoLaneAssociation": {
                  "field_name": "m_videoLaneAssociation",
                  "field_path": "m_value (second).m_values.m_videoLaneAssociation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      2,
                      2,
                      2,
                      2,
                      2,
                      2,
                      2,
                      2,
                      2,
                      2
                    ]
                  }
                },
                "m_videoRawAlphaInnovation": {
                  "field_name": "m_videoRawAlphaInnovation",
                  "field_path": "m_value (second).m_values.m_videoRawAlphaInnovation",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.002311463700607419,
                      0.0004497080226428807,
                      0.0001717614068184048,
                      0.0009318150696344674,
                      0.0008288651588372886,
                      0.00027010278427042067,
                      0.00023574801161885262,
                      0.0006414514500647783,
                      0.0004995903000235558,
                      0.0003704477858263999
                    ]
                  }
                },
                "m_videoVr": {
                  "field_name": "m_videoVr",
                  "field_path": "m_value (second).m_values.m_videoVr",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.05089074745774269,
                      0.005320691037923098,
                      0.0017847266281023622,
                      -0.0,
                      -0.04202116280794144,
                      -0.03994278609752655,
                      -0.08787082135677338,
                      -0.08777899295091629,
                      -0.08993256837129593,
                      -0.08773421496152878
                    ]
                  }
                },
                "m_videoVy": {
                  "field_name": "m_videoVy",
                  "field_path": "m_value (second).m_values.m_videoVy",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      -0.2813972532749176,
                      -0.28090161085128784,
                      -0.09170953929424286,
                      0.0,
                      -0.18864822387695312,
                      -0.2805553674697876,
                      -0.18782085180282593,
                      -0.1877799928188324,
                      -0.08995674550533295,
                      -0.18790820240974426
                    ]
                  }
                },
                "m_visualSignals": {
                  "field_name": "m_visualSignals",
                  "field_path": "m_value (second).m_values.m_visualSignals",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_visualSignalStatus'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_visualSignals",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_visualSignalStatus"
                    ],
                    "field_count": 1,
                    "total_size": 1,
                    "dtype": "[('m_visualSignalStatus', 'O')]",
                    "field_values": {
                      "m_visualSignalStatus": {
                        "field_name": "m_visualSignalStatus",
                        "field_path": "m_value (second).m_values.m_visualSignals.m_visualSignalStatus",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            9,
                            9,
                            9,
                            9,
                            9,
                            9,
                            9,
                            9,
                            9,
                            9
                          ]
                        }
                      }
                    }
                  }
                },
                "m_vyInconsistent": {
                  "field_name": "m_vyInconsistent",
                  "field_path": "m_value (second).m_values.m_vyInconsistent",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ]
                  }
                },
                "m_vyUnreliableAccumulated": {
                  "field_name": "m_vyUnreliableAccumulated",
                  "field_path": "m_value (second).m_values.m_vyUnreliableAccumulated",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0,
                      0.0
                    ]
                  }
                },
                "m_wExistOfAssociatedVideoObject": {
                  "field_name": "m_wExistOfAssociatedVideoObject",
                  "field_path": "m_value (second).m_values.m_wExistOfAssociatedVideoObject",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=float64, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "float64",
                    "size": 30144,
                    "sample_values": [
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625,
                      0.9998931884765625
                    ]
                  }
                },
                "m_yawAngleTrustworthy": {
                  "field_name": "m_yawAngleTrustworthy",
                  "field_path": "m_value (second).m_values.m_yawAngleTrustworthy",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Array: dtype=uint8, shape=(32, 942)",
                  "converted_value": {
                    "type": "large_array",
                    "shape": [
                      32,
                      942
                    ],
                    "dtype": "uint8",
                    "size": 30144,
                    "sample_values": [
                      0,
                      0,
                      0,
                      0,
                      1,
                      1,
                      1,
                      1,
                      1,
                      1
                    ]
                  }
                },
                "m_yawAngleVCP": {
                  "field_name": "m_yawAngleVCP",
                  "field_path": "m_value (second).m_values.m_yawAngleVCP",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_covarianceMatrix', 'm_muVector'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.m_yawAngleVCP",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_covarianceMatrix",
                      "m_muVector"
                    ],
                    "field_count": 2,
                    "total_size": 1,
                    "dtype": "[('m_covarianceMatrix', 'O'), ('m_muVector', 'O')]",
                    "field_values": {
                      "m_covarianceMatrix": {
                        "field_name": "m_covarianceMatrix",
                        "field_path": "m_value (second).m_values.m_yawAngleVCP.m_covarianceMatrix",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_yawAngleVCP.m_covarianceMatrix",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_yawAngleVCP.m_covarianceMatrix.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0,
                                    0.0001968851574929431,
                                    0.00015834011719562113,
                                    0.002131055109202862,
                                    0.003750164993107319,
                                    0.0003186195099260658,
                                    0.00015409314073622227
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_muVector": {
                        "field_name": "m_muVector",
                        "field_path": "m_value (second).m_values.m_yawAngleVCP.m_muVector",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_data'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.m_yawAngleVCP.m_muVector",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_data"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_data', 'O')]",
                          "field_values": {
                            "m_data": {
                              "field_name": "m_data",
                              "field_path": "m_value (second).m_values.m_yawAngleVCP.m_muVector.m_data",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Structured array with fields: ['m_value'], shape: (1, 1)",
                              "converted_value": {
                                "m_value": {
                                  "type": "large_array",
                                  "shape": [
                                    32,
                                    942
                                  ],
                                  "dtype": "float64",
                                  "size": 30144,
                                  "sample_values": [
                                    2.8133392333984375e-05,
                                    -0.0017943382263183594,
                                    -0.0057332515716552734,
                                    -0.005822658538818359,
                                    -0.02469635009765625,
                                    -0.03347063064575195,
                                    -0.03372359275817871,
                                    -0.03315138816833496,
                                    -0.03447365760803223,
                                    -0.033808231353759766
                                  ]
                                }
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "sensorFilterFusHelper": {
                  "field_name": "sensorFilterFusHelper",
                  "field_path": "m_value (second).m_values.sensorFilterFusHelper",
                  "field_type": "<class 'numpy.ndarray'>",
                  "field_info": "    Structured array with fields: ['m_allActiveSensorTypesContributedInLastCycle', 'm_timePassedSinceAllActiveSensorTypesContributed', 'm_timePassedSinceAllActiveSensorTypesStartedToContribute', 'm_totalNumSensorUpdates', 'm_untrustworthyUpdates', 'm_updatesSinceLastSensorUpdate'], shape: (1, 1)",
                  "recursive_extraction": {
                    "extraction_path": "m_value (second).m_values.sensorFilterFusHelper",
                    "current_depth": 2,
                    "max_depth": 4,
                    "data_type": "<class 'numpy.ndarray'>",
                    "extraction_status": "success",
                    "array_type": "structured",
                    "shape": [
                      1,
                      1
                    ],
                    "field_names": [
                      "m_allActiveSensorTypesContributedInLastCycle",
                      "m_timePassedSinceAllActiveSensorTypesContributed",
                      "m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                      "m_totalNumSensorUpdates",
                      "m_untrustworthyUpdates",
                      "m_updatesSinceLastSensorUpdate"
                    ],
                    "field_count": 6,
                    "total_size": 1,
                    "dtype": "[('m_allActiveSensorTypesContributedInLastCycle', 'O'), ('m_timePassedSinceAllActiveSensorTypesContributed', 'O'), ('m_timePassedSinceAllActiveSensorTypesStartedToContribute', 'O'), ('m_totalNumSensorUpdates', 'O'), ('m_untrustworthyUpdates', 'O'), ('m_updatesSinceLastSensorUpdate', 'O')]",
                    "field_values": {
                      "m_allActiveSensorTypesContributedInLastCycle": {
                        "field_name": "m_allActiveSensorTypesContributedInLastCycle",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_allActiveSensorTypesContributedInLastCycle",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Array: dtype=uint8, shape=(32, 942)",
                        "converted_value": {
                          "type": "large_array",
                          "shape": [
                            32,
                            942
                          ],
                          "dtype": "uint8",
                          "size": 30144,
                          "sample_values": [
                            0,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                          ]
                        }
                      },
                      "m_timePassedSinceAllActiveSensorTypesContributed": {
                        "field_name": "m_timePassedSinceAllActiveSensorTypesContributed",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesContributed",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesContributed",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesContributed.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  65535,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_timePassedSinceAllActiveSensorTypesStartedToContribute": {
                        "field_name": "m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesStartedToContribute",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_timePassedSinceAllActiveSensorTypesStartedToContribute.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint16, shape=(32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  32,
                                  942
                                ],
                                "dtype": "uint16",
                                "size": 30144,
                                "sample_values": [
                                  65535,
                                  0,
                                  307,
                                  555,
                                  858,
                                  1126,
                                  1351,
                                  1579,
                                  1843,
                                  2048
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_totalNumSensorUpdates": {
                        "field_name": "m_totalNumSensorUpdates",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_totalNumSensorUpdates",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.sensorFilterFusHelper.m_totalNumSensorUpdates",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_totalNumSensorUpdates.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(5, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  5,
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 150720,
                                "sample_values": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9,
                                  10
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_untrustworthyUpdates": {
                        "field_name": "m_untrustworthyUpdates",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_untrustworthyUpdates",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.sensorFilterFusHelper.m_untrustworthyUpdates",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_untrustworthyUpdates.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(5, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  5,
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 150720,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      },
                      "m_updatesSinceLastSensorUpdate": {
                        "field_name": "m_updatesSinceLastSensorUpdate",
                        "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_updatesSinceLastSensorUpdate",
                        "field_type": "<class 'numpy.ndarray'>",
                        "field_info": "      Structured array with fields: ['m_value'], shape: (1, 1)",
                        "recursive_extraction": {
                          "extraction_path": "m_value (second).m_values.sensorFilterFusHelper.m_updatesSinceLastSensorUpdate",
                          "current_depth": 3,
                          "max_depth": 4,
                          "data_type": "<class 'numpy.ndarray'>",
                          "extraction_status": "success",
                          "array_type": "structured",
                          "shape": [
                            1,
                            1
                          ],
                          "field_names": [
                            "m_value"
                          ],
                          "field_count": 1,
                          "total_size": 1,
                          "dtype": "[('m_value', 'O')]",
                          "field_values": {
                            "m_value": {
                              "field_name": "m_value",
                              "field_path": "m_value (second).m_values.sensorFilterFusHelper.m_updatesSinceLastSensorUpdate.m_value",
                              "field_type": "<class 'numpy.ndarray'>",
                              "field_info": "        Array: dtype=uint8, shape=(5, 32, 942)",
                              "converted_value": {
                                "type": "large_array",
                                "shape": [
                                  5,
                                  32,
                                  942
                                ],
                                "dtype": "uint8",
                                "size": 150720,
                                "sample_values": [
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0
                                ]
                              },
                              "recursion_stopped": "Max depth reached"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "success": true
    },
    "step_5_final_values": {
      "level_name": "m_values",
      "description": "Final values extraction",
      "extraction_result": {
        "extraction_status": "success",
        "dep_id": 0,
        "cycle_number": 100,
        "available_fields": [
          "m_values"
        ],
        "field_extractions": {
          "m_values": {
            "field_name": "m_values",
            "extraction_status": "success",
            "field_metadata": {
              "field_type": "<class 'numpy.ndarray'>",
              "field_shape": [
                1,
                1
              ],
              "field_size": 1,
              "field_dtype": "[('m_AvgVObjDxError', 'O'), ('m_TransferredFromSep', 'O'), ('m_additionalDepMembers', 'O'), ('m_alternativeHypothesis', 'O'), ('m_avgAlphaInnovation', 'O'), ('m_avgDxInnovation', 'O'), ('m_badSensorBasedInnoCount', 'O'), ('m_changedObjectTypeBasedOnVelocity', 'O'), ('m_cornerAngleInnoDebugState', 'O'), ('m_cornerDrInnoDebugState', 'O'), ('m_createdByVideoWithHighVy', 'O'), ('m_currentOncomingCounterBasedOnLocations', 'O'), ('m_dBRcs', 'O'), ('m_dimension', 'O'), ('m_dimensionCovarianceMatrixDiagonal', 'O'), ('m_dxDistanceWhereObjStopped', 'O'), ('m_elevation', 'O'), ('m_elevationVCPFusedQM', 'O'), ('m_expectedVrHighEnoughForMuDopplerCounter', 'O'), ('m_filterType', 'O'), ('m_functionRelevanceBitField', 'O'), ('m_heightVCPFusedQM', 'O'), ('m_id', 'O'), ('m_idOfReplacedObject', 'O'), ('m_implausibleDepCounter', 'O'), ('m_initialPos', 'O'), ('m_isCTModelUsedForPrediction', 'O'), ('m_isMeasurable', 'O'), ('m_isMeasured', 'O'), ('m_isOrientationImplausibleCompared2Vid', 'O'), ('m_isPossibleRadarCrossPathGhost', 'O'), ('m_isSuppressedDueToVideoOtcPostProcessing', 'O'), ('m_isSuppressedUntilNextVideoUpdate', 'O'), ('m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'O'), ('m_isValid', 'O'), ('m_longitudinalSimilarObjectCycleCnt', 'O'), ('m_microDopplerFilterState', 'O'), ('m_microDopplerFiltered', 'O'), ('m_modulationHistory', 'O'), ('m_movementHistoryCounter', 'O'), ('m_movingLocationCounter', 'O'), ('m_nonPlausibleLocationCnt', 'O'), ('m_numConsecutiveCyclesWithoutOncomingLocations', 'O'), ('m_numCyclesExisting', 'O'), ('m_numCyclesNoModelBasedOrientationEstimationPossible', 'O'), ('m_numCyclesNoOrientationUpdate', 'O'), ('m_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'O'), ('m_numCyclesSinceMotionModelChange', 'O'), ('m_numCyclesTwoWheelerRefPtUsedForUpdate', 'O'), ('m_numMicroDopplerCycles', 'O'), ('m_objectCorridorRelation', 'O'), ('m_objectOrientationUnreliableCount', 'O'), ('m_objectTypeTree', 'O'), ('m_orientationEstimate', 'O'), ('m_orientationUpdateStatus', 'O'), ('m_pNonObstacleRCSOnlyClassifier', 'O'), ('m_perType', 'O'), ('m_postProcessBitField', 'O'), ('m_probHasBeenObservedExisting', 'O'), ('m_probHasBeenObservedMoving', 'O'), ('m_probIsCurrentlyExisting', 'O'), ('m_probIsCurrentlyMoving', 'O'), ('m_radarAngleInnoDebugState', 'O'), ('m_radarBasedInnovation', 'O'), ('m_radarDrInnoDebugState', 'O'), ('m_radarRawAlphaInnovation', 'O'), ('m_recentlyUsedFrontCornerMeasurementHandle', 'O'), ('m_recentlyUsedVideoMeasurementHandle', 'O'), ('m_referencePointIdx', 'O'), ('m_relevantRadialInnovationInCm', 'O'), ('m_sensorMeasuredHistory', 'O'), ('m_splitCounter', 'O'), ('m_state', 'O'), ('m_stationaryLocationsOnlyCounter', 'O'), ('m_stoppingSplitCounter', 'O'), ('m_suspiciousRefPointCounter', 'O'), ('m_totalNumCyclesWithOncomingLocations', 'O'), ('m_transferredFromSepCycle', 'O'), ('m_turnRateForCT', 'O'), ('m_updateDetails', 'O'), ('m_validModulations', 'O'), ('m_varianceOfTurnRateAfterPredictionWithCT', 'O'), ('m_varianceTangentialAcc', 'O'), ('m_videoAngleInnoDebugState', 'O'), ('m_videoBasedInnovation', 'O'), ('m_videoDrInnoDebugState', 'O'), ('m_videoInputWithOncomingVrCounter', 'O'), ('m_videoInvTtc', 'O'), ('m_videoLaneAssociation', 'O'), ('m_videoRawAlphaInnovation', 'O'), ('m_videoVr', 'O'), ('m_videoVy', 'O'), ('m_visualSignals', 'O'), ('m_vyInconsistent', 'O'), ('m_vyUnreliableAccumulated', 'O'), ('m_wExistOfAssociatedVideoObject', 'O'), ('m_yawAngleTrustworthy', 'O'), ('m_yawAngleVCP', 'O'), ('sensorFilterFusHelper', 'O')]"
            },
            "extracted_data": {
              "array_shape": [
                1,
                1
              ],
              "extraction_success": false,
              "extracted_values": {},
              "extraction_indices": [],
              "error": "Cycle 100 out of range (max: 0)"
            },
            "extraction_method": "multi_dimensional_array"
          }
        },
        "extraction_summary": {
          "total_fields_processed": 1,
          "successful_extractions": 1,
          "failed_extractions": 0,
          "extraction_methods": {
            "multi_dimensional_array": 1
          },
          "extracted_value_types": {},
          "meaningful_values": {
            "m_values": {
              "array_shape": [
                1,
                1
              ],
              "extraction_success": false,
              "extracted_values": {},
              "extraction_indices": [],
              "error": "Cycle 100 out of range (max: 0)"
            }
          }
        }
      },
      "success": true
    }
  },
  "extracted_values": {
    "extraction_parameters": {
      "dep_id": 0,
      "cycle_number": 100
    },
    "navigation_data": {
      "step_1_root": {
        "level_name": "g_PerDepRunnable_m_depPort_out",
        "description": "Root level dependency data",
        "key_fields": [
          "m_collectionData",
          "m_listMemory",
          "m_listMetaData",
          "m_receivedValidUpdateExternal",
          "m_sequenceNumber",
          "time"
        ],
        "data_type": "structured"
      },
      "step_2_listmemory": {
        "level_name": "m_listMemory",
        "description": "List memory structure",
        "key_fields": [
          "m_ownership",
          "m_value"
        ],
        "data_type": "structured"
      },
      "step_3_first_value": {
        "level_name": "m_value (first)",
        "description": "First level value structure",
        "key_fields": [
          "m_next",
          "m_prev",
          "m_value"
        ],
        "data_type": "structured"
      },
      "step_4_second_value": {
        "level_name": "m_value (second)",
        "description": "Second level value structure",
        "key_fields": [
          "m_values"
        ],
        "data_type": "structured"
      },
      "step_5_final_values": {
        "level_name": "m_values",
        "description": "Final values extraction",
        "key_fields": [],
        "data_type": "unknown"
      }
    },
    "final_extracted_values": {
      "m_values": {
        "field_name": "m_values",
        "extraction_status": "success",
        "field_metadata": {
          "field_type": "<class 'numpy.ndarray'>",
          "field_shape": [
            1,
            1
          ],
          "field_size": 1,
          "field_dtype": "[('m_AvgVObjDxError', 'O'), ('m_TransferredFromSep', 'O'), ('m_additionalDepMembers', 'O'), ('m_alternativeHypothesis', 'O'), ('m_avgAlphaInnovation', 'O'), ('m_avgDxInnovation', 'O'), ('m_badSensorBasedInnoCount', 'O'), ('m_changedObjectTypeBasedOnVelocity', 'O'), ('m_cornerAngleInnoDebugState', 'O'), ('m_cornerDrInnoDebugState', 'O'), ('m_createdByVideoWithHighVy', 'O'), ('m_currentOncomingCounterBasedOnLocations', 'O'), ('m_dBRcs', 'O'), ('m_dimension', 'O'), ('m_dimensionCovarianceMatrixDiagonal', 'O'), ('m_dxDistanceWhereObjStopped', 'O'), ('m_elevation', 'O'), ('m_elevationVCPFusedQM', 'O'), ('m_expectedVrHighEnoughForMuDopplerCounter', 'O'), ('m_filterType', 'O'), ('m_functionRelevanceBitField', 'O'), ('m_heightVCPFusedQM', 'O'), ('m_id', 'O'), ('m_idOfReplacedObject', 'O'), ('m_implausibleDepCounter', 'O'), ('m_initialPos', 'O'), ('m_isCTModelUsedForPrediction', 'O'), ('m_isMeasurable', 'O'), ('m_isMeasured', 'O'), ('m_isOrientationImplausibleCompared2Vid', 'O'), ('m_isPossibleRadarCrossPathGhost', 'O'), ('m_isSuppressedDueToVideoOtcPostProcessing', 'O'), ('m_isSuppressedUntilNextVideoUpdate', 'O'), ('m_isUpdatedWithStatLocWithHighMDopplerWithOutgoingVr', 'O'), ('m_isValid', 'O'), ('m_longitudinalSimilarObjectCycleCnt', 'O'), ('m_microDopplerFilterState', 'O'), ('m_microDopplerFiltered', 'O'), ('m_modulationHistory', 'O'), ('m_movementHistoryCounter', 'O'), ('m_movingLocationCounter', 'O'), ('m_nonPlausibleLocationCnt', 'O'), ('m_numConsecutiveCyclesWithoutOncomingLocations', 'O'), ('m_numCyclesExisting', 'O'), ('m_numCyclesNoModelBasedOrientationEstimationPossible', 'O'), ('m_numCyclesNoOrientationUpdate', 'O'), ('m_numCyclesSinceLastVideoUpdateWithAngularVelocity', 'O'), ('m_numCyclesSinceMotionModelChange', 'O'), ('m_numCyclesTwoWheelerRefPtUsedForUpdate', 'O'), ('m_numMicroDopplerCycles', 'O'), ('m_objectCorridorRelation', 'O'), ('m_objectOrientationUnreliableCount', 'O'), ('m_objectTypeTree', 'O'), ('m_orientationEstimate', 'O'), ('m_orientationUpdateStatus', 'O'), ('m_pNonObstacleRCSOnlyClassifier', 'O'), ('m_perType', 'O'), ('m_postProcessBitField', 'O'), ('m_probHasBeenObservedExisting', 'O'), ('m_probHasBeenObservedMoving', 'O'), ('m_probIsCurrentlyExisting', 'O'), ('m_probIsCurrentlyMoving', 'O'), ('m_radarAngleInnoDebugState', 'O'), ('m_radarBasedInnovation', 'O'), ('m_radarDrInnoDebugState', 'O'), ('m_radarRawAlphaInnovation', 'O'), ('m_recentlyUsedFrontCornerMeasurementHandle', 'O'), ('m_recentlyUsedVideoMeasurementHandle', 'O'), ('m_referencePointIdx', 'O'), ('m_relevantRadialInnovationInCm', 'O'), ('m_sensorMeasuredHistory', 'O'), ('m_splitCounter', 'O'), ('m_state', 'O'), ('m_stationaryLocationsOnlyCounter', 'O'), ('m_stoppingSplitCounter', 'O'), ('m_suspiciousRefPointCounter', 'O'), ('m_totalNumCyclesWithOncomingLocations', 'O'), ('m_transferredFromSepCycle', 'O'), ('m_turnRateForCT', 'O'), ('m_updateDetails', 'O'), ('m_validModulations', 'O'), ('m_varianceOfTurnRateAfterPredictionWithCT', 'O'), ('m_varianceTangentialAcc', 'O'), ('m_videoAngleInnoDebugState', 'O'), ('m_videoBasedInnovation', 'O'), ('m_videoDrInnoDebugState', 'O'), ('m_videoInputWithOncomingVrCounter', 'O'), ('m_videoInvTtc', 'O'), ('m_videoLaneAssociation', 'O'), ('m_videoRawAlphaInnovation', 'O'), ('m_videoVr', 'O'), ('m_videoVy', 'O'), ('m_visualSignals', 'O'), ('m_vyInconsistent', 'O'), ('m_vyUnreliableAccumulated', 'O'), ('m_wExistOfAssociatedVideoObject', 'O'), ('m_yawAngleTrustworthy', 'O'), ('m_yawAngleVCP', 'O'), ('sensorFilterFusHelper', 'O')]"
        },
        "extracted_data": {
          "array_shape": [
            1,
            1
          ],
          "extraction_success": false,
          "extracted_values": {},
          "extraction_indices": [],
          "error": "Cycle 100 out of range (max: 0)"
        },
        "extraction_method": "multi_dimensional_array"
      }
    },
    "value_hierarchy": {
      "numeric_values": {},
      "array_values": {},
      "structured_values": {},
      "error_values": {}
    },
    "extraction_statistics": {
      "total_fields_processed": 1,
      "successful_extractions": 1,
      "failed_extractions": 0,
      "extraction_methods": {
        "multi_dimensional_array": 1
      },
      "extracted_value_types": {},
      "meaningful_values": {
        "m_values": {
          "array_shape": [
            1,
            1
          ],
          "extraction_success": false,
          "extracted_values": {},
          "extraction_indices": [],
          "error": "Cycle 100 out of range (max: 0)"
        }
      }
    }
  },
  "errors": []
}